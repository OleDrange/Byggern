
Byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000024a  00800100  00001a22  00001ab6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a22  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000019  0080034a  0080034a  00001d00  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001d00  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000320  00000000  00000000  00001d5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003468  00000000  00000000  0000207c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000130f  00000000  00000000  000054e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000129c  00000000  00000000  000067f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000008a8  00000000  00000000  00007a90  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000acc  00000000  00000000  00008338  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000020bc  00000000  00000000  00008e04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000002c8  00000000  00000000  0000aec0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <__vector_1>
       8:	0c 94 d3 01 	jmp	0x3a6	; 0x3a6 <__vector_2>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <oled_goto_column+0x2>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	13 e0       	ldi	r17, 0x03	; 3
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e2 e2       	ldi	r30, 0x22	; 34
     37c:	fa e1       	ldi	r31, 0x1A	; 26
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	aa 34       	cpi	r26, 0x4A	; 74
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	23 e0       	ldi	r18, 0x03	; 3
     38c:	aa e4       	ldi	r26, 0x4A	; 74
     38e:	b3 e0       	ldi	r27, 0x03	; 3
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a3 36       	cpi	r26, 0x63	; 99
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 37 02 	call	0x46e	; 0x46e <main>
     39e:	0c 94 0f 0d 	jmp	0x1a1e	; 0x1a1e <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <__vector_2>:
     3a6:	1f 92       	push	r1
     3a8:	0f 92       	push	r0
     3aa:	0f b6       	in	r0, 0x3f	; 63
     3ac:	0f 92       	push	r0
     3ae:	11 24       	eor	r1, r1
     3b0:	8f 93       	push	r24
     3b2:	ef 93       	push	r30
     3b4:	ff 93       	push	r31
     3b6:	e0 91 06 01 	lds	r30, 0x0106
     3ba:	f0 91 07 01 	lds	r31, 0x0107
     3be:	80 81       	ld	r24, Z
     3c0:	80 93 4e 03 	sts	0x034E, r24
     3c4:	ff 91       	pop	r31
     3c6:	ef 91       	pop	r30
     3c8:	8f 91       	pop	r24
     3ca:	0f 90       	pop	r0
     3cc:	0f be       	out	0x3f, r0	; 63
     3ce:	0f 90       	pop	r0
     3d0:	1f 90       	pop	r1
     3d2:	18 95       	reti

000003d4 <ADC_init>:
     3d4:	8b 98       	cbi	0x11, 3	; 17
     3d6:	93 9a       	sbi	0x12, 3	; 18
     3d8:	f8 94       	cli
     3da:	85 b7       	in	r24, 0x35	; 53
     3dc:	88 60       	ori	r24, 0x08	; 8
     3de:	85 bf       	out	0x35, r24	; 53
     3e0:	85 b7       	in	r24, 0x35	; 53
     3e2:	8b 7f       	andi	r24, 0xFB	; 251
     3e4:	85 bf       	out	0x35, r24	; 53
     3e6:	8b b7       	in	r24, 0x3b	; 59
     3e8:	80 68       	ori	r24, 0x80	; 128
     3ea:	8b bf       	out	0x3b, r24	; 59
     3ec:	78 94       	sei
     3ee:	08 95       	ret

000003f0 <get_ADC_data>:
     3f0:	e0 91 06 01 	lds	r30, 0x0106
     3f4:	f0 91 07 01 	lds	r31, 0x0107
     3f8:	80 81       	ld	r24, Z
     3fa:	08 95       	ret

000003fc <ADC_start_read>:
     3fc:	81 30       	cpi	r24, 0x01	; 1
     3fe:	a9 f0       	breq	.+42     	; 0x42a <ADC_start_read+0x2e>
     400:	90 f0       	brcs	.+36     	; 0x426 <ADC_start_read+0x2a>
     402:	82 30       	cpi	r24, 0x02	; 2
     404:	19 f0       	breq	.+6      	; 0x40c <ADC_start_read+0x10>
     406:	83 30       	cpi	r24, 0x03	; 3
     408:	19 f0       	breq	.+6      	; 0x410 <ADC_start_read+0x14>
     40a:	04 c0       	rjmp	.+8      	; 0x414 <ADC_start_read+0x18>
     40c:	86 e0       	ldi	r24, 0x06	; 6
     40e:	0e c0       	rjmp	.+28     	; 0x42c <ADC_start_read+0x30>
     410:	87 e0       	ldi	r24, 0x07	; 7
     412:	0c c0       	rjmp	.+24     	; 0x42c <ADC_start_read+0x30>
     414:	8c e2       	ldi	r24, 0x2C	; 44
     416:	91 e0       	ldi	r25, 0x01	; 1
     418:	9f 93       	push	r25
     41a:	8f 93       	push	r24
     41c:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <printf>
     420:	0f 90       	pop	r0
     422:	0f 90       	pop	r0
     424:	08 95       	ret
     426:	84 e0       	ldi	r24, 0x04	; 4
     428:	01 c0       	rjmp	.+2      	; 0x42c <ADC_start_read+0x30>
     42a:	85 e0       	ldi	r24, 0x05	; 5
     42c:	e0 91 06 01 	lds	r30, 0x0106
     430:	f0 91 07 01 	lds	r31, 0x0107
     434:	80 83       	st	Z, r24
     436:	08 95       	ret

00000438 <My_serial_Transmit>:
}

void My_serial_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
     438:	5d 9b       	sbis	0x0b, 5	; 11
     43a:	fe cf       	rjmp	.-4      	; 0x438 <My_serial_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     43c:	8c b9       	out	0x0c, r24	; 12
     43e:	08 95       	ret

00000440 <My_serial_Receive>:
}

unsigned char My_serial_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) );
     440:	5f 9b       	sbis	0x0b, 7	; 11
     442:	fe cf       	rjmp	.-4      	; 0x440 <My_serial_Receive>
	/* Get and return received data from buffer */
	return UDR0;
     444:	8c b1       	in	r24, 0x0c	; 12
     446:	08 95       	ret

00000448 <My_serial_Init>:


void My_serial_Init( unsigned int ubrr )
{
	
	MCUCR |= (1 << SRE);
     448:	25 b7       	in	r18, 0x35	; 53
     44a:	20 68       	ori	r18, 0x80	; 128
     44c:	25 bf       	out	0x35, r18	; 53
	SFIOR |= (1 << XMM2);
     44e:	20 b7       	in	r18, 0x30	; 48
     450:	20 62       	ori	r18, 0x20	; 32
     452:	20 bf       	out	0x30, r18	; 48
	
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     454:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
     456:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     458:	88 e1       	ldi	r24, 0x18	; 24
     45a:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
     45c:	8e e8       	ldi	r24, 0x8E	; 142
     45e:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(My_serial_Transmit, My_serial_Receive);
     460:	60 e2       	ldi	r22, 0x20	; 32
     462:	72 e0       	ldi	r23, 0x02	; 2
     464:	8c e1       	ldi	r24, 0x1C	; 28
     466:	92 e0       	ldi	r25, 0x02	; 2
     468:	0e 94 b1 09 	call	0x1362	; 0x1362 <fdevopen>
     46c:	08 95       	ret

0000046e <main>:
		}
		return 0;
}
int main( )
{
	My_serial_Init ( MYUBRR );
     46e:	8f e1       	ldi	r24, 0x1F	; 31
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	0e 94 24 02 	call	0x448	; 0x448 <My_serial_Init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     476:	2f ef       	ldi	r18, 0xFF	; 255
     478:	8f ef       	ldi	r24, 0xFF	; 255
     47a:	9e e0       	ldi	r25, 0x0E	; 14
     47c:	21 50       	subi	r18, 0x01	; 1
     47e:	80 40       	sbci	r24, 0x00	; 0
     480:	90 40       	sbci	r25, 0x00	; 0
     482:	e1 f7       	brne	.-8      	; 0x47c <main+0xe>
     484:	00 c0       	rjmp	.+0      	; 0x486 <main+0x18>
     486:	00 00       	nop
	_delay_ms(1000);
	ADC_init();
     488:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <ADC_init>
	Joystick_calibrate();
     48c:	0e 94 b6 03 	call	0x76c	; 0x76c <Joystick_calibrate>
	oled_init();
     490:	0e 94 0e 06 	call	0xc1c	; 0xc1c <oled_init>
	menu* mymenu = oled_menu_init();
     494:	0e 94 0a 07 	call	0xe14	; 0xe14 <oled_menu_init>
	can_init(MODE_NORMAL);
     498:	80 e0       	ldi	r24, 0x00	; 0
     49a:	0e 94 79 02 	call	0x4f2	; 0x4f2 <can_init>
	printf("NEW START!!!!");
     49e:	8e e6       	ldi	r24, 0x6E	; 110
     4a0:	92 e0       	ldi	r25, 0x02	; 2
     4a2:	9f 93       	push	r25
     4a4:	8f 93       	push	r24
     4a6:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <printf>
     4aa:	0f 90       	pop	r0
     4ac:	0f 90       	pop	r0
		//
		//printf("SLIDER L : %d  ",slider.L);
		//printf("SLIDER R : %d \r\n" ,slider.R);
		//
		// MenyTEST
		oled_menu_select();
     4ae:	0e 94 82 07 	call	0xf04	; 0xf04 <oled_menu_select>
		//printf("JoistixPos y: %d  ",joystickPos().yPos);
		//printf("JoistixDIR : %d  \r\n",joystickPos().Dir);
	
		
		
		sendInfo();
     4b2:	0e 94 8e 03 	call	0x71c	; 0x71c <sendInfo>
     4b6:	2f ef       	ldi	r18, 0xFF	; 255
     4b8:	8f ef       	ldi	r24, 0xFF	; 255
     4ba:	92 e0       	ldi	r25, 0x02	; 2
     4bc:	21 50       	subi	r18, 0x01	; 1
     4be:	80 40       	sbci	r24, 0x00	; 0
     4c0:	90 40       	sbci	r25, 0x00	; 0
     4c2:	e1 f7       	brne	.-8      	; 0x4bc <main+0x4e>
     4c4:	00 c0       	rjmp	.+0      	; 0x4c6 <main+0x58>
     4c6:	00 c0       	rjmp	.+0      	; 0x4c8 <main+0x5a>
     4c8:	f2 cf       	rjmp	.-28     	; 0x4ae <main+0x40>

000004ca <__vector_1>:
#include <avr/delay.h>

volatile int flag = 0;


ISR(INT0_vect){
     4ca:	1f 92       	push	r1
     4cc:	0f 92       	push	r0
     4ce:	0f b6       	in	r0, 0x3f	; 63
     4d0:	0f 92       	push	r0
     4d2:	11 24       	eor	r1, r1
     4d4:	8f 93       	push	r24
     4d6:	9f 93       	push	r25
	flag = 1;
     4d8:	81 e0       	ldi	r24, 0x01	; 1
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	90 93 4d 03 	sts	0x034D, r25
     4e0:	80 93 4c 03 	sts	0x034C, r24
	//printf("\r\n INTERUPT\r\n");
}
     4e4:	9f 91       	pop	r25
     4e6:	8f 91       	pop	r24
     4e8:	0f 90       	pop	r0
     4ea:	0f be       	out	0x3f, r0	; 63
     4ec:	0f 90       	pop	r0
     4ee:	1f 90       	pop	r1
     4f0:	18 95       	reti

000004f2 <can_init>:

void can_init(uint8_t mode){

	mcp_2515_init(mode);
     4f2:	0e 94 4b 03 	call	0x696	; 0x696 <mcp_2515_init>
	
	
	mcp_2515_write(MCP_CANINTE, MCP_RX_INT);
     4f6:	63 e0       	ldi	r22, 0x03	; 3
     4f8:	8b e2       	ldi	r24, 0x2B	; 43
     4fa:	0e 94 32 03 	call	0x664	; 0x664 <mcp_2515_write>
	
	// Disable global interrupts
	cli();
     4fe:	f8 94       	cli
	// Interrupt on falling edge PD2
	set_bit(MCUCR, ISC01);
     500:	85 b7       	in	r24, 0x35	; 53
     502:	82 60       	ori	r24, 0x02	; 2
     504:	85 bf       	out	0x35, r24	; 53
	clear_bit(MCUCR, ISC00);
     506:	85 b7       	in	r24, 0x35	; 53
     508:	8e 7f       	andi	r24, 0xFE	; 254
     50a:	85 bf       	out	0x35, r24	; 53
	// Enable interrupt on PD2
	set_bit(GICR,INT0);
     50c:	8b b7       	in	r24, 0x3b	; 59
     50e:	80 64       	ori	r24, 0x40	; 64
     510:	8b bf       	out	0x3b, r24	; 59
	// Enable global interrupts
	sei();
     512:	78 94       	sei
     514:	08 95       	ret

00000516 <can_transmit_complete>:
	mcp_2515_request_to_send(MCP_RTS_TX0 + buffer_number);
	//printf("buffer nr. %d\n\r",buffer_number);
	
}

int can_transmit_complete(int buffer_number){
     516:	cf 93       	push	r28
     518:	df 93       	push	r29
     51a:	ec 01       	movw	r28, r24
	uint8_t transmit_flag = mcp_2515_read(MCP_CANINTF);
     51c:	8c e2       	ldi	r24, 0x2C	; 44
     51e:	0e 94 20 03 	call	0x640	; 0x640 <mcp_2515_read>
	uint8_t interrupt_bits = (transmit_flag & (MCP_TX0IF + buffer_number*2));
     522:	9e 01       	movw	r18, r28
     524:	2e 5f       	subi	r18, 0xFE	; 254
     526:	3f 4f       	sbci	r19, 0xFF	; 255
     528:	42 2f       	mov	r20, r18
     52a:	44 0f       	add	r20, r20
     52c:	84 23       	and	r24, r20

	if(interrupt_bits == (MCP_TX0IF + buffer_number*2)){
     52e:	48 2f       	mov	r20, r24
     530:	50 e0       	ldi	r21, 0x00	; 0
     532:	22 0f       	add	r18, r18
     534:	33 1f       	adc	r19, r19
     536:	81 e0       	ldi	r24, 0x01	; 1
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	42 17       	cp	r20, r18
     53c:	53 07       	cpc	r21, r19
     53e:	11 f4       	brne	.+4      	; 0x544 <can_transmit_complete+0x2e>
     540:	80 e0       	ldi	r24, 0x00	; 0
     542:	90 e0       	ldi	r25, 0x00	; 0
			return 0;
	}
	return 1;
}
     544:	df 91       	pop	r29
     546:	cf 91       	pop	r28
     548:	08 95       	ret

0000054a <can_message_send>:
	}
	
	return message1;
}

void can_message_send(can_message* message){
     54a:	ef 92       	push	r14
     54c:	ff 92       	push	r15
     54e:	0f 93       	push	r16
     550:	1f 93       	push	r17
     552:	cf 93       	push	r28
     554:	df 93       	push	r29
     556:	ec 01       	movw	r28, r24
	
	static int buffer_number = 0;
	
	while (!can_transmit_complete(buffer_number)){
     558:	11 c0       	rjmp	.+34     	; 0x57c <can_message_send+0x32>
		buffer_number +=1;
     55a:	20 91 4a 03 	lds	r18, 0x034A
     55e:	30 91 4b 03 	lds	r19, 0x034B
     562:	2f 5f       	subi	r18, 0xFF	; 255
     564:	3f 4f       	sbci	r19, 0xFF	; 255
     566:	30 93 4b 03 	sts	0x034B, r19
     56a:	20 93 4a 03 	sts	0x034A, r18
		if (buffer_number > 2) {
     56e:	23 30       	cpi	r18, 0x03	; 3
     570:	31 05       	cpc	r19, r1
     572:	24 f0       	brlt	.+8      	; 0x57c <can_message_send+0x32>
			buffer_number = 0;
     574:	10 92 4b 03 	sts	0x034B, r1
     578:	10 92 4a 03 	sts	0x034A, r1

void can_message_send(can_message* message){
	
	static int buffer_number = 0;
	
	while (!can_transmit_complete(buffer_number)){
     57c:	80 91 4a 03 	lds	r24, 0x034A
     580:	90 91 4b 03 	lds	r25, 0x034B
     584:	0e 94 8b 02 	call	0x516	; 0x516 <can_transmit_complete>
     588:	89 2b       	or	r24, r25
     58a:	39 f3       	breq	.-50     	; 0x55a <can_message_send+0x10>
			buffer_number = 0;
		}
	}
	
	// Arbitration field identifier ID = 1337;    id high = 167  id low = 0
	unsigned int ID = message->id;
     58c:	88 81       	ld	r24, Y
     58e:	99 81       	ldd	r25, Y+1	; 0x01
	char id_high = ID / 8;
	char id_low = ID % 8;
     590:	28 2f       	mov	r18, r24
     592:	27 70       	andi	r18, 0x07	; 7
     594:	f2 2e       	mov	r15, r18
		}
	}
	
	// Arbitration field identifier ID = 1337;    id high = 167  id low = 0
	unsigned int ID = message->id;
	char id_high = ID / 8;
     596:	bc 01       	movw	r22, r24
     598:	76 95       	lsr	r23
     59a:	67 95       	ror	r22
     59c:	76 95       	lsr	r23
     59e:	67 95       	ror	r22
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
	char id_low = ID % 8;
	id_low = id_low*0b100000;
	mcp_2515_write(MCP_TXB0SIDH + 16 * buffer_number, id_high);
     5a4:	0a e4       	ldi	r16, 0x4A	; 74
     5a6:	13 e0       	ldi	r17, 0x03	; 3
     5a8:	f8 01       	movw	r30, r16
     5aa:	80 81       	ld	r24, Z
     5ac:	82 95       	swap	r24
     5ae:	80 7f       	andi	r24, 0xF0	; 240
     5b0:	8f 5c       	subi	r24, 0xCF	; 207
     5b2:	0e 94 32 03 	call	0x664	; 0x664 <mcp_2515_write>
	
	// Arbitration field identifier ID = 1337;    id high = 167  id low = 0
	unsigned int ID = message->id;
	char id_high = ID / 8;
	char id_low = ID % 8;
	id_low = id_low*0b100000;
     5b6:	6f 2d       	mov	r22, r15
     5b8:	62 95       	swap	r22
     5ba:	66 0f       	add	r22, r22
     5bc:	60 7e       	andi	r22, 0xE0	; 224
	mcp_2515_write(MCP_TXB0SIDH + 16 * buffer_number, id_high);
	mcp_2515_write(MCP_TXB0SIDL + 16 * buffer_number, id_low);
     5be:	f8 01       	movw	r30, r16
     5c0:	80 81       	ld	r24, Z
     5c2:	82 95       	swap	r24
     5c4:	80 7f       	andi	r24, 0xF0	; 240
     5c6:	8e 5c       	subi	r24, 0xCE	; 206
     5c8:	0e 94 32 03 	call	0x664	; 0x664 <mcp_2515_write>
	
	// Define data length of message
	uint8_t data_length = message->length;
     5cc:	ea 80       	ldd	r14, Y+2	; 0x02
	mcp_2515_write(MCP_TXB0DLC + 16 * buffer_number, data_length);
     5ce:	f8 01       	movw	r30, r16
     5d0:	80 81       	ld	r24, Z
     5d2:	82 95       	swap	r24
     5d4:	80 7f       	andi	r24, 0xF0	; 240
     5d6:	6e 2d       	mov	r22, r14
     5d8:	8b 5c       	subi	r24, 0xCB	; 203
     5da:	0e 94 32 03 	call	0x664	; 0x664 <mcp_2515_write>
	
	// Write data bytes to transmit buffer
	char* data_bytes = message->data;
     5de:	23 96       	adiw	r28, 0x03	; 3
	for (uint8_t byte = 0; byte < data_length; byte++) {
     5e0:	ee 20       	and	r14, r14
     5e2:	81 f0       	breq	.+32     	; 0x604 <can_message_send+0xba>
     5e4:	f1 2c       	mov	r15, r1
		mcp_2515_write(MCP_TXB0Dm + byte + 16 * buffer_number, data_bytes[byte]);
     5e6:	69 91       	ld	r22, Y+
     5e8:	f8 01       	movw	r30, r16
     5ea:	80 81       	ld	r24, Z
     5ec:	2f 2d       	mov	r18, r15
     5ee:	f0 e1       	ldi	r31, 0x10	; 16
     5f0:	8f 9f       	mul	r24, r31
     5f2:	20 0d       	add	r18, r0
     5f4:	11 24       	eor	r1, r1
     5f6:	82 2f       	mov	r24, r18
     5f8:	8a 5c       	subi	r24, 0xCA	; 202
     5fa:	0e 94 32 03 	call	0x664	; 0x664 <mcp_2515_write>
	uint8_t data_length = message->length;
	mcp_2515_write(MCP_TXB0DLC + 16 * buffer_number, data_length);
	
	// Write data bytes to transmit buffer
	char* data_bytes = message->data;
	for (uint8_t byte = 0; byte < data_length; byte++) {
     5fe:	f3 94       	inc	r15
     600:	fe 10       	cpse	r15, r14
     602:	f1 cf       	rjmp	.-30     	; 0x5e6 <can_message_send+0x9c>
		mcp_2515_write(MCP_TXB0Dm + byte + 16 * buffer_number, data_bytes[byte]);
	}
	
	// Request to send message, send if successful
	mcp_2515_request_to_send(MCP_RTS_TX0 + buffer_number);
     604:	80 91 4a 03 	lds	r24, 0x034A
     608:	8f 57       	subi	r24, 0x7F	; 127
     60a:	0e 94 83 03 	call	0x706	; 0x706 <mcp_2515_request_to_send>
	//printf("buffer nr. %d\n\r",buffer_number);
	
}
     60e:	df 91       	pop	r29
     610:	cf 91       	pop	r28
     612:	1f 91       	pop	r17
     614:	0f 91       	pop	r16
     616:	ff 90       	pop	r15
     618:	ef 90       	pop	r14
     61a:	08 95       	ret

0000061c <mcp_activate_slave>:
     61c:	c4 98       	cbi	0x18, 4	; 24
     61e:	08 95       	ret

00000620 <mcp_deactivate_slave>:
     620:	c4 9a       	sbi	0x18, 4	; 24
     622:	08 95       	ret

00000624 <mcp_2515_reset>:
     624:	0e 94 0e 03 	call	0x61c	; 0x61c <mcp_activate_slave>
     628:	80 ec       	ldi	r24, 0xC0	; 192
     62a:	0e 94 59 08 	call	0x10b2	; 0x10b2 <SPI_write>
     62e:	0e 94 10 03 	call	0x620	; 0x620 <mcp_deactivate_slave>
     632:	83 ec       	ldi	r24, 0xC3	; 195
     634:	99 e0       	ldi	r25, 0x09	; 9
     636:	01 97       	sbiw	r24, 0x01	; 1
     638:	f1 f7       	brne	.-4      	; 0x636 <mcp_2515_reset+0x12>
     63a:	00 c0       	rjmp	.+0      	; 0x63c <mcp_2515_reset+0x18>
     63c:	00 00       	nop
     63e:	08 95       	ret

00000640 <mcp_2515_read>:
     640:	cf 93       	push	r28
     642:	c8 2f       	mov	r28, r24
     644:	0e 94 0e 03 	call	0x61c	; 0x61c <mcp_activate_slave>
     648:	83 e0       	ldi	r24, 0x03	; 3
     64a:	0e 94 59 08 	call	0x10b2	; 0x10b2 <SPI_write>
     64e:	8c 2f       	mov	r24, r28
     650:	0e 94 59 08 	call	0x10b2	; 0x10b2 <SPI_write>
     654:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_read>
     658:	c8 2f       	mov	r28, r24
     65a:	0e 94 10 03 	call	0x620	; 0x620 <mcp_deactivate_slave>
     65e:	8c 2f       	mov	r24, r28
     660:	cf 91       	pop	r28
     662:	08 95       	ret

00000664 <mcp_2515_write>:
     664:	cf 93       	push	r28
     666:	df 93       	push	r29
     668:	d8 2f       	mov	r29, r24
     66a:	c6 2f       	mov	r28, r22
     66c:	0e 94 0e 03 	call	0x61c	; 0x61c <mcp_activate_slave>
     670:	82 e0       	ldi	r24, 0x02	; 2
     672:	0e 94 59 08 	call	0x10b2	; 0x10b2 <SPI_write>
     676:	8d 2f       	mov	r24, r29
     678:	0e 94 59 08 	call	0x10b2	; 0x10b2 <SPI_write>
     67c:	8c 2f       	mov	r24, r28
     67e:	0e 94 59 08 	call	0x10b2	; 0x10b2 <SPI_write>
     682:	0e 94 10 03 	call	0x620	; 0x620 <mcp_deactivate_slave>
     686:	df 91       	pop	r29
     688:	cf 91       	pop	r28
     68a:	08 95       	ret

0000068c <mcp_2515_set_mode>:
     68c:	68 2f       	mov	r22, r24
     68e:	8f e0       	ldi	r24, 0x0F	; 15
     690:	0e 94 32 03 	call	0x664	; 0x664 <mcp_2515_write>
     694:	08 95       	ret

00000696 <mcp_2515_init>:
     696:	cf 93       	push	r28
     698:	c8 2f       	mov	r28, r24
     69a:	0e 94 53 08 	call	0x10a6	; 0x10a6 <SPI_init>
     69e:	0e 94 12 03 	call	0x624	; 0x624 <mcp_2515_reset>
     6a2:	8e e0       	ldi	r24, 0x0E	; 14
     6a4:	0e 94 20 03 	call	0x640	; 0x640 <mcp_2515_read>
     6a8:	80 7e       	andi	r24, 0xE0	; 224
     6aa:	80 38       	cpi	r24, 0x80	; 128
     6ac:	71 f0       	breq	.+28     	; 0x6ca <mcp_2515_init+0x34>
     6ae:	1f 92       	push	r1
     6b0:	8f 93       	push	r24
     6b2:	8c e7       	ldi	r24, 0x7C	; 124
     6b4:	92 e0       	ldi	r25, 0x02	; 2
     6b6:	9f 93       	push	r25
     6b8:	8f 93       	push	r24
     6ba:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <printf>
     6be:	0f 90       	pop	r0
     6c0:	0f 90       	pop	r0
     6c2:	0f 90       	pop	r0
     6c4:	0f 90       	pop	r0
     6c6:	81 e0       	ldi	r24, 0x01	; 1
     6c8:	1c c0       	rjmp	.+56     	; 0x702 <mcp_2515_init+0x6c>
     6ca:	8c 2f       	mov	r24, r28
     6cc:	0e 94 46 03 	call	0x68c	; 0x68c <mcp_2515_set_mode>
     6d0:	8e e0       	ldi	r24, 0x0E	; 14
     6d2:	0e 94 20 03 	call	0x640	; 0x640 <mcp_2515_read>
     6d6:	80 7e       	andi	r24, 0xE0	; 224
     6d8:	8c 17       	cp	r24, r28
     6da:	91 f0       	breq	.+36     	; 0x700 <mcp_2515_init+0x6a>
     6dc:	1f 92       	push	r1
     6de:	8f 93       	push	r24
     6e0:	86 ec       	ldi	r24, 0xC6	; 198
     6e2:	92 e0       	ldi	r25, 0x02	; 2
     6e4:	9f 93       	push	r25
     6e6:	8f 93       	push	r24
     6e8:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <printf>
     6ec:	8a e0       	ldi	r24, 0x0A	; 10
     6ee:	93 e0       	ldi	r25, 0x03	; 3
     6f0:	0e 94 10 0a 	call	0x1420	; 0x1420 <puts>
     6f4:	0f 90       	pop	r0
     6f6:	0f 90       	pop	r0
     6f8:	0f 90       	pop	r0
     6fa:	0f 90       	pop	r0
     6fc:	81 e0       	ldi	r24, 0x01	; 1
     6fe:	01 c0       	rjmp	.+2      	; 0x702 <mcp_2515_init+0x6c>
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	cf 91       	pop	r28
     704:	08 95       	ret

00000706 <mcp_2515_request_to_send>:
     706:	cf 93       	push	r28
     708:	c8 2f       	mov	r28, r24
     70a:	0e 94 0e 03 	call	0x61c	; 0x61c <mcp_activate_slave>
     70e:	8c 2f       	mov	r24, r28
     710:	0e 94 59 08 	call	0x10b2	; 0x10b2 <SPI_write>
     714:	0e 94 10 03 	call	0x620	; 0x620 <mcp_deactivate_slave>
     718:	cf 91       	pop	r28
     71a:	08 95       	ret

0000071c <sendInfo>:
 * Created: 09.11.2019 11:15:14
 *  Author: juliessk
 */ 

#include "GameInfo.h"
void sendInfo(){
     71c:	0f 93       	push	r16
     71e:	1f 93       	push	r17
     720:	cf 93       	push	r28
     722:	df 93       	push	r29
     724:	cd b7       	in	r28, 0x3d	; 61
     726:	de b7       	in	r29, 0x3e	; 62
     728:	60 97       	sbiw	r28, 0x10	; 16
     72a:	0f b6       	in	r0, 0x3f	; 63
     72c:	f8 94       	cli
     72e:	de bf       	out	0x3e, r29	; 62
     730:	0f be       	out	0x3f, r0	; 63
     732:	cd bf       	out	0x3d, r28	; 61
	slider_str slider = slider_position();
     734:	0e 94 35 08 	call	0x106a	; 0x106a <slider_position>
     738:	08 2f       	mov	r16, r24
     73a:	19 2f       	mov	r17, r25
	
	Joystick minJoystick = joystickPos();
     73c:	0e 94 0f 04 	call	0x81e	; 0x81e <joystickPos>
	
	can_message canMessage;
	canMessage.data[0] = slider.L;
     740:	09 87       	std	Y+9, r16	; 0x09
	canMessage.data[1] = slider.R;
     742:	1a 87       	std	Y+10, r17	; 0x0a
	canMessage.data[2] = slider_left_button();
     744:	0e 94 4d 08 	call	0x109a	; 0x109a <slider_left_button>
     748:	8b 87       	std	Y+11, r24	; 0x0b
	//canMessage.data[3] = map(IOBORDBUTTONR,-100,100,0,200);
	//canMessage.data[4] = map(minJoystick.xPos,-100,100,0,200);
	canMessage.length = 3;
     74a:	83 e0       	ldi	r24, 0x03	; 3
     74c:	88 87       	std	Y+8, r24	; 0x08

	can_message_send(&canMessage);
     74e:	ce 01       	movw	r24, r28
     750:	06 96       	adiw	r24, 0x06	; 6
     752:	0e 94 a5 02 	call	0x54a	; 0x54a <can_message_send>
	
}
     756:	60 96       	adiw	r28, 0x10	; 16
     758:	0f b6       	in	r0, 0x3f	; 63
     75a:	f8 94       	cli
     75c:	de bf       	out	0x3e, r29	; 62
     75e:	0f be       	out	0x3f, r0	; 63
     760:	cd bf       	out	0x3d, r28	; 61
     762:	df 91       	pop	r29
     764:	cf 91       	pop	r28
     766:	1f 91       	pop	r17
     768:	0f 91       	pop	r16
     76a:	08 95       	ret

0000076c <Joystick_calibrate>:

uint8_t center_x , center_y;

void Joystick_calibrate(void){
	
	ADC_start_read(CHANNEL1);
     76c:	80 e0       	ldi	r24, 0x00	; 0
     76e:	0e 94 fe 01 	call	0x3fc	; 0x3fc <ADC_start_read>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     772:	82 e4       	ldi	r24, 0x42	; 66
     774:	8a 95       	dec	r24
     776:	f1 f7       	brne	.-4      	; 0x774 <Joystick_calibrate+0x8>
     778:	00 c0       	rjmp	.+0      	; 0x77a <Joystick_calibrate+0xe>
	_delay_us(200);
	center_x = get_ADC_data();
     77a:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <get_ADC_data>
     77e:	80 93 4f 03 	sts	0x034F, r24
	ADC_start_read(CHANNEL2);
     782:	81 e0       	ldi	r24, 0x01	; 1
     784:	0e 94 fe 01 	call	0x3fc	; 0x3fc <ADC_start_read>
     788:	82 e4       	ldi	r24, 0x42	; 66
     78a:	8a 95       	dec	r24
     78c:	f1 f7       	brne	.-4      	; 0x78a <Joystick_calibrate+0x1e>
     78e:	00 c0       	rjmp	.+0      	; 0x790 <Joystick_calibrate+0x24>
	_delay_us(200);
	center_y = get_ADC_data();
     790:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <get_ADC_data>
     794:	80 93 50 03 	sts	0x0350, r24
     798:	08 95       	ret

0000079a <JoystickDirection>:
	return position; 
	
	
}

Joystick JoystickDirection(Joystick position){
     79a:	cf 93       	push	r28
     79c:	df 93       	push	r29
     79e:	cd b7       	in	r28, 0x3d	; 61
     7a0:	de b7       	in	r29, 0x3e	; 62
     7a2:	2a 97       	sbiw	r28, 0x0a	; 10
     7a4:	0f b6       	in	r0, 0x3f	; 63
     7a6:	f8 94       	cli
     7a8:	de bf       	out	0x3e, r29	; 62
     7aa:	0f be       	out	0x3f, r0	; 63
     7ac:	cd bf       	out	0x3d, r28	; 61
     7ae:	4e 83       	std	Y+6, r20	; 0x06
     7b0:	5f 83       	std	Y+7, r21	; 0x07
     7b2:	68 87       	std	Y+8, r22	; 0x08
     7b4:	79 87       	std	Y+9, r23	; 0x09
     7b6:	2e 81       	ldd	r18, Y+6	; 0x06
     7b8:	3f 81       	ldd	r19, Y+7	; 0x07
     7ba:	48 85       	ldd	r20, Y+8	; 0x08
     7bc:	59 85       	ldd	r21, Y+9	; 0x09
	
	if(position.xPos < -50){
     7be:	2e 3c       	cpi	r18, 0xCE	; 206
     7c0:	9f ef       	ldi	r25, 0xFF	; 255
     7c2:	39 07       	cpc	r19, r25
     7c4:	24 f0       	brlt	.+8      	; 0x7ce <JoystickDirection+0x34>
		position.Dir = LEFT; 
	} else if (position.xPos > 50){
     7c6:	23 33       	cpi	r18, 0x33	; 51
     7c8:	31 05       	cpc	r19, r1
     7ca:	1c f4       	brge	.+6      	; 0x7d2 <JoystickDirection+0x38>
     7cc:	03 c0       	rjmp	.+6      	; 0x7d4 <JoystickDirection+0x3a>
}

Joystick JoystickDirection(Joystick position){
	
	if(position.xPos < -50){
		position.Dir = LEFT; 
     7ce:	80 e0       	ldi	r24, 0x00	; 0
     7d0:	01 c0       	rjmp	.+2      	; 0x7d4 <JoystickDirection+0x3a>
	} else if (position.xPos > 50){
		position.Dir = RIGHT;
     7d2:	81 e0       	ldi	r24, 0x01	; 1
	}
	
	if(position.yPos < -50){
     7d4:	4e 3c       	cpi	r20, 0xCE	; 206
     7d6:	9f ef       	ldi	r25, 0xFF	; 255
     7d8:	59 07       	cpc	r21, r25
     7da:	24 f0       	brlt	.+8      	; 0x7e4 <JoystickDirection+0x4a>
		position.Dir = DOWN; 
	} else if (position.yPos > 50){
     7dc:	43 33       	cpi	r20, 0x33	; 51
     7de:	51 05       	cpc	r21, r1
     7e0:	1c f4       	brge	.+6      	; 0x7e8 <JoystickDirection+0x4e>
     7e2:	03 c0       	rjmp	.+6      	; 0x7ea <JoystickDirection+0x50>
	} else if (position.xPos > 50){
		position.Dir = RIGHT;
	}
	
	if(position.yPos < -50){
		position.Dir = DOWN; 
     7e4:	83 e0       	ldi	r24, 0x03	; 3
     7e6:	01 c0       	rjmp	.+2      	; 0x7ea <JoystickDirection+0x50>
	} else if (position.yPos > 50){
		position.Dir = UP; 
     7e8:	82 e0       	ldi	r24, 0x02	; 2
	}
	if(position.xPos == 0 && position.yPos == 0){
     7ea:	21 15       	cp	r18, r1
     7ec:	31 05       	cpc	r19, r1
     7ee:	21 f4       	brne	.+8      	; 0x7f8 <JoystickDirection+0x5e>
     7f0:	41 15       	cp	r20, r1
     7f2:	51 05       	cpc	r21, r1
     7f4:	09 f4       	brne	.+2      	; 0x7f8 <JoystickDirection+0x5e>
		position.Dir = NEUTRAL; 
     7f6:	84 e0       	ldi	r24, 0x04	; 4
	}
	
	return position;
     7f8:	3a 83       	std	Y+2, r19	; 0x02
     7fa:	29 83       	std	Y+1, r18	; 0x01
     7fc:	5c 83       	std	Y+4, r21	; 0x04
     7fe:	4b 83       	std	Y+3, r20	; 0x03
     800:	3a 81       	ldd	r19, Y+2	; 0x02
     802:	5c 81       	ldd	r21, Y+4	; 0x04
}
     804:	68 2f       	mov	r22, r24
     806:	70 e0       	ldi	r23, 0x00	; 0
     808:	80 e0       	ldi	r24, 0x00	; 0
     80a:	90 e0       	ldi	r25, 0x00	; 0
     80c:	2a 96       	adiw	r28, 0x0a	; 10
     80e:	0f b6       	in	r0, 0x3f	; 63
     810:	f8 94       	cli
     812:	de bf       	out	0x3e, r29	; 62
     814:	0f be       	out	0x3f, r0	; 63
     816:	cd bf       	out	0x3d, r28	; 61
     818:	df 91       	pop	r29
     81a:	cf 91       	pop	r28
     81c:	08 95       	ret

0000081e <joystickPos>:
	_delay_us(200);
	center_y = get_ADC_data();
	 
}

Joystick joystickPos(void){
     81e:	0f 93       	push	r16
     820:	1f 93       	push	r17
     822:	cf 93       	push	r28
     824:	df 93       	push	r29
     826:	cd b7       	in	r28, 0x3d	; 61
     828:	de b7       	in	r29, 0x3e	; 62
     82a:	2a 97       	sbiw	r28, 0x0a	; 10
     82c:	0f b6       	in	r0, 0x3f	; 63
     82e:	f8 94       	cli
     830:	de bf       	out	0x3e, r29	; 62
     832:	0f be       	out	0x3f, r0	; 63
     834:	cd bf       	out	0x3d, r28	; 61
	uint8_t x, y; 
	Joystick position;
	position.xPos = 0;
	position.yPos = 0;
	
	ADC_start_read(CHANNEL1);
     836:	80 e0       	ldi	r24, 0x00	; 0
     838:	0e 94 fe 01 	call	0x3fc	; 0x3fc <ADC_start_read>
     83c:	82 e4       	ldi	r24, 0x42	; 66
     83e:	8a 95       	dec	r24
     840:	f1 f7       	brne	.-4      	; 0x83e <joystickPos+0x20>
     842:	00 c0       	rjmp	.+0      	; 0x844 <joystickPos+0x26>
	_delay_us(200);
	x = get_ADC_data();
     844:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <get_ADC_data>
	
	if(x > center_x){
     848:	20 91 4f 03 	lds	r18, 0x034F
     84c:	28 17       	cp	r18, r24
     84e:	a0 f4       	brcc	.+40     	; 0x878 <joystickPos+0x5a>
		position.xPos = 100 * (x - center_x) / (0xFF - center_x);
     850:	30 e0       	ldi	r19, 0x00	; 0
     852:	99 27       	eor	r25, r25
     854:	ac 01       	movw	r20, r24
     856:	42 1b       	sub	r20, r18
     858:	53 0b       	sbc	r21, r19
     85a:	64 e6       	ldi	r22, 0x64	; 100
     85c:	64 9f       	mul	r22, r20
     85e:	c0 01       	movw	r24, r0
     860:	65 9f       	mul	r22, r21
     862:	90 0d       	add	r25, r0
     864:	11 24       	eor	r1, r1
     866:	6f ef       	ldi	r22, 0xFF	; 255
     868:	70 e0       	ldi	r23, 0x00	; 0
     86a:	62 1b       	sub	r22, r18
     86c:	73 0b       	sbc	r23, r19
     86e:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__divmodhi4>
     872:	16 2f       	mov	r17, r22
     874:	07 2f       	mov	r16, r23
     876:	15 c0       	rjmp	.+42     	; 0x8a2 <joystickPos+0x84>
	} else if (x < center_x){
     878:	82 17       	cp	r24, r18
     87a:	88 f4       	brcc	.+34     	; 0x89e <joystickPos+0x80>
		position.xPos = 100 * (x - center_x) / (center_x - 0);
     87c:	62 2f       	mov	r22, r18
     87e:	70 e0       	ldi	r23, 0x00	; 0
     880:	99 27       	eor	r25, r25
     882:	9c 01       	movw	r18, r24
     884:	26 1b       	sub	r18, r22
     886:	37 0b       	sbc	r19, r23
     888:	44 e6       	ldi	r20, 0x64	; 100
     88a:	42 9f       	mul	r20, r18
     88c:	c0 01       	movw	r24, r0
     88e:	43 9f       	mul	r20, r19
     890:	90 0d       	add	r25, r0
     892:	11 24       	eor	r1, r1
     894:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__divmodhi4>
     898:	16 2f       	mov	r17, r22
     89a:	07 2f       	mov	r16, r23
     89c:	02 c0       	rjmp	.+4      	; 0x8a2 <joystickPos+0x84>
	} else {
		position.xPos = 0;
     89e:	10 e0       	ldi	r17, 0x00	; 0
     8a0:	00 e0       	ldi	r16, 0x00	; 0
	}
	ADC_start_read(CHANNEL2);
     8a2:	81 e0       	ldi	r24, 0x01	; 1
     8a4:	0e 94 fe 01 	call	0x3fc	; 0x3fc <ADC_start_read>
     8a8:	82 e4       	ldi	r24, 0x42	; 66
     8aa:	8a 95       	dec	r24
     8ac:	f1 f7       	brne	.-4      	; 0x8aa <joystickPos+0x8c>
     8ae:	00 c0       	rjmp	.+0      	; 0x8b0 <joystickPos+0x92>
	_delay_us(200);
	y = get_ADC_data();
     8b0:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <get_ADC_data>
	if(y > center_y){
     8b4:	20 91 50 03 	lds	r18, 0x0350
     8b8:	28 17       	cp	r18, r24
     8ba:	a0 f4       	brcc	.+40     	; 0x8e4 <joystickPos+0xc6>
		position.yPos = 100 * (y - center_y) / (0xFF - center_y);
     8bc:	30 e0       	ldi	r19, 0x00	; 0
     8be:	99 27       	eor	r25, r25
     8c0:	ac 01       	movw	r20, r24
     8c2:	42 1b       	sub	r20, r18
     8c4:	53 0b       	sbc	r21, r19
     8c6:	64 e6       	ldi	r22, 0x64	; 100
     8c8:	64 9f       	mul	r22, r20
     8ca:	c0 01       	movw	r24, r0
     8cc:	65 9f       	mul	r22, r21
     8ce:	90 0d       	add	r25, r0
     8d0:	11 24       	eor	r1, r1
     8d2:	4f ef       	ldi	r20, 0xFF	; 255
     8d4:	50 e0       	ldi	r21, 0x00	; 0
     8d6:	ba 01       	movw	r22, r20
     8d8:	62 1b       	sub	r22, r18
     8da:	73 0b       	sbc	r23, r19
     8dc:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__divmodhi4>
     8e0:	86 2f       	mov	r24, r22
     8e2:	14 c0       	rjmp	.+40     	; 0x90c <joystickPos+0xee>
		} else if (y < center_y){
     8e4:	82 17       	cp	r24, r18
     8e6:	80 f4       	brcc	.+32     	; 0x908 <joystickPos+0xea>
		position.yPos = 100 * (y - center_y) / (center_y - 0);
     8e8:	30 e0       	ldi	r19, 0x00	; 0
     8ea:	99 27       	eor	r25, r25
     8ec:	ac 01       	movw	r20, r24
     8ee:	42 1b       	sub	r20, r18
     8f0:	53 0b       	sbc	r21, r19
     8f2:	64 e6       	ldi	r22, 0x64	; 100
     8f4:	64 9f       	mul	r22, r20
     8f6:	c0 01       	movw	r24, r0
     8f8:	65 9f       	mul	r22, r21
     8fa:	90 0d       	add	r25, r0
     8fc:	11 24       	eor	r1, r1
     8fe:	b9 01       	movw	r22, r18
     900:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__divmodhi4>
     904:	86 2f       	mov	r24, r22
     906:	02 c0       	rjmp	.+4      	; 0x90c <joystickPos+0xee>
		} else {
		position.yPos = 0;
     908:	80 e0       	ldi	r24, 0x00	; 0
     90a:	70 e0       	ldi	r23, 0x00	; 0
	}
	position = JoystickDirection(position);
     90c:	41 2f       	mov	r20, r17
     90e:	68 2f       	mov	r22, r24
     910:	50 2f       	mov	r21, r16
     912:	8a 85       	ldd	r24, Y+10	; 0x0a
     914:	0e 94 cd 03 	call	0x79a	; 0x79a <JoystickDirection>
     918:	2e 83       	std	Y+6, r18	; 0x06
     91a:	3f 83       	std	Y+7, r19	; 0x07
     91c:	48 87       	std	Y+8, r20	; 0x08
     91e:	59 87       	std	Y+9, r21	; 0x09
     920:	6a 87       	std	Y+10, r22	; 0x0a
	return position; 
     922:	85 e0       	ldi	r24, 0x05	; 5
     924:	fe 01       	movw	r30, r28
     926:	36 96       	adiw	r30, 0x06	; 6
     928:	de 01       	movw	r26, r28
     92a:	11 96       	adiw	r26, 0x01	; 1
     92c:	01 90       	ld	r0, Z+
     92e:	0d 92       	st	X+, r0
     930:	8a 95       	dec	r24
     932:	e1 f7       	brne	.-8      	; 0x92c <joystickPos+0x10e>
     934:	29 81       	ldd	r18, Y+1	; 0x01
     936:	3a 81       	ldd	r19, Y+2	; 0x02
     938:	4b 81       	ldd	r20, Y+3	; 0x03
     93a:	5c 81       	ldd	r21, Y+4	; 0x04
     93c:	6d 81       	ldd	r22, Y+5	; 0x05
	
	
}
     93e:	70 e0       	ldi	r23, 0x00	; 0
     940:	80 e0       	ldi	r24, 0x00	; 0
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	2a 96       	adiw	r28, 0x0a	; 10
     946:	0f b6       	in	r0, 0x3f	; 63
     948:	f8 94       	cli
     94a:	de bf       	out	0x3e, r29	; 62
     94c:	0f be       	out	0x3f, r0	; 63
     94e:	cd bf       	out	0x3d, r28	; 61
     950:	df 91       	pop	r29
     952:	cf 91       	pop	r28
     954:	1f 91       	pop	r17
     956:	0f 91       	pop	r16
     958:	08 95       	ret

0000095a <oled_is_out_of_bounds>:
     95a:	80 91 53 03 	lds	r24, 0x0353
     95e:	90 91 54 03 	lds	r25, 0x0354
     962:	80 38       	cpi	r24, 0x80	; 128
     964:	91 05       	cpc	r25, r1
     966:	bc f0       	brlt	.+46     	; 0x996 <oled_is_out_of_bounds+0x3c>
     968:	e3 e5       	ldi	r30, 0x53	; 83
     96a:	f3 e0       	ldi	r31, 0x03	; 3
     96c:	80 81       	ld	r24, Z
     96e:	91 81       	ldd	r25, Z+1	; 0x01
     970:	80 58       	subi	r24, 0x80	; 128
     972:	91 09       	sbc	r25, r1
     974:	91 83       	std	Z+1, r25	; 0x01
     976:	80 83       	st	Z, r24
     978:	e1 e5       	ldi	r30, 0x51	; 81
     97a:	f3 e0       	ldi	r31, 0x03	; 3
     97c:	80 81       	ld	r24, Z
     97e:	91 81       	ldd	r25, Z+1	; 0x01
     980:	01 96       	adiw	r24, 0x01	; 1
     982:	91 83       	std	Z+1, r25	; 0x01
     984:	80 83       	st	Z, r24
     986:	80 81       	ld	r24, Z
     988:	91 81       	ldd	r25, Z+1	; 0x01
     98a:	08 97       	sbiw	r24, 0x08	; 8
     98c:	24 f0       	brlt	.+8      	; 0x996 <oled_is_out_of_bounds+0x3c>
     98e:	10 92 52 03 	sts	0x0352, r1
     992:	10 92 51 03 	sts	0x0351, r1
     996:	08 95       	ret

00000998 <oled_put_char>:
     998:	ef 92       	push	r14
     99a:	ff 92       	push	r15
     99c:	0f 93       	push	r16
     99e:	1f 93       	push	r17
     9a0:	cf 93       	push	r28
     9a2:	df 93       	push	r29
     9a4:	80 52       	subi	r24, 0x20	; 32
     9a6:	20 91 08 01 	lds	r18, 0x0108
     9aa:	30 91 09 01 	lds	r19, 0x0109
     9ae:	12 16       	cp	r1, r18
     9b0:	13 06       	cpc	r1, r19
     9b2:	84 f5       	brge	.+96     	; 0xa14 <oled_put_char+0x7c>
     9b4:	e8 2e       	mov	r14, r24
     9b6:	f1 2c       	mov	r15, r1
     9b8:	c7 01       	movw	r24, r14
     9ba:	88 0f       	add	r24, r24
     9bc:	99 1f       	adc	r25, r25
     9be:	88 0f       	add	r24, r24
     9c0:	99 1f       	adc	r25, r25
     9c2:	88 0f       	add	r24, r24
     9c4:	99 1f       	adc	r25, r25
     9c6:	c0 e0       	ldi	r28, 0x00	; 0
     9c8:	d0 e0       	ldi	r29, 0x00	; 0
     9ca:	9c 01       	movw	r18, r24
     9cc:	20 59       	subi	r18, 0x90	; 144
     9ce:	3f 4f       	sbci	r19, 0xFF	; 255
     9d0:	79 01       	movw	r14, r18
     9d2:	03 e5       	ldi	r16, 0x53	; 83
     9d4:	13 e0       	ldi	r17, 0x03	; 3
     9d6:	f7 01       	movw	r30, r14
     9d8:	ec 0f       	add	r30, r28
     9da:	fd 1f       	adc	r31, r29
     9dc:	85 91       	lpm	r24, Z+
     9de:	94 91       	lpm	r25, Z
     9e0:	e0 91 0a 01 	lds	r30, 0x010A
     9e4:	f0 91 0b 01 	lds	r31, 0x010B
     9e8:	80 83       	st	Z, r24
     9ea:	f8 01       	movw	r30, r16
     9ec:	20 81       	ld	r18, Z
     9ee:	31 81       	ldd	r19, Z+1	; 0x01
     9f0:	80 91 08 01 	lds	r24, 0x0108
     9f4:	90 91 09 01 	lds	r25, 0x0109
     9f8:	82 0f       	add	r24, r18
     9fa:	93 1f       	adc	r25, r19
     9fc:	91 83       	std	Z+1, r25	; 0x01
     9fe:	80 83       	st	Z, r24
     a00:	0e 94 ad 04 	call	0x95a	; 0x95a <oled_is_out_of_bounds>
     a04:	21 96       	adiw	r28, 0x01	; 1
     a06:	80 91 08 01 	lds	r24, 0x0108
     a0a:	90 91 09 01 	lds	r25, 0x0109
     a0e:	c8 17       	cp	r28, r24
     a10:	d9 07       	cpc	r29, r25
     a12:	0c f3       	brlt	.-62     	; 0x9d6 <oled_put_char+0x3e>
     a14:	80 e0       	ldi	r24, 0x00	; 0
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	df 91       	pop	r29
     a1a:	cf 91       	pop	r28
     a1c:	1f 91       	pop	r17
     a1e:	0f 91       	pop	r16
     a20:	ff 90       	pop	r15
     a22:	ef 90       	pop	r14
     a24:	08 95       	ret

00000a26 <oled_inv_put_char>:
     a26:	ef 92       	push	r14
     a28:	ff 92       	push	r15
     a2a:	0f 93       	push	r16
     a2c:	1f 93       	push	r17
     a2e:	cf 93       	push	r28
     a30:	df 93       	push	r29
     a32:	80 52       	subi	r24, 0x20	; 32
     a34:	20 91 08 01 	lds	r18, 0x0108
     a38:	30 91 09 01 	lds	r19, 0x0109
     a3c:	12 16       	cp	r1, r18
     a3e:	13 06       	cpc	r1, r19
     a40:	8c f5       	brge	.+98     	; 0xaa4 <oled_inv_put_char+0x7e>
     a42:	e8 2e       	mov	r14, r24
     a44:	f1 2c       	mov	r15, r1
     a46:	c7 01       	movw	r24, r14
     a48:	88 0f       	add	r24, r24
     a4a:	99 1f       	adc	r25, r25
     a4c:	88 0f       	add	r24, r24
     a4e:	99 1f       	adc	r25, r25
     a50:	88 0f       	add	r24, r24
     a52:	99 1f       	adc	r25, r25
     a54:	c0 e0       	ldi	r28, 0x00	; 0
     a56:	d0 e0       	ldi	r29, 0x00	; 0
     a58:	9c 01       	movw	r18, r24
     a5a:	20 59       	subi	r18, 0x90	; 144
     a5c:	3f 4f       	sbci	r19, 0xFF	; 255
     a5e:	79 01       	movw	r14, r18
     a60:	03 e5       	ldi	r16, 0x53	; 83
     a62:	13 e0       	ldi	r17, 0x03	; 3
     a64:	f7 01       	movw	r30, r14
     a66:	ec 0f       	add	r30, r28
     a68:	fd 1f       	adc	r31, r29
     a6a:	85 91       	lpm	r24, Z+
     a6c:	94 91       	lpm	r25, Z
     a6e:	80 95       	com	r24
     a70:	e0 91 0a 01 	lds	r30, 0x010A
     a74:	f0 91 0b 01 	lds	r31, 0x010B
     a78:	80 83       	st	Z, r24
     a7a:	f8 01       	movw	r30, r16
     a7c:	20 81       	ld	r18, Z
     a7e:	31 81       	ldd	r19, Z+1	; 0x01
     a80:	80 91 08 01 	lds	r24, 0x0108
     a84:	90 91 09 01 	lds	r25, 0x0109
     a88:	82 0f       	add	r24, r18
     a8a:	93 1f       	adc	r25, r19
     a8c:	91 83       	std	Z+1, r25	; 0x01
     a8e:	80 83       	st	Z, r24
     a90:	0e 94 ad 04 	call	0x95a	; 0x95a <oled_is_out_of_bounds>
     a94:	21 96       	adiw	r28, 0x01	; 1
     a96:	80 91 08 01 	lds	r24, 0x0108
     a9a:	90 91 09 01 	lds	r25, 0x0109
     a9e:	c8 17       	cp	r28, r24
     aa0:	d9 07       	cpc	r29, r25
     aa2:	04 f3       	brlt	.-64     	; 0xa64 <oled_inv_put_char+0x3e>
     aa4:	80 e0       	ldi	r24, 0x00	; 0
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	df 91       	pop	r29
     aaa:	cf 91       	pop	r28
     aac:	1f 91       	pop	r17
     aae:	0f 91       	pop	r16
     ab0:	ff 90       	pop	r15
     ab2:	ef 90       	pop	r14
     ab4:	08 95       	ret

00000ab6 <oled_set_adressing_mode>:
     ab6:	e0 91 0c 01 	lds	r30, 0x010C
     aba:	f0 91 0d 01 	lds	r31, 0x010D
     abe:	90 e2       	ldi	r25, 0x20	; 32
     ac0:	90 83       	st	Z, r25
     ac2:	e0 91 0c 01 	lds	r30, 0x010C
     ac6:	f0 91 0d 01 	lds	r31, 0x010D
     aca:	80 83       	st	Z, r24
     acc:	08 95       	ret

00000ace <oled_printf>:
     ace:	cf 93       	push	r28
     ad0:	df 93       	push	r29
     ad2:	cd b7       	in	r28, 0x3d	; 61
     ad4:	de b7       	in	r29, 0x3e	; 62
     ad6:	fe 01       	movw	r30, r28
     ad8:	35 96       	adiw	r30, 0x05	; 5
     ada:	61 91       	ld	r22, Z+
     adc:	71 91       	ld	r23, Z+
     ade:	af 01       	movw	r20, r30
     ae0:	8c e1       	ldi	r24, 0x1C	; 28
     ae2:	91 e0       	ldi	r25, 0x01	; 1
     ae4:	0e 94 3d 0a 	call	0x147a	; 0x147a <vfprintf>
     ae8:	df 91       	pop	r29
     aea:	cf 91       	pop	r28
     aec:	08 95       	ret

00000aee <oled_inv_printf>:
     aee:	cf 93       	push	r28
     af0:	df 93       	push	r29
     af2:	cd b7       	in	r28, 0x3d	; 61
     af4:	de b7       	in	r29, 0x3e	; 62
     af6:	fe 01       	movw	r30, r28
     af8:	35 96       	adiw	r30, 0x05	; 5
     afa:	61 91       	ld	r22, Z+
     afc:	71 91       	ld	r23, Z+
     afe:	af 01       	movw	r20, r30
     b00:	8e e0       	ldi	r24, 0x0E	; 14
     b02:	91 e0       	ldi	r25, 0x01	; 1
     b04:	0e 94 3d 0a 	call	0x147a	; 0x147a <vfprintf>
     b08:	df 91       	pop	r29
     b0a:	cf 91       	pop	r28
     b0c:	08 95       	ret

00000b0e <oled_goto_line>:
     b0e:	cf 93       	push	r28
     b10:	df 93       	push	r29
     b12:	ec 01       	movw	r28, r24
     b14:	88 30       	cpi	r24, 0x08	; 8
     b16:	91 05       	cpc	r25, r1
     b18:	80 f4       	brcc	.+32     	; 0xb3a <oled_goto_line+0x2c>
     b1a:	90 93 52 03 	sts	0x0352, r25
     b1e:	80 93 51 03 	sts	0x0351, r24
     b22:	82 e0       	ldi	r24, 0x02	; 2
     b24:	0e 94 5b 05 	call	0xab6	; 0xab6 <oled_set_adressing_mode>
     b28:	c0 55       	subi	r28, 0x50	; 80
     b2a:	e0 91 0c 01 	lds	r30, 0x010C
     b2e:	f0 91 0d 01 	lds	r31, 0x010D
     b32:	c0 83       	st	Z, r28
     b34:	80 e0       	ldi	r24, 0x00	; 0
     b36:	0e 94 5b 05 	call	0xab6	; 0xab6 <oled_set_adressing_mode>
     b3a:	df 91       	pop	r29
     b3c:	cf 91       	pop	r28
     b3e:	08 95       	ret

00000b40 <oled_goto_column>:
     b40:	cf 93       	push	r28
     b42:	df 93       	push	r29
     b44:	ec 01       	movw	r28, r24
     b46:	80 38       	cpi	r24, 0x80	; 128
     b48:	91 05       	cpc	r25, r1
     b4a:	50 f5       	brcc	.+84     	; 0xba0 <oled_goto_column+0x60>
     b4c:	90 93 54 03 	sts	0x0354, r25
     b50:	80 93 53 03 	sts	0x0353, r24
     b54:	82 e0       	ldi	r24, 0x02	; 2
     b56:	0e 94 5b 05 	call	0xab6	; 0xab6 <oled_set_adressing_mode>
     b5a:	ce 01       	movw	r24, r28
     b5c:	8f 70       	andi	r24, 0x0F	; 15
     b5e:	90 78       	andi	r25, 0x80	; 128
     b60:	99 23       	and	r25, r25
     b62:	24 f4       	brge	.+8      	; 0xb6c <oled_goto_column+0x2c>
     b64:	01 97       	sbiw	r24, 0x01	; 1
     b66:	80 6f       	ori	r24, 0xF0	; 240
     b68:	9f 6f       	ori	r25, 0xFF	; 255
     b6a:	01 96       	adiw	r24, 0x01	; 1
     b6c:	e0 91 0c 01 	lds	r30, 0x010C
     b70:	f0 91 0d 01 	lds	r31, 0x010D
     b74:	80 83       	st	Z, r24
     b76:	ce 01       	movw	r24, r28
     b78:	dd 23       	and	r29, r29
     b7a:	0c f4       	brge	.+2      	; 0xb7e <oled_goto_column+0x3e>
     b7c:	0f 96       	adiw	r24, 0x0f	; 15
     b7e:	95 95       	asr	r25
     b80:	87 95       	ror	r24
     b82:	95 95       	asr	r25
     b84:	87 95       	ror	r24
     b86:	95 95       	asr	r25
     b88:	87 95       	ror	r24
     b8a:	95 95       	asr	r25
     b8c:	87 95       	ror	r24
     b8e:	80 5f       	subi	r24, 0xF0	; 240
     b90:	e0 91 0c 01 	lds	r30, 0x010C
     b94:	f0 91 0d 01 	lds	r31, 0x010D
     b98:	80 83       	st	Z, r24
     b9a:	80 e0       	ldi	r24, 0x00	; 0
     b9c:	0e 94 5b 05 	call	0xab6	; 0xab6 <oled_set_adressing_mode>
     ba0:	df 91       	pop	r29
     ba2:	cf 91       	pop	r28
     ba4:	08 95       	ret

00000ba6 <oled_pos>:
     ba6:	cf 93       	push	r28
     ba8:	df 93       	push	r29
     baa:	eb 01       	movw	r28, r22
     bac:	0e 94 87 05 	call	0xb0e	; 0xb0e <oled_goto_line>
     bb0:	ce 01       	movw	r24, r28
     bb2:	0e 94 a0 05 	call	0xb40	; 0xb40 <oled_goto_column>
     bb6:	df 91       	pop	r29
     bb8:	cf 91       	pop	r28
     bba:	08 95       	ret

00000bbc <oled_home>:
     bbc:	60 e0       	ldi	r22, 0x00	; 0
     bbe:	70 e0       	ldi	r23, 0x00	; 0
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	0e 94 d3 05 	call	0xba6	; 0xba6 <oled_pos>
     bc8:	08 95       	ret

00000bca <oled_clear_line>:
     bca:	cf 93       	push	r28
     bcc:	df 93       	push	r29
     bce:	ec 01       	movw	r28, r24
     bd0:	60 e0       	ldi	r22, 0x00	; 0
     bd2:	70 e0       	ldi	r23, 0x00	; 0
     bd4:	0e 94 d3 05 	call	0xba6	; 0xba6 <oled_pos>
     bd8:	20 e8       	ldi	r18, 0x80	; 128
     bda:	30 e0       	ldi	r19, 0x00	; 0
     bdc:	e0 91 0a 01 	lds	r30, 0x010A
     be0:	f0 91 0b 01 	lds	r31, 0x010B
     be4:	10 82       	st	Z, r1
     be6:	21 50       	subi	r18, 0x01	; 1
     be8:	31 09       	sbc	r19, r1
     bea:	21 15       	cp	r18, r1
     bec:	31 05       	cpc	r19, r1
     bee:	b1 f7       	brne	.-20     	; 0xbdc <oled_clear_line+0x12>
     bf0:	ce 01       	movw	r24, r28
     bf2:	0e 94 87 05 	call	0xb0e	; 0xb0e <oled_goto_line>
     bf6:	df 91       	pop	r29
     bf8:	cf 91       	pop	r28
     bfa:	08 95       	ret

00000bfc <oled_reset>:
     bfc:	cf 93       	push	r28
     bfe:	df 93       	push	r29
     c00:	c0 e0       	ldi	r28, 0x00	; 0
     c02:	d0 e0       	ldi	r29, 0x00	; 0
     c04:	ce 01       	movw	r24, r28
     c06:	0e 94 e5 05 	call	0xbca	; 0xbca <oled_clear_line>
     c0a:	21 96       	adiw	r28, 0x01	; 1
     c0c:	c8 30       	cpi	r28, 0x08	; 8
     c0e:	d1 05       	cpc	r29, r1
     c10:	c9 f7       	brne	.-14     	; 0xc04 <oled_reset+0x8>
     c12:	0e 94 de 05 	call	0xbbc	; 0xbbc <oled_home>
     c16:	df 91       	pop	r29
     c18:	cf 91       	pop	r28
     c1a:	08 95       	ret

00000c1c <oled_init>:
     c1c:	e0 91 0c 01 	lds	r30, 0x010C
     c20:	f0 91 0d 01 	lds	r31, 0x010D
     c24:	8e ea       	ldi	r24, 0xAE	; 174
     c26:	80 83       	st	Z, r24
     c28:	e0 91 0c 01 	lds	r30, 0x010C
     c2c:	f0 91 0d 01 	lds	r31, 0x010D
     c30:	81 ea       	ldi	r24, 0xA1	; 161
     c32:	80 83       	st	Z, r24
     c34:	e0 91 0c 01 	lds	r30, 0x010C
     c38:	f0 91 0d 01 	lds	r31, 0x010D
     c3c:	8a ed       	ldi	r24, 0xDA	; 218
     c3e:	80 83       	st	Z, r24
     c40:	e0 91 0c 01 	lds	r30, 0x010C
     c44:	f0 91 0d 01 	lds	r31, 0x010D
     c48:	82 e1       	ldi	r24, 0x12	; 18
     c4a:	80 83       	st	Z, r24
     c4c:	e0 91 0c 01 	lds	r30, 0x010C
     c50:	f0 91 0d 01 	lds	r31, 0x010D
     c54:	88 ec       	ldi	r24, 0xC8	; 200
     c56:	80 83       	st	Z, r24
     c58:	e0 91 0c 01 	lds	r30, 0x010C
     c5c:	f0 91 0d 01 	lds	r31, 0x010D
     c60:	88 ea       	ldi	r24, 0xA8	; 168
     c62:	80 83       	st	Z, r24
     c64:	e0 91 0c 01 	lds	r30, 0x010C
     c68:	f0 91 0d 01 	lds	r31, 0x010D
     c6c:	8f e3       	ldi	r24, 0x3F	; 63
     c6e:	80 83       	st	Z, r24
     c70:	e0 91 0c 01 	lds	r30, 0x010C
     c74:	f0 91 0d 01 	lds	r31, 0x010D
     c78:	85 ed       	ldi	r24, 0xD5	; 213
     c7a:	80 83       	st	Z, r24
     c7c:	e0 91 0c 01 	lds	r30, 0x010C
     c80:	f0 91 0d 01 	lds	r31, 0x010D
     c84:	80 e8       	ldi	r24, 0x80	; 128
     c86:	80 83       	st	Z, r24
     c88:	e0 91 0c 01 	lds	r30, 0x010C
     c8c:	f0 91 0d 01 	lds	r31, 0x010D
     c90:	81 e8       	ldi	r24, 0x81	; 129
     c92:	80 83       	st	Z, r24
     c94:	e0 91 0c 01 	lds	r30, 0x010C
     c98:	f0 91 0d 01 	lds	r31, 0x010D
     c9c:	80 e5       	ldi	r24, 0x50	; 80
     c9e:	80 83       	st	Z, r24
     ca0:	e0 91 0c 01 	lds	r30, 0x010C
     ca4:	f0 91 0d 01 	lds	r31, 0x010D
     ca8:	89 ed       	ldi	r24, 0xD9	; 217
     caa:	80 83       	st	Z, r24
     cac:	e0 91 0c 01 	lds	r30, 0x010C
     cb0:	f0 91 0d 01 	lds	r31, 0x010D
     cb4:	81 e2       	ldi	r24, 0x21	; 33
     cb6:	80 83       	st	Z, r24
     cb8:	80 e0       	ldi	r24, 0x00	; 0
     cba:	0e 94 5b 05 	call	0xab6	; 0xab6 <oled_set_adressing_mode>
     cbe:	e0 91 0c 01 	lds	r30, 0x010C
     cc2:	f0 91 0d 01 	lds	r31, 0x010D
     cc6:	8b ed       	ldi	r24, 0xDB	; 219
     cc8:	80 83       	st	Z, r24
     cca:	e0 91 0c 01 	lds	r30, 0x010C
     cce:	f0 91 0d 01 	lds	r31, 0x010D
     cd2:	80 e3       	ldi	r24, 0x30	; 48
     cd4:	80 83       	st	Z, r24
     cd6:	e0 91 0c 01 	lds	r30, 0x010C
     cda:	f0 91 0d 01 	lds	r31, 0x010D
     cde:	8d ea       	ldi	r24, 0xAD	; 173
     ce0:	80 83       	st	Z, r24
     ce2:	e0 91 0c 01 	lds	r30, 0x010C
     ce6:	f0 91 0d 01 	lds	r31, 0x010D
     cea:	10 82       	st	Z, r1
     cec:	e0 91 0c 01 	lds	r30, 0x010C
     cf0:	f0 91 0d 01 	lds	r31, 0x010D
     cf4:	84 ea       	ldi	r24, 0xA4	; 164
     cf6:	80 83       	st	Z, r24
     cf8:	e0 91 0c 01 	lds	r30, 0x010C
     cfc:	f0 91 0d 01 	lds	r31, 0x010D
     d00:	86 ea       	ldi	r24, 0xA6	; 166
     d02:	80 83       	st	Z, r24
     d04:	e0 91 0c 01 	lds	r30, 0x010C
     d08:	f0 91 0d 01 	lds	r31, 0x010D
     d0c:	8f ea       	ldi	r24, 0xAF	; 175
     d0e:	80 83       	st	Z, r24
     d10:	0e 94 fe 05 	call	0xbfc	; 0xbfc <oled_reset>
     d14:	08 95       	ret

00000d16 <new_menu>:
void set_first_child(menu* mymenu, menu* first_child) {
	mymenu->first_child = first_child;
}


menu* new_menu(char* name, menu* parent) {
     d16:	0f 93       	push	r16
     d18:	1f 93       	push	r17
     d1a:	cf 93       	push	r28
     d1c:	df 93       	push	r29
     d1e:	8c 01       	movw	r16, r24
     d20:	eb 01       	movw	r28, r22
	menu* nextmenu = malloc(sizeof(menu));
     d22:	89 e0       	ldi	r24, 0x09	; 9
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	0e 94 8a 08 	call	0x1114	; 0x1114 <malloc>
     d2a:	fc 01       	movw	r30, r24
 	nextmenu->title = name;
     d2c:	11 83       	std	Z+1, r17	; 0x01
     d2e:	00 83       	st	Z, r16
	nextmenu->parent = parent;
     d30:	d4 83       	std	Z+4, r29	; 0x04
     d32:	c3 83       	std	Z+3, r28	; 0x03
 	nextmenu->right_sibling = NULL;
     d34:	10 86       	std	Z+8, r1	; 0x08
     d36:	17 82       	std	Z+7, r1	; 0x07
	nextmenu->first_child = NULL;
     d38:	16 82       	std	Z+6, r1	; 0x06
     d3a:	15 82       	std	Z+5, r1	; 0x05
	return nextmenu;
}
     d3c:	df 91       	pop	r29
     d3e:	cf 91       	pop	r28
     d40:	1f 91       	pop	r17
     d42:	0f 91       	pop	r16
     d44:	08 95       	ret

00000d46 <size_of_menu>:

int size_of_menu(menu* mymenu) {
	
	int menu_size = 0;
	
	mymenu = mymenu->first_child;
     d46:	dc 01       	movw	r26, r24
     d48:	15 96       	adiw	r26, 0x05	; 5
     d4a:	ed 91       	ld	r30, X+
     d4c:	fc 91       	ld	r31, X
     d4e:	16 97       	sbiw	r26, 0x06	; 6
	if (mymenu == NULL) {
     d50:	30 97       	sbiw	r30, 0x00	; 0
     d52:	79 f0       	breq	.+30     	; 0xd72 <size_of_menu+0x2c>
		return menu_size;
	}
	menu_size ++;
	while (mymenu->right_sibling != NULL) {
     d54:	07 80       	ldd	r0, Z+7	; 0x07
     d56:	f0 85       	ldd	r31, Z+8	; 0x08
     d58:	e0 2d       	mov	r30, r0
     d5a:	30 97       	sbiw	r30, 0x00	; 0
     d5c:	69 f0       	breq	.+26     	; 0xd78 <size_of_menu+0x32>
     d5e:	21 e0       	ldi	r18, 0x01	; 1
     d60:	30 e0       	ldi	r19, 0x00	; 0
		mymenu = mymenu->right_sibling;
		menu_size++;
     d62:	2f 5f       	subi	r18, 0xFF	; 255
     d64:	3f 4f       	sbci	r19, 0xFF	; 255
	mymenu = mymenu->first_child;
	if (mymenu == NULL) {
		return menu_size;
	}
	menu_size ++;
	while (mymenu->right_sibling != NULL) {
     d66:	07 80       	ldd	r0, Z+7	; 0x07
     d68:	f0 85       	ldd	r31, Z+8	; 0x08
     d6a:	e0 2d       	mov	r30, r0
     d6c:	30 97       	sbiw	r30, 0x00	; 0
     d6e:	c9 f7       	brne	.-14     	; 0xd62 <size_of_menu+0x1c>
     d70:	06 c0       	rjmp	.+12     	; 0xd7e <size_of_menu+0x38>
	
	int menu_size = 0;
	
	mymenu = mymenu->first_child;
	if (mymenu == NULL) {
		return menu_size;
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	90 e0       	ldi	r25, 0x00	; 0
     d76:	08 95       	ret
	}
	menu_size ++;
	while (mymenu->right_sibling != NULL) {
     d78:	81 e0       	ldi	r24, 0x01	; 1
     d7a:	90 e0       	ldi	r25, 0x00	; 0
     d7c:	08 95       	ret
		mymenu = mymenu->right_sibling;
		menu_size++;
     d7e:	82 2f       	mov	r24, r18
     d80:	93 2f       	mov	r25, r19
	}
	return menu_size;
}
     d82:	08 95       	ret

00000d84 <oled_menu_print>:
	current_menu_size = size_of_menu(current_menu);
	oled_menu_print(current_menu);
	return direction;
}

void oled_menu_print(menu* mymenu){
     d84:	0f 93       	push	r16
     d86:	1f 93       	push	r17
     d88:	cf 93       	push	r28
     d8a:	df 93       	push	r29
     d8c:	ec 01       	movw	r28, r24
	
	oled_reset(); 
     d8e:	0e 94 fe 05 	call	0xbfc	; 0xbfc <oled_reset>
	
	current_menu_size = size_of_menu(mymenu);
     d92:	ce 01       	movw	r24, r28
     d94:	0e 94 a3 06 	call	0xd46	; 0xd46 <size_of_menu>
     d98:	90 93 58 03 	sts	0x0358, r25
     d9c:	80 93 57 03 	sts	0x0357, r24
	mymenu = mymenu->first_child;
     da0:	0d 81       	ldd	r16, Y+5	; 0x05
     da2:	1e 81       	ldd	r17, Y+6	; 0x06
	for(int i = 0; i < current_menu_size; i++){
     da4:	80 91 57 03 	lds	r24, 0x0357
     da8:	90 91 58 03 	lds	r25, 0x0358
     dac:	18 16       	cp	r1, r24
     dae:	19 06       	cpc	r1, r25
     db0:	64 f5       	brge	.+88     	; 0xe0a <oled_menu_print+0x86>
     db2:	c0 e0       	ldi	r28, 0x00	; 0
     db4:	d0 e0       	ldi	r29, 0x00	; 0
		oled_pos(i,0);
     db6:	60 e0       	ldi	r22, 0x00	; 0
     db8:	70 e0       	ldi	r23, 0x00	; 0
     dba:	ce 01       	movw	r24, r28
     dbc:	0e 94 d3 05 	call	0xba6	; 0xba6 <oled_pos>
		if(current_line == i){
     dc0:	80 91 2a 01 	lds	r24, 0x012A
     dc4:	90 91 2b 01 	lds	r25, 0x012B
     dc8:	8c 17       	cp	r24, r28
     dca:	9d 07       	cpc	r25, r29
     dcc:	51 f4       	brne	.+20     	; 0xde2 <oled_menu_print+0x5e>
			oled_inv_printf(mymenu->title);
     dce:	f8 01       	movw	r30, r16
     dd0:	81 81       	ldd	r24, Z+1	; 0x01
     dd2:	8f 93       	push	r24
     dd4:	80 81       	ld	r24, Z
     dd6:	8f 93       	push	r24
     dd8:	0e 94 77 05 	call	0xaee	; 0xaee <oled_inv_printf>
     ddc:	0f 90       	pop	r0
     dde:	0f 90       	pop	r0
     de0:	09 c0       	rjmp	.+18     	; 0xdf4 <oled_menu_print+0x70>
		}
		else{
			oled_printf(mymenu->title);
     de2:	f8 01       	movw	r30, r16
     de4:	81 81       	ldd	r24, Z+1	; 0x01
     de6:	8f 93       	push	r24
     de8:	80 81       	ld	r24, Z
     dea:	8f 93       	push	r24
     dec:	0e 94 67 05 	call	0xace	; 0xace <oled_printf>
     df0:	0f 90       	pop	r0
     df2:	0f 90       	pop	r0
		}
		mymenu = mymenu->right_sibling;
     df4:	f8 01       	movw	r30, r16
     df6:	07 81       	ldd	r16, Z+7	; 0x07
     df8:	10 85       	ldd	r17, Z+8	; 0x08
	
	oled_reset(); 
	
	current_menu_size = size_of_menu(mymenu);
	mymenu = mymenu->first_child;
	for(int i = 0; i < current_menu_size; i++){
     dfa:	21 96       	adiw	r28, 0x01	; 1
     dfc:	80 91 57 03 	lds	r24, 0x0357
     e00:	90 91 58 03 	lds	r25, 0x0358
     e04:	c8 17       	cp	r28, r24
     e06:	d9 07       	cpc	r29, r25
     e08:	b4 f2       	brlt	.-84     	; 0xdb6 <oled_menu_print+0x32>
		}
		mymenu = mymenu->right_sibling;
	}
	mymenu = mymenu->parent;
	
     e0a:	df 91       	pop	r29
     e0c:	cf 91       	pop	r28
     e0e:	1f 91       	pop	r17
     e10:	0f 91       	pop	r16
     e12:	08 95       	ret

00000e14 <oled_menu_init>:
		menu_size++;
	}
	return menu_size;
}

menu* oled_menu_init(void) {
     e14:	4f 92       	push	r4
     e16:	5f 92       	push	r5
     e18:	6f 92       	push	r6
     e1a:	7f 92       	push	r7
     e1c:	8f 92       	push	r8
     e1e:	9f 92       	push	r9
     e20:	af 92       	push	r10
     e22:	bf 92       	push	r11
     e24:	cf 92       	push	r12
     e26:	df 92       	push	r13
     e28:	ef 92       	push	r14
     e2a:	ff 92       	push	r15
     e2c:	0f 93       	push	r16
     e2e:	1f 93       	push	r17
     e30:	cf 93       	push	r28
     e32:	df 93       	push	r29
	menu* main_menu = new_menu("Main Menu", NULL);
     e34:	60 e0       	ldi	r22, 0x00	; 0
     e36:	70 e0       	ldi	r23, 0x00	; 0
     e38:	8d e0       	ldi	r24, 0x0D	; 13
     e3a:	93 e0       	ldi	r25, 0x03	; 3
     e3c:	0e 94 8b 06 	call	0xd16	; 0xd16 <new_menu>
     e40:	ec 01       	movw	r28, r24
	menu* play_game = new_menu("Play Game", main_menu);
     e42:	bc 01       	movw	r22, r24
     e44:	87 e1       	ldi	r24, 0x17	; 23
     e46:	93 e0       	ldi	r25, 0x03	; 3
     e48:	0e 94 8b 06 	call	0xd16	; 0xd16 <new_menu>
     e4c:	7c 01       	movw	r14, r24
	menu* highscores = new_menu("Highscores", main_menu);
     e4e:	be 01       	movw	r22, r28
     e50:	81 e2       	ldi	r24, 0x21	; 33
     e52:	93 e0       	ldi	r25, 0x03	; 3
     e54:	0e 94 8b 06 	call	0xd16	; 0xd16 <new_menu>
     e58:	8c 01       	movw	r16, r24
	menu* Test = new_menu("Test", main_menu);
     e5a:	be 01       	movw	r22, r28
     e5c:	8c e2       	ldi	r24, 0x2C	; 44
     e5e:	93 e0       	ldi	r25, 0x03	; 3
     e60:	0e 94 8b 06 	call	0xd16	; 0xd16 <new_menu>
     e64:	4c 01       	movw	r8, r24
	menu* Test1 = new_menu("Test1", Test);
     e66:	bc 01       	movw	r22, r24
     e68:	81 e3       	ldi	r24, 0x31	; 49
     e6a:	93 e0       	ldi	r25, 0x03	; 3
     e6c:	0e 94 8b 06 	call	0xd16	; 0xd16 <new_menu>
     e70:	6c 01       	movw	r12, r24
	menu* Test2 = new_menu("Test2", Test1);
     e72:	bc 01       	movw	r22, r24
     e74:	87 e3       	ldi	r24, 0x37	; 55
     e76:	93 e0       	ldi	r25, 0x03	; 3
     e78:	0e 94 8b 06 	call	0xd16	; 0xd16 <new_menu>
     e7c:	2c 01       	movw	r4, r24
	menu* TestP = new_menu("TestP", play_game);
     e7e:	b7 01       	movw	r22, r14
     e80:	8d e3       	ldi	r24, 0x3D	; 61
     e82:	93 e0       	ldi	r25, 0x03	; 3
     e84:	0e 94 8b 06 	call	0xd16	; 0xd16 <new_menu>
     e88:	5c 01       	movw	r10, r24
	menu* TestH = new_menu("TestH", highscores);
     e8a:	b8 01       	movw	r22, r16
     e8c:	83 e4       	ldi	r24, 0x43	; 67
     e8e:	93 e0       	ldi	r25, 0x03	; 3
     e90:	0e 94 8b 06 	call	0xd16	; 0xd16 <new_menu>
     e94:	3c 01       	movw	r6, r24
	
	
	current_menu = main_menu;
     e96:	d0 93 56 03 	sts	0x0356, r29
     e9a:	c0 93 55 03 	sts	0x0355, r28
	current_menu_size = size_of_menu(current_menu);
     e9e:	ce 01       	movw	r24, r28
     ea0:	0e 94 a3 06 	call	0xd46	; 0xd46 <size_of_menu>
     ea4:	90 93 58 03 	sts	0x0358, r25
     ea8:	80 93 57 03 	sts	0x0357, r24
	oled_menu_print(current_menu);
     eac:	ce 01       	movw	r24, r28
     eae:	0e 94 c2 06 	call	0xd84	; 0xd84 <oled_menu_print>
	mymenu->right_sibling = right_sibling;
}


void set_first_child(menu* mymenu, menu* first_child) {
	mymenu->first_child = first_child;
     eb2:	fe 82       	std	Y+6, r15	; 0x06
     eb4:	ed 82       	std	Y+5, r14	; 0x05
volatile menu* current_menu;
volatile int current_line = 2;
volatile int current_menu_size;

void set_right_sibling(menu* mymenu, menu* right_sibling) {
	mymenu->right_sibling = right_sibling;
     eb6:	f7 01       	movw	r30, r14
     eb8:	10 87       	std	Z+8, r17	; 0x08
     eba:	07 83       	std	Z+7, r16	; 0x07
     ebc:	f8 01       	movw	r30, r16
     ebe:	90 86       	std	Z+8, r9	; 0x08
     ec0:	87 82       	std	Z+7, r8	; 0x07
}


void set_first_child(menu* mymenu, menu* first_child) {
	mymenu->first_child = first_child;
     ec2:	f4 01       	movw	r30, r8
     ec4:	d6 82       	std	Z+6, r13	; 0x06
     ec6:	c5 82       	std	Z+5, r12	; 0x05
     ec8:	f7 01       	movw	r30, r14
     eca:	b6 82       	std	Z+6, r11	; 0x06
     ecc:	a5 82       	std	Z+5, r10	; 0x05
     ece:	f8 01       	movw	r30, r16
     ed0:	76 82       	std	Z+6, r7	; 0x06
     ed2:	65 82       	std	Z+5, r6	; 0x05
     ed4:	f6 01       	movw	r30, r12
     ed6:	56 82       	std	Z+6, r5	; 0x06
     ed8:	45 82       	std	Z+5, r4	; 0x05
	set_first_child(play_game, TestP);
	set_first_child(highscores, TestH);
	//set_right_sibling(Test1,Test2);
	set_first_child(Test1, Test2);
	return current_menu;
}
     eda:	80 91 55 03 	lds	r24, 0x0355
     ede:	90 91 56 03 	lds	r25, 0x0356
     ee2:	df 91       	pop	r29
     ee4:	cf 91       	pop	r28
     ee6:	1f 91       	pop	r17
     ee8:	0f 91       	pop	r16
     eea:	ff 90       	pop	r15
     eec:	ef 90       	pop	r14
     eee:	df 90       	pop	r13
     ef0:	cf 90       	pop	r12
     ef2:	bf 90       	pop	r11
     ef4:	af 90       	pop	r10
     ef6:	9f 90       	pop	r9
     ef8:	8f 90       	pop	r8
     efa:	7f 90       	pop	r7
     efc:	6f 90       	pop	r6
     efe:	5f 90       	pop	r5
     f00:	4f 90       	pop	r4
     f02:	08 95       	ret

00000f04 <oled_menu_select>:


JoystickDir oled_menu_select(void){
     f04:	ef 92       	push	r14
     f06:	ff 92       	push	r15
     f08:	0f 93       	push	r16
     f0a:	1f 93       	push	r17
     f0c:	cf 93       	push	r28
     f0e:	df 93       	push	r29
     f10:	00 d0       	rcall	.+0      	; 0xf12 <oled_menu_select+0xe>
     f12:	00 d0       	rcall	.+0      	; 0xf14 <oled_menu_select+0x10>
     f14:	1f 92       	push	r1
     f16:	cd b7       	in	r28, 0x3d	; 61
     f18:	de b7       	in	r29, 0x3e	; 62
	JoystickDir direction = joystickPos().Dir;
     f1a:	0e 94 0f 04 	call	0x81e	; 0x81e <joystickPos>
     f1e:	f6 2e       	mov	r15, r22
     f20:	29 83       	std	Y+1, r18	; 0x01
     f22:	3a 83       	std	Y+2, r19	; 0x02
     f24:	4b 83       	std	Y+3, r20	; 0x03
     f26:	5c 83       	std	Y+4, r21	; 0x04
     f28:	6d 83       	std	Y+5, r22	; 0x05
     f2a:	e6 2e       	mov	r14, r22
	current_menu_size = size_of_menu(current_menu);
     f2c:	00 91 55 03 	lds	r16, 0x0355
     f30:	10 91 56 03 	lds	r17, 0x0356
     f34:	c8 01       	movw	r24, r16
     f36:	0e 94 a3 06 	call	0xd46	; 0xd46 <size_of_menu>
     f3a:	90 93 58 03 	sts	0x0358, r25
     f3e:	80 93 57 03 	sts	0x0357, r24
	if(direction == UP){
     f42:	82 e0       	ldi	r24, 0x02	; 2
     f44:	f8 12       	cpse	r15, r24
     f46:	0a c0       	rjmp	.+20     	; 0xf5c <oled_menu_select+0x58>
		current_line--;
     f48:	80 91 2a 01 	lds	r24, 0x012A
     f4c:	90 91 2b 01 	lds	r25, 0x012B
     f50:	01 97       	sbiw	r24, 0x01	; 1
     f52:	90 93 2b 01 	sts	0x012B, r25
     f56:	80 93 2a 01 	sts	0x012A, r24
     f5a:	0c c0       	rjmp	.+24     	; 0xf74 <oled_menu_select+0x70>
	}
	if(direction == DOWN){
     f5c:	e3 e0       	ldi	r30, 0x03	; 3
     f5e:	fe 12       	cpse	r15, r30
     f60:	09 c0       	rjmp	.+18     	; 0xf74 <oled_menu_select+0x70>
		current_line++;
     f62:	80 91 2a 01 	lds	r24, 0x012A
     f66:	90 91 2b 01 	lds	r25, 0x012B
     f6a:	01 96       	adiw	r24, 0x01	; 1
     f6c:	90 93 2b 01 	sts	0x012B, r25
     f70:	80 93 2a 01 	sts	0x012A, r24
	}
	if(current_line > current_menu_size-1){
     f74:	20 91 57 03 	lds	r18, 0x0357
     f78:	30 91 58 03 	lds	r19, 0x0358
     f7c:	80 91 2a 01 	lds	r24, 0x012A
     f80:	90 91 2b 01 	lds	r25, 0x012B
     f84:	21 50       	subi	r18, 0x01	; 1
     f86:	31 09       	sbc	r19, r1
     f88:	28 17       	cp	r18, r24
     f8a:	39 07       	cpc	r19, r25
     f8c:	4c f4       	brge	.+18     	; 0xfa0 <oled_menu_select+0x9c>
		current_line = current_menu_size-1;
     f8e:	80 91 57 03 	lds	r24, 0x0357
     f92:	90 91 58 03 	lds	r25, 0x0358
     f96:	01 97       	sbiw	r24, 0x01	; 1
     f98:	90 93 2b 01 	sts	0x012B, r25
     f9c:	80 93 2a 01 	sts	0x012A, r24
	}
	if(current_line < 0){
     fa0:	80 91 2a 01 	lds	r24, 0x012A
     fa4:	90 91 2b 01 	lds	r25, 0x012B
     fa8:	99 23       	and	r25, r25
     faa:	24 f4       	brge	.+8      	; 0xfb4 <oled_menu_select+0xb0>
		current_line = 0;
     fac:	10 92 2b 01 	sts	0x012B, r1
     fb0:	10 92 2a 01 	sts	0x012A, r1
	}
	if(direction == RIGHT){
     fb4:	f1 e0       	ldi	r31, 0x01	; 1
     fb6:	ef 12       	cpse	r14, r31
     fb8:	2d c0       	rjmp	.+90     	; 0x1014 <oled_menu_select+0x110>
		if(current_menu->first_child != NULL){
     fba:	f8 01       	movw	r30, r16
     fbc:	85 81       	ldd	r24, Z+5	; 0x05
     fbe:	96 81       	ldd	r25, Z+6	; 0x06
     fc0:	89 2b       	or	r24, r25
     fc2:	31 f0       	breq	.+12     	; 0xfd0 <oled_menu_select+0xcc>
				current_menu = current_menu->first_child;
     fc4:	85 81       	ldd	r24, Z+5	; 0x05
     fc6:	96 81       	ldd	r25, Z+6	; 0x06
     fc8:	90 93 56 03 	sts	0x0356, r25
     fcc:	80 93 55 03 	sts	0x0355, r24
		}
		for(int i =0; i < current_line;i++){
     fd0:	80 91 2a 01 	lds	r24, 0x012A
     fd4:	90 91 2b 01 	lds	r25, 0x012B
     fd8:	18 16       	cp	r1, r24
     fda:	19 06       	cpc	r1, r25
     fdc:	b4 f4       	brge	.+44     	; 0x100a <oled_menu_select+0x106>
     fde:	e0 91 55 03 	lds	r30, 0x0355
     fe2:	f0 91 56 03 	lds	r31, 0x0356
     fe6:	20 e0       	ldi	r18, 0x00	; 0
     fe8:	30 e0       	ldi	r19, 0x00	; 0
			current_menu = current_menu->right_sibling;
     fea:	07 80       	ldd	r0, Z+7	; 0x07
     fec:	f0 85       	ldd	r31, Z+8	; 0x08
     fee:	e0 2d       	mov	r30, r0
	}
	if(direction == RIGHT){
		if(current_menu->first_child != NULL){
				current_menu = current_menu->first_child;
		}
		for(int i =0; i < current_line;i++){
     ff0:	2f 5f       	subi	r18, 0xFF	; 255
     ff2:	3f 4f       	sbci	r19, 0xFF	; 255
     ff4:	40 91 2a 01 	lds	r20, 0x012A
     ff8:	50 91 2b 01 	lds	r21, 0x012B
     ffc:	24 17       	cp	r18, r20
     ffe:	35 07       	cpc	r19, r21
    1000:	a4 f3       	brlt	.-24     	; 0xfea <oled_menu_select+0xe6>
    1002:	f0 93 56 03 	sts	0x0356, r31
    1006:	e0 93 55 03 	sts	0x0355, r30
			current_menu = current_menu->right_sibling;
		}
		current_line = 0;
    100a:	10 92 2b 01 	sts	0x012B, r1
    100e:	10 92 2a 01 	sts	0x012A, r1
    1012:	10 c0       	rjmp	.+32     	; 0x1034 <oled_menu_select+0x130>
	}
	if(direction == LEFT){
    1014:	e1 10       	cpse	r14, r1
    1016:	0e c0       	rjmp	.+28     	; 0x1034 <oled_menu_select+0x130>
		if(current_menu->parent != NULL){
    1018:	e0 91 55 03 	lds	r30, 0x0355
    101c:	f0 91 56 03 	lds	r31, 0x0356
    1020:	83 81       	ldd	r24, Z+3	; 0x03
    1022:	94 81       	ldd	r25, Z+4	; 0x04
    1024:	89 2b       	or	r24, r25
    1026:	31 f0       	breq	.+12     	; 0x1034 <oled_menu_select+0x130>
		current_menu = current_menu->parent;
    1028:	83 81       	ldd	r24, Z+3	; 0x03
    102a:	94 81       	ldd	r25, Z+4	; 0x04
    102c:	90 93 56 03 	sts	0x0356, r25
    1030:	80 93 55 03 	sts	0x0355, r24
		}
	}
	current_menu_size = size_of_menu(current_menu);
    1034:	00 91 55 03 	lds	r16, 0x0355
    1038:	10 91 56 03 	lds	r17, 0x0356
    103c:	c8 01       	movw	r24, r16
    103e:	0e 94 a3 06 	call	0xd46	; 0xd46 <size_of_menu>
    1042:	90 93 58 03 	sts	0x0358, r25
    1046:	80 93 57 03 	sts	0x0357, r24
	oled_menu_print(current_menu);
    104a:	c8 01       	movw	r24, r16
    104c:	0e 94 c2 06 	call	0xd84	; 0xd84 <oled_menu_print>
	return direction;
}
    1050:	8f 2d       	mov	r24, r15
    1052:	0f 90       	pop	r0
    1054:	0f 90       	pop	r0
    1056:	0f 90       	pop	r0
    1058:	0f 90       	pop	r0
    105a:	0f 90       	pop	r0
    105c:	df 91       	pop	r29
    105e:	cf 91       	pop	r28
    1060:	1f 91       	pop	r17
    1062:	0f 91       	pop	r16
    1064:	ff 90       	pop	r15
    1066:	ef 90       	pop	r14
    1068:	08 95       	ret

0000106a <slider_position>:
 *  Author: juliessk
 */ 
#include "slider.h"


slider_str slider_position(void){
    106a:	cf 93       	push	r28
	slider_str sliderposition;
	ADC_start_read(CHANNEL3);
    106c:	82 e0       	ldi	r24, 0x02	; 2
    106e:	0e 94 fe 01 	call	0x3fc	; 0x3fc <ADC_start_read>
    1072:	82 e4       	ldi	r24, 0x42	; 66
    1074:	8a 95       	dec	r24
    1076:	f1 f7       	brne	.-4      	; 0x1074 <slider_position+0xa>
    1078:	00 c0       	rjmp	.+0      	; 0x107a <slider_position+0x10>
	_delay_us(200);
	sliderposition.L = get_ADC_data();
    107a:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <get_ADC_data>
    107e:	c8 2f       	mov	r28, r24
	ADC_start_read(CHANNEL4);
    1080:	83 e0       	ldi	r24, 0x03	; 3
    1082:	0e 94 fe 01 	call	0x3fc	; 0x3fc <ADC_start_read>
    1086:	82 e4       	ldi	r24, 0x42	; 66
    1088:	8a 95       	dec	r24
    108a:	f1 f7       	brne	.-4      	; 0x1088 <slider_position+0x1e>
    108c:	00 c0       	rjmp	.+0      	; 0x108e <slider_position+0x24>
	_delay_us(200);
	sliderposition.R =  get_ADC_data();
    108e:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <get_ADC_data>
    1092:	98 2f       	mov	r25, r24
	
	return sliderposition;
}
    1094:	8c 2f       	mov	r24, r28
    1096:	cf 91       	pop	r28
    1098:	08 95       	ret

0000109a <slider_left_button>:
	}
	return 0;
}

int slider_left_button(void){
	if((PINB & 0b00000100) != 0){ //PB2
    109a:	86 b3       	in	r24, 0x16	; 22
		return 1;
	}
	return 0;
}
    109c:	82 fb       	bst	r24, 2
    109e:	88 27       	eor	r24, r24
    10a0:	80 f9       	bld	r24, 0
    10a2:	90 e0       	ldi	r25, 0x00	; 0
    10a4:	08 95       	ret

000010a6 <SPI_init>:
    10a6:	80 eb       	ldi	r24, 0xB0	; 176
    10a8:	87 bb       	out	0x17, r24	; 23
    10aa:	81 e5       	ldi	r24, 0x51	; 81
    10ac:	8d b9       	out	0x0d, r24	; 13
    10ae:	c4 9a       	sbi	0x18, 4	; 24
    10b0:	08 95       	ret

000010b2 <SPI_write>:
    10b2:	8f b9       	out	0x0f, r24	; 15
    10b4:	77 9b       	sbis	0x0e, 7	; 14
    10b6:	fe cf       	rjmp	.-4      	; 0x10b4 <SPI_write+0x2>
    10b8:	08 95       	ret

000010ba <SPI_read>:
    10ba:	1f b8       	out	0x0f, r1	; 15
    10bc:	77 9b       	sbis	0x0e, 7	; 14
    10be:	fe cf       	rjmp	.-4      	; 0x10bc <SPI_read+0x2>
    10c0:	8f b1       	in	r24, 0x0f	; 15
    10c2:	08 95       	ret

000010c4 <__divmodhi4>:
    10c4:	97 fb       	bst	r25, 7
    10c6:	07 2e       	mov	r0, r23
    10c8:	16 f4       	brtc	.+4      	; 0x10ce <__divmodhi4+0xa>
    10ca:	00 94       	com	r0
    10cc:	07 d0       	rcall	.+14     	; 0x10dc <__divmodhi4_neg1>
    10ce:	77 fd       	sbrc	r23, 7
    10d0:	09 d0       	rcall	.+18     	; 0x10e4 <__divmodhi4_neg2>
    10d2:	0e 94 76 08 	call	0x10ec	; 0x10ec <__udivmodhi4>
    10d6:	07 fc       	sbrc	r0, 7
    10d8:	05 d0       	rcall	.+10     	; 0x10e4 <__divmodhi4_neg2>
    10da:	3e f4       	brtc	.+14     	; 0x10ea <__divmodhi4_exit>

000010dc <__divmodhi4_neg1>:
    10dc:	90 95       	com	r25
    10de:	81 95       	neg	r24
    10e0:	9f 4f       	sbci	r25, 0xFF	; 255
    10e2:	08 95       	ret

000010e4 <__divmodhi4_neg2>:
    10e4:	70 95       	com	r23
    10e6:	61 95       	neg	r22
    10e8:	7f 4f       	sbci	r23, 0xFF	; 255

000010ea <__divmodhi4_exit>:
    10ea:	08 95       	ret

000010ec <__udivmodhi4>:
    10ec:	aa 1b       	sub	r26, r26
    10ee:	bb 1b       	sub	r27, r27
    10f0:	51 e1       	ldi	r21, 0x11	; 17
    10f2:	07 c0       	rjmp	.+14     	; 0x1102 <__udivmodhi4_ep>

000010f4 <__udivmodhi4_loop>:
    10f4:	aa 1f       	adc	r26, r26
    10f6:	bb 1f       	adc	r27, r27
    10f8:	a6 17       	cp	r26, r22
    10fa:	b7 07       	cpc	r27, r23
    10fc:	10 f0       	brcs	.+4      	; 0x1102 <__udivmodhi4_ep>
    10fe:	a6 1b       	sub	r26, r22
    1100:	b7 0b       	sbc	r27, r23

00001102 <__udivmodhi4_ep>:
    1102:	88 1f       	adc	r24, r24
    1104:	99 1f       	adc	r25, r25
    1106:	5a 95       	dec	r21
    1108:	a9 f7       	brne	.-22     	; 0x10f4 <__udivmodhi4_loop>
    110a:	80 95       	com	r24
    110c:	90 95       	com	r25
    110e:	bc 01       	movw	r22, r24
    1110:	cd 01       	movw	r24, r26
    1112:	08 95       	ret

00001114 <malloc>:
    1114:	cf 93       	push	r28
    1116:	df 93       	push	r29
    1118:	82 30       	cpi	r24, 0x02	; 2
    111a:	91 05       	cpc	r25, r1
    111c:	10 f4       	brcc	.+4      	; 0x1122 <malloc+0xe>
    111e:	82 e0       	ldi	r24, 0x02	; 2
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	e0 91 5b 03 	lds	r30, 0x035B
    1126:	f0 91 5c 03 	lds	r31, 0x035C
    112a:	20 e0       	ldi	r18, 0x00	; 0
    112c:	30 e0       	ldi	r19, 0x00	; 0
    112e:	a0 e0       	ldi	r26, 0x00	; 0
    1130:	b0 e0       	ldi	r27, 0x00	; 0
    1132:	30 97       	sbiw	r30, 0x00	; 0
    1134:	39 f1       	breq	.+78     	; 0x1184 <malloc+0x70>
    1136:	40 81       	ld	r20, Z
    1138:	51 81       	ldd	r21, Z+1	; 0x01
    113a:	48 17       	cp	r20, r24
    113c:	59 07       	cpc	r21, r25
    113e:	b8 f0       	brcs	.+46     	; 0x116e <malloc+0x5a>
    1140:	48 17       	cp	r20, r24
    1142:	59 07       	cpc	r21, r25
    1144:	71 f4       	brne	.+28     	; 0x1162 <malloc+0x4e>
    1146:	82 81       	ldd	r24, Z+2	; 0x02
    1148:	93 81       	ldd	r25, Z+3	; 0x03
    114a:	10 97       	sbiw	r26, 0x00	; 0
    114c:	29 f0       	breq	.+10     	; 0x1158 <malloc+0x44>
    114e:	13 96       	adiw	r26, 0x03	; 3
    1150:	9c 93       	st	X, r25
    1152:	8e 93       	st	-X, r24
    1154:	12 97       	sbiw	r26, 0x02	; 2
    1156:	2c c0       	rjmp	.+88     	; 0x11b0 <malloc+0x9c>
    1158:	90 93 5c 03 	sts	0x035C, r25
    115c:	80 93 5b 03 	sts	0x035B, r24
    1160:	27 c0       	rjmp	.+78     	; 0x11b0 <malloc+0x9c>
    1162:	21 15       	cp	r18, r1
    1164:	31 05       	cpc	r19, r1
    1166:	31 f0       	breq	.+12     	; 0x1174 <malloc+0x60>
    1168:	42 17       	cp	r20, r18
    116a:	53 07       	cpc	r21, r19
    116c:	18 f0       	brcs	.+6      	; 0x1174 <malloc+0x60>
    116e:	a9 01       	movw	r20, r18
    1170:	db 01       	movw	r26, r22
    1172:	01 c0       	rjmp	.+2      	; 0x1176 <malloc+0x62>
    1174:	ef 01       	movw	r28, r30
    1176:	9a 01       	movw	r18, r20
    1178:	bd 01       	movw	r22, r26
    117a:	df 01       	movw	r26, r30
    117c:	02 80       	ldd	r0, Z+2	; 0x02
    117e:	f3 81       	ldd	r31, Z+3	; 0x03
    1180:	e0 2d       	mov	r30, r0
    1182:	d7 cf       	rjmp	.-82     	; 0x1132 <malloc+0x1e>
    1184:	21 15       	cp	r18, r1
    1186:	31 05       	cpc	r19, r1
    1188:	f9 f0       	breq	.+62     	; 0x11c8 <malloc+0xb4>
    118a:	28 1b       	sub	r18, r24
    118c:	39 0b       	sbc	r19, r25
    118e:	24 30       	cpi	r18, 0x04	; 4
    1190:	31 05       	cpc	r19, r1
    1192:	80 f4       	brcc	.+32     	; 0x11b4 <malloc+0xa0>
    1194:	8a 81       	ldd	r24, Y+2	; 0x02
    1196:	9b 81       	ldd	r25, Y+3	; 0x03
    1198:	61 15       	cp	r22, r1
    119a:	71 05       	cpc	r23, r1
    119c:	21 f0       	breq	.+8      	; 0x11a6 <malloc+0x92>
    119e:	fb 01       	movw	r30, r22
    11a0:	93 83       	std	Z+3, r25	; 0x03
    11a2:	82 83       	std	Z+2, r24	; 0x02
    11a4:	04 c0       	rjmp	.+8      	; 0x11ae <malloc+0x9a>
    11a6:	90 93 5c 03 	sts	0x035C, r25
    11aa:	80 93 5b 03 	sts	0x035B, r24
    11ae:	fe 01       	movw	r30, r28
    11b0:	32 96       	adiw	r30, 0x02	; 2
    11b2:	44 c0       	rjmp	.+136    	; 0x123c <malloc+0x128>
    11b4:	fe 01       	movw	r30, r28
    11b6:	e2 0f       	add	r30, r18
    11b8:	f3 1f       	adc	r31, r19
    11ba:	81 93       	st	Z+, r24
    11bc:	91 93       	st	Z+, r25
    11be:	22 50       	subi	r18, 0x02	; 2
    11c0:	31 09       	sbc	r19, r1
    11c2:	39 83       	std	Y+1, r19	; 0x01
    11c4:	28 83       	st	Y, r18
    11c6:	3a c0       	rjmp	.+116    	; 0x123c <malloc+0x128>
    11c8:	20 91 59 03 	lds	r18, 0x0359
    11cc:	30 91 5a 03 	lds	r19, 0x035A
    11d0:	23 2b       	or	r18, r19
    11d2:	41 f4       	brne	.+16     	; 0x11e4 <malloc+0xd0>
    11d4:	20 91 02 01 	lds	r18, 0x0102
    11d8:	30 91 03 01 	lds	r19, 0x0103
    11dc:	30 93 5a 03 	sts	0x035A, r19
    11e0:	20 93 59 03 	sts	0x0359, r18
    11e4:	20 91 00 01 	lds	r18, 0x0100
    11e8:	30 91 01 01 	lds	r19, 0x0101
    11ec:	21 15       	cp	r18, r1
    11ee:	31 05       	cpc	r19, r1
    11f0:	41 f4       	brne	.+16     	; 0x1202 <malloc+0xee>
    11f2:	2d b7       	in	r18, 0x3d	; 61
    11f4:	3e b7       	in	r19, 0x3e	; 62
    11f6:	40 91 04 01 	lds	r20, 0x0104
    11fa:	50 91 05 01 	lds	r21, 0x0105
    11fe:	24 1b       	sub	r18, r20
    1200:	35 0b       	sbc	r19, r21
    1202:	e0 91 59 03 	lds	r30, 0x0359
    1206:	f0 91 5a 03 	lds	r31, 0x035A
    120a:	e2 17       	cp	r30, r18
    120c:	f3 07       	cpc	r31, r19
    120e:	a0 f4       	brcc	.+40     	; 0x1238 <malloc+0x124>
    1210:	2e 1b       	sub	r18, r30
    1212:	3f 0b       	sbc	r19, r31
    1214:	28 17       	cp	r18, r24
    1216:	39 07       	cpc	r19, r25
    1218:	78 f0       	brcs	.+30     	; 0x1238 <malloc+0x124>
    121a:	ac 01       	movw	r20, r24
    121c:	4e 5f       	subi	r20, 0xFE	; 254
    121e:	5f 4f       	sbci	r21, 0xFF	; 255
    1220:	24 17       	cp	r18, r20
    1222:	35 07       	cpc	r19, r21
    1224:	48 f0       	brcs	.+18     	; 0x1238 <malloc+0x124>
    1226:	4e 0f       	add	r20, r30
    1228:	5f 1f       	adc	r21, r31
    122a:	50 93 5a 03 	sts	0x035A, r21
    122e:	40 93 59 03 	sts	0x0359, r20
    1232:	81 93       	st	Z+, r24
    1234:	91 93       	st	Z+, r25
    1236:	02 c0       	rjmp	.+4      	; 0x123c <malloc+0x128>
    1238:	e0 e0       	ldi	r30, 0x00	; 0
    123a:	f0 e0       	ldi	r31, 0x00	; 0
    123c:	cf 01       	movw	r24, r30
    123e:	df 91       	pop	r29
    1240:	cf 91       	pop	r28
    1242:	08 95       	ret

00001244 <free>:
    1244:	cf 93       	push	r28
    1246:	df 93       	push	r29
    1248:	00 97       	sbiw	r24, 0x00	; 0
    124a:	09 f4       	brne	.+2      	; 0x124e <free+0xa>
    124c:	87 c0       	rjmp	.+270    	; 0x135c <free+0x118>
    124e:	fc 01       	movw	r30, r24
    1250:	32 97       	sbiw	r30, 0x02	; 2
    1252:	13 82       	std	Z+3, r1	; 0x03
    1254:	12 82       	std	Z+2, r1	; 0x02
    1256:	c0 91 5b 03 	lds	r28, 0x035B
    125a:	d0 91 5c 03 	lds	r29, 0x035C
    125e:	20 97       	sbiw	r28, 0x00	; 0
    1260:	81 f4       	brne	.+32     	; 0x1282 <free+0x3e>
    1262:	20 81       	ld	r18, Z
    1264:	31 81       	ldd	r19, Z+1	; 0x01
    1266:	28 0f       	add	r18, r24
    1268:	39 1f       	adc	r19, r25
    126a:	80 91 59 03 	lds	r24, 0x0359
    126e:	90 91 5a 03 	lds	r25, 0x035A
    1272:	82 17       	cp	r24, r18
    1274:	93 07       	cpc	r25, r19
    1276:	79 f5       	brne	.+94     	; 0x12d6 <free+0x92>
    1278:	f0 93 5a 03 	sts	0x035A, r31
    127c:	e0 93 59 03 	sts	0x0359, r30
    1280:	6d c0       	rjmp	.+218    	; 0x135c <free+0x118>
    1282:	de 01       	movw	r26, r28
    1284:	20 e0       	ldi	r18, 0x00	; 0
    1286:	30 e0       	ldi	r19, 0x00	; 0
    1288:	ae 17       	cp	r26, r30
    128a:	bf 07       	cpc	r27, r31
    128c:	50 f4       	brcc	.+20     	; 0x12a2 <free+0x5e>
    128e:	12 96       	adiw	r26, 0x02	; 2
    1290:	4d 91       	ld	r20, X+
    1292:	5c 91       	ld	r21, X
    1294:	13 97       	sbiw	r26, 0x03	; 3
    1296:	9d 01       	movw	r18, r26
    1298:	41 15       	cp	r20, r1
    129a:	51 05       	cpc	r21, r1
    129c:	09 f1       	breq	.+66     	; 0x12e0 <free+0x9c>
    129e:	da 01       	movw	r26, r20
    12a0:	f3 cf       	rjmp	.-26     	; 0x1288 <free+0x44>
    12a2:	b3 83       	std	Z+3, r27	; 0x03
    12a4:	a2 83       	std	Z+2, r26	; 0x02
    12a6:	40 81       	ld	r20, Z
    12a8:	51 81       	ldd	r21, Z+1	; 0x01
    12aa:	84 0f       	add	r24, r20
    12ac:	95 1f       	adc	r25, r21
    12ae:	8a 17       	cp	r24, r26
    12b0:	9b 07       	cpc	r25, r27
    12b2:	71 f4       	brne	.+28     	; 0x12d0 <free+0x8c>
    12b4:	8d 91       	ld	r24, X+
    12b6:	9c 91       	ld	r25, X
    12b8:	11 97       	sbiw	r26, 0x01	; 1
    12ba:	84 0f       	add	r24, r20
    12bc:	95 1f       	adc	r25, r21
    12be:	02 96       	adiw	r24, 0x02	; 2
    12c0:	91 83       	std	Z+1, r25	; 0x01
    12c2:	80 83       	st	Z, r24
    12c4:	12 96       	adiw	r26, 0x02	; 2
    12c6:	8d 91       	ld	r24, X+
    12c8:	9c 91       	ld	r25, X
    12ca:	13 97       	sbiw	r26, 0x03	; 3
    12cc:	93 83       	std	Z+3, r25	; 0x03
    12ce:	82 83       	std	Z+2, r24	; 0x02
    12d0:	21 15       	cp	r18, r1
    12d2:	31 05       	cpc	r19, r1
    12d4:	29 f4       	brne	.+10     	; 0x12e0 <free+0x9c>
    12d6:	f0 93 5c 03 	sts	0x035C, r31
    12da:	e0 93 5b 03 	sts	0x035B, r30
    12de:	3e c0       	rjmp	.+124    	; 0x135c <free+0x118>
    12e0:	d9 01       	movw	r26, r18
    12e2:	13 96       	adiw	r26, 0x03	; 3
    12e4:	fc 93       	st	X, r31
    12e6:	ee 93       	st	-X, r30
    12e8:	12 97       	sbiw	r26, 0x02	; 2
    12ea:	4d 91       	ld	r20, X+
    12ec:	5d 91       	ld	r21, X+
    12ee:	a4 0f       	add	r26, r20
    12f0:	b5 1f       	adc	r27, r21
    12f2:	ea 17       	cp	r30, r26
    12f4:	fb 07       	cpc	r31, r27
    12f6:	79 f4       	brne	.+30     	; 0x1316 <free+0xd2>
    12f8:	80 81       	ld	r24, Z
    12fa:	91 81       	ldd	r25, Z+1	; 0x01
    12fc:	84 0f       	add	r24, r20
    12fe:	95 1f       	adc	r25, r21
    1300:	02 96       	adiw	r24, 0x02	; 2
    1302:	d9 01       	movw	r26, r18
    1304:	11 96       	adiw	r26, 0x01	; 1
    1306:	9c 93       	st	X, r25
    1308:	8e 93       	st	-X, r24
    130a:	82 81       	ldd	r24, Z+2	; 0x02
    130c:	93 81       	ldd	r25, Z+3	; 0x03
    130e:	13 96       	adiw	r26, 0x03	; 3
    1310:	9c 93       	st	X, r25
    1312:	8e 93       	st	-X, r24
    1314:	12 97       	sbiw	r26, 0x02	; 2
    1316:	e0 e0       	ldi	r30, 0x00	; 0
    1318:	f0 e0       	ldi	r31, 0x00	; 0
    131a:	8a 81       	ldd	r24, Y+2	; 0x02
    131c:	9b 81       	ldd	r25, Y+3	; 0x03
    131e:	00 97       	sbiw	r24, 0x00	; 0
    1320:	19 f0       	breq	.+6      	; 0x1328 <free+0xe4>
    1322:	fe 01       	movw	r30, r28
    1324:	ec 01       	movw	r28, r24
    1326:	f9 cf       	rjmp	.-14     	; 0x131a <free+0xd6>
    1328:	ce 01       	movw	r24, r28
    132a:	02 96       	adiw	r24, 0x02	; 2
    132c:	28 81       	ld	r18, Y
    132e:	39 81       	ldd	r19, Y+1	; 0x01
    1330:	82 0f       	add	r24, r18
    1332:	93 1f       	adc	r25, r19
    1334:	20 91 59 03 	lds	r18, 0x0359
    1338:	30 91 5a 03 	lds	r19, 0x035A
    133c:	28 17       	cp	r18, r24
    133e:	39 07       	cpc	r19, r25
    1340:	69 f4       	brne	.+26     	; 0x135c <free+0x118>
    1342:	30 97       	sbiw	r30, 0x00	; 0
    1344:	29 f4       	brne	.+10     	; 0x1350 <free+0x10c>
    1346:	10 92 5c 03 	sts	0x035C, r1
    134a:	10 92 5b 03 	sts	0x035B, r1
    134e:	02 c0       	rjmp	.+4      	; 0x1354 <free+0x110>
    1350:	13 82       	std	Z+3, r1	; 0x03
    1352:	12 82       	std	Z+2, r1	; 0x02
    1354:	d0 93 5a 03 	sts	0x035A, r29
    1358:	c0 93 59 03 	sts	0x0359, r28
    135c:	df 91       	pop	r29
    135e:	cf 91       	pop	r28
    1360:	08 95       	ret

00001362 <fdevopen>:
    1362:	0f 93       	push	r16
    1364:	1f 93       	push	r17
    1366:	cf 93       	push	r28
    1368:	df 93       	push	r29
    136a:	ec 01       	movw	r28, r24
    136c:	8b 01       	movw	r16, r22
    136e:	00 97       	sbiw	r24, 0x00	; 0
    1370:	31 f4       	brne	.+12     	; 0x137e <fdevopen+0x1c>
    1372:	61 15       	cp	r22, r1
    1374:	71 05       	cpc	r23, r1
    1376:	19 f4       	brne	.+6      	; 0x137e <fdevopen+0x1c>
    1378:	80 e0       	ldi	r24, 0x00	; 0
    137a:	90 e0       	ldi	r25, 0x00	; 0
    137c:	38 c0       	rjmp	.+112    	; 0x13ee <fdevopen+0x8c>
    137e:	6e e0       	ldi	r22, 0x0E	; 14
    1380:	70 e0       	ldi	r23, 0x00	; 0
    1382:	81 e0       	ldi	r24, 0x01	; 1
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	0e 94 0f 0c 	call	0x181e	; 0x181e <calloc>
    138a:	fc 01       	movw	r30, r24
    138c:	00 97       	sbiw	r24, 0x00	; 0
    138e:	a1 f3       	breq	.-24     	; 0x1378 <fdevopen+0x16>
    1390:	80 e8       	ldi	r24, 0x80	; 128
    1392:	83 83       	std	Z+3, r24	; 0x03
    1394:	01 15       	cp	r16, r1
    1396:	11 05       	cpc	r17, r1
    1398:	71 f0       	breq	.+28     	; 0x13b6 <fdevopen+0x54>
    139a:	13 87       	std	Z+11, r17	; 0x0b
    139c:	02 87       	std	Z+10, r16	; 0x0a
    139e:	81 e8       	ldi	r24, 0x81	; 129
    13a0:	83 83       	std	Z+3, r24	; 0x03
    13a2:	80 91 5d 03 	lds	r24, 0x035D
    13a6:	90 91 5e 03 	lds	r25, 0x035E
    13aa:	89 2b       	or	r24, r25
    13ac:	21 f4       	brne	.+8      	; 0x13b6 <fdevopen+0x54>
    13ae:	f0 93 5e 03 	sts	0x035E, r31
    13b2:	e0 93 5d 03 	sts	0x035D, r30
    13b6:	20 97       	sbiw	r28, 0x00	; 0
    13b8:	c9 f0       	breq	.+50     	; 0x13ec <fdevopen+0x8a>
    13ba:	d1 87       	std	Z+9, r29	; 0x09
    13bc:	c0 87       	std	Z+8, r28	; 0x08
    13be:	83 81       	ldd	r24, Z+3	; 0x03
    13c0:	82 60       	ori	r24, 0x02	; 2
    13c2:	83 83       	std	Z+3, r24	; 0x03
    13c4:	80 91 5f 03 	lds	r24, 0x035F
    13c8:	90 91 60 03 	lds	r25, 0x0360
    13cc:	89 2b       	or	r24, r25
    13ce:	71 f4       	brne	.+28     	; 0x13ec <fdevopen+0x8a>
    13d0:	f0 93 60 03 	sts	0x0360, r31
    13d4:	e0 93 5f 03 	sts	0x035F, r30
    13d8:	80 91 61 03 	lds	r24, 0x0361
    13dc:	90 91 62 03 	lds	r25, 0x0362
    13e0:	89 2b       	or	r24, r25
    13e2:	21 f4       	brne	.+8      	; 0x13ec <fdevopen+0x8a>
    13e4:	f0 93 62 03 	sts	0x0362, r31
    13e8:	e0 93 61 03 	sts	0x0361, r30
    13ec:	cf 01       	movw	r24, r30
    13ee:	df 91       	pop	r29
    13f0:	cf 91       	pop	r28
    13f2:	1f 91       	pop	r17
    13f4:	0f 91       	pop	r16
    13f6:	08 95       	ret

000013f8 <printf>:
    13f8:	a0 e0       	ldi	r26, 0x00	; 0
    13fa:	b0 e0       	ldi	r27, 0x00	; 0
    13fc:	e2 e0       	ldi	r30, 0x02	; 2
    13fe:	fa e0       	ldi	r31, 0x0A	; 10
    1400:	0c 94 e8 0c 	jmp	0x19d0	; 0x19d0 <__prologue_saves__+0x20>
    1404:	fe 01       	movw	r30, r28
    1406:	35 96       	adiw	r30, 0x05	; 5
    1408:	61 91       	ld	r22, Z+
    140a:	71 91       	ld	r23, Z+
    140c:	af 01       	movw	r20, r30
    140e:	80 91 5f 03 	lds	r24, 0x035F
    1412:	90 91 60 03 	lds	r25, 0x0360
    1416:	0e 94 3d 0a 	call	0x147a	; 0x147a <vfprintf>
    141a:	e2 e0       	ldi	r30, 0x02	; 2
    141c:	0c 94 04 0d 	jmp	0x1a08	; 0x1a08 <__epilogue_restores__+0x20>

00001420 <puts>:
    1420:	0f 93       	push	r16
    1422:	1f 93       	push	r17
    1424:	cf 93       	push	r28
    1426:	df 93       	push	r29
    1428:	e0 91 5f 03 	lds	r30, 0x035F
    142c:	f0 91 60 03 	lds	r31, 0x0360
    1430:	23 81       	ldd	r18, Z+3	; 0x03
    1432:	21 ff       	sbrs	r18, 1
    1434:	1b c0       	rjmp	.+54     	; 0x146c <puts+0x4c>
    1436:	ec 01       	movw	r28, r24
    1438:	00 e0       	ldi	r16, 0x00	; 0
    143a:	10 e0       	ldi	r17, 0x00	; 0
    143c:	89 91       	ld	r24, Y+
    143e:	60 91 5f 03 	lds	r22, 0x035F
    1442:	70 91 60 03 	lds	r23, 0x0360
    1446:	db 01       	movw	r26, r22
    1448:	18 96       	adiw	r26, 0x08	; 8
    144a:	ed 91       	ld	r30, X+
    144c:	fc 91       	ld	r31, X
    144e:	19 97       	sbiw	r26, 0x09	; 9
    1450:	88 23       	and	r24, r24
    1452:	31 f0       	breq	.+12     	; 0x1460 <puts+0x40>
    1454:	09 95       	icall
    1456:	89 2b       	or	r24, r25
    1458:	89 f3       	breq	.-30     	; 0x143c <puts+0x1c>
    145a:	0f ef       	ldi	r16, 0xFF	; 255
    145c:	1f ef       	ldi	r17, 0xFF	; 255
    145e:	ee cf       	rjmp	.-36     	; 0x143c <puts+0x1c>
    1460:	8a e0       	ldi	r24, 0x0A	; 10
    1462:	09 95       	icall
    1464:	89 2b       	or	r24, r25
    1466:	11 f4       	brne	.+4      	; 0x146c <puts+0x4c>
    1468:	c8 01       	movw	r24, r16
    146a:	02 c0       	rjmp	.+4      	; 0x1470 <puts+0x50>
    146c:	8f ef       	ldi	r24, 0xFF	; 255
    146e:	9f ef       	ldi	r25, 0xFF	; 255
    1470:	df 91       	pop	r29
    1472:	cf 91       	pop	r28
    1474:	1f 91       	pop	r17
    1476:	0f 91       	pop	r16
    1478:	08 95       	ret

0000147a <vfprintf>:
    147a:	ac e0       	ldi	r26, 0x0C	; 12
    147c:	b0 e0       	ldi	r27, 0x00	; 0
    147e:	e3 e4       	ldi	r30, 0x43	; 67
    1480:	fa e0       	ldi	r31, 0x0A	; 10
    1482:	0c 94 d8 0c 	jmp	0x19b0	; 0x19b0 <__prologue_saves__>
    1486:	7c 01       	movw	r14, r24
    1488:	6b 01       	movw	r12, r22
    148a:	8a 01       	movw	r16, r20
    148c:	fc 01       	movw	r30, r24
    148e:	17 82       	std	Z+7, r1	; 0x07
    1490:	16 82       	std	Z+6, r1	; 0x06
    1492:	83 81       	ldd	r24, Z+3	; 0x03
    1494:	81 ff       	sbrs	r24, 1
    1496:	bd c1       	rjmp	.+890    	; 0x1812 <vfprintf+0x398>
    1498:	ce 01       	movw	r24, r28
    149a:	01 96       	adiw	r24, 0x01	; 1
    149c:	4c 01       	movw	r8, r24
    149e:	f7 01       	movw	r30, r14
    14a0:	93 81       	ldd	r25, Z+3	; 0x03
    14a2:	f6 01       	movw	r30, r12
    14a4:	93 fd       	sbrc	r25, 3
    14a6:	85 91       	lpm	r24, Z+
    14a8:	93 ff       	sbrs	r25, 3
    14aa:	81 91       	ld	r24, Z+
    14ac:	6f 01       	movw	r12, r30
    14ae:	88 23       	and	r24, r24
    14b0:	09 f4       	brne	.+2      	; 0x14b4 <vfprintf+0x3a>
    14b2:	ab c1       	rjmp	.+854    	; 0x180a <vfprintf+0x390>
    14b4:	85 32       	cpi	r24, 0x25	; 37
    14b6:	39 f4       	brne	.+14     	; 0x14c6 <vfprintf+0x4c>
    14b8:	93 fd       	sbrc	r25, 3
    14ba:	85 91       	lpm	r24, Z+
    14bc:	93 ff       	sbrs	r25, 3
    14be:	81 91       	ld	r24, Z+
    14c0:	6f 01       	movw	r12, r30
    14c2:	85 32       	cpi	r24, 0x25	; 37
    14c4:	29 f4       	brne	.+10     	; 0x14d0 <vfprintf+0x56>
    14c6:	b7 01       	movw	r22, r14
    14c8:	90 e0       	ldi	r25, 0x00	; 0
    14ca:	0e 94 48 0c 	call	0x1890	; 0x1890 <fputc>
    14ce:	e7 cf       	rjmp	.-50     	; 0x149e <vfprintf+0x24>
    14d0:	51 2c       	mov	r5, r1
    14d2:	31 2c       	mov	r3, r1
    14d4:	20 e0       	ldi	r18, 0x00	; 0
    14d6:	20 32       	cpi	r18, 0x20	; 32
    14d8:	a0 f4       	brcc	.+40     	; 0x1502 <vfprintf+0x88>
    14da:	8b 32       	cpi	r24, 0x2B	; 43
    14dc:	69 f0       	breq	.+26     	; 0x14f8 <vfprintf+0x7e>
    14de:	30 f4       	brcc	.+12     	; 0x14ec <vfprintf+0x72>
    14e0:	80 32       	cpi	r24, 0x20	; 32
    14e2:	59 f0       	breq	.+22     	; 0x14fa <vfprintf+0x80>
    14e4:	83 32       	cpi	r24, 0x23	; 35
    14e6:	69 f4       	brne	.+26     	; 0x1502 <vfprintf+0x88>
    14e8:	20 61       	ori	r18, 0x10	; 16
    14ea:	2c c0       	rjmp	.+88     	; 0x1544 <vfprintf+0xca>
    14ec:	8d 32       	cpi	r24, 0x2D	; 45
    14ee:	39 f0       	breq	.+14     	; 0x14fe <vfprintf+0x84>
    14f0:	80 33       	cpi	r24, 0x30	; 48
    14f2:	39 f4       	brne	.+14     	; 0x1502 <vfprintf+0x88>
    14f4:	21 60       	ori	r18, 0x01	; 1
    14f6:	26 c0       	rjmp	.+76     	; 0x1544 <vfprintf+0xca>
    14f8:	22 60       	ori	r18, 0x02	; 2
    14fa:	24 60       	ori	r18, 0x04	; 4
    14fc:	23 c0       	rjmp	.+70     	; 0x1544 <vfprintf+0xca>
    14fe:	28 60       	ori	r18, 0x08	; 8
    1500:	21 c0       	rjmp	.+66     	; 0x1544 <vfprintf+0xca>
    1502:	27 fd       	sbrc	r18, 7
    1504:	27 c0       	rjmp	.+78     	; 0x1554 <vfprintf+0xda>
    1506:	30 ed       	ldi	r19, 0xD0	; 208
    1508:	38 0f       	add	r19, r24
    150a:	3a 30       	cpi	r19, 0x0A	; 10
    150c:	78 f4       	brcc	.+30     	; 0x152c <vfprintf+0xb2>
    150e:	26 ff       	sbrs	r18, 6
    1510:	06 c0       	rjmp	.+12     	; 0x151e <vfprintf+0xa4>
    1512:	fa e0       	ldi	r31, 0x0A	; 10
    1514:	5f 9e       	mul	r5, r31
    1516:	30 0d       	add	r19, r0
    1518:	11 24       	eor	r1, r1
    151a:	53 2e       	mov	r5, r19
    151c:	13 c0       	rjmp	.+38     	; 0x1544 <vfprintf+0xca>
    151e:	8a e0       	ldi	r24, 0x0A	; 10
    1520:	38 9e       	mul	r3, r24
    1522:	30 0d       	add	r19, r0
    1524:	11 24       	eor	r1, r1
    1526:	33 2e       	mov	r3, r19
    1528:	20 62       	ori	r18, 0x20	; 32
    152a:	0c c0       	rjmp	.+24     	; 0x1544 <vfprintf+0xca>
    152c:	8e 32       	cpi	r24, 0x2E	; 46
    152e:	21 f4       	brne	.+8      	; 0x1538 <vfprintf+0xbe>
    1530:	26 fd       	sbrc	r18, 6
    1532:	6b c1       	rjmp	.+726    	; 0x180a <vfprintf+0x390>
    1534:	20 64       	ori	r18, 0x40	; 64
    1536:	06 c0       	rjmp	.+12     	; 0x1544 <vfprintf+0xca>
    1538:	8c 36       	cpi	r24, 0x6C	; 108
    153a:	11 f4       	brne	.+4      	; 0x1540 <vfprintf+0xc6>
    153c:	20 68       	ori	r18, 0x80	; 128
    153e:	02 c0       	rjmp	.+4      	; 0x1544 <vfprintf+0xca>
    1540:	88 36       	cpi	r24, 0x68	; 104
    1542:	41 f4       	brne	.+16     	; 0x1554 <vfprintf+0xda>
    1544:	f6 01       	movw	r30, r12
    1546:	93 fd       	sbrc	r25, 3
    1548:	85 91       	lpm	r24, Z+
    154a:	93 ff       	sbrs	r25, 3
    154c:	81 91       	ld	r24, Z+
    154e:	6f 01       	movw	r12, r30
    1550:	81 11       	cpse	r24, r1
    1552:	c1 cf       	rjmp	.-126    	; 0x14d6 <vfprintf+0x5c>
    1554:	98 2f       	mov	r25, r24
    1556:	9f 7d       	andi	r25, 0xDF	; 223
    1558:	95 54       	subi	r25, 0x45	; 69
    155a:	93 30       	cpi	r25, 0x03	; 3
    155c:	28 f4       	brcc	.+10     	; 0x1568 <vfprintf+0xee>
    155e:	0c 5f       	subi	r16, 0xFC	; 252
    1560:	1f 4f       	sbci	r17, 0xFF	; 255
    1562:	ff e3       	ldi	r31, 0x3F	; 63
    1564:	f9 83       	std	Y+1, r31	; 0x01
    1566:	0d c0       	rjmp	.+26     	; 0x1582 <vfprintf+0x108>
    1568:	83 36       	cpi	r24, 0x63	; 99
    156a:	31 f0       	breq	.+12     	; 0x1578 <vfprintf+0xfe>
    156c:	83 37       	cpi	r24, 0x73	; 115
    156e:	71 f0       	breq	.+28     	; 0x158c <vfprintf+0x112>
    1570:	83 35       	cpi	r24, 0x53	; 83
    1572:	09 f0       	breq	.+2      	; 0x1576 <vfprintf+0xfc>
    1574:	5b c0       	rjmp	.+182    	; 0x162c <vfprintf+0x1b2>
    1576:	22 c0       	rjmp	.+68     	; 0x15bc <vfprintf+0x142>
    1578:	f8 01       	movw	r30, r16
    157a:	80 81       	ld	r24, Z
    157c:	89 83       	std	Y+1, r24	; 0x01
    157e:	0e 5f       	subi	r16, 0xFE	; 254
    1580:	1f 4f       	sbci	r17, 0xFF	; 255
    1582:	44 24       	eor	r4, r4
    1584:	43 94       	inc	r4
    1586:	51 2c       	mov	r5, r1
    1588:	54 01       	movw	r10, r8
    158a:	15 c0       	rjmp	.+42     	; 0x15b6 <vfprintf+0x13c>
    158c:	38 01       	movw	r6, r16
    158e:	f2 e0       	ldi	r31, 0x02	; 2
    1590:	6f 0e       	add	r6, r31
    1592:	71 1c       	adc	r7, r1
    1594:	f8 01       	movw	r30, r16
    1596:	a0 80       	ld	r10, Z
    1598:	b1 80       	ldd	r11, Z+1	; 0x01
    159a:	26 ff       	sbrs	r18, 6
    159c:	03 c0       	rjmp	.+6      	; 0x15a4 <vfprintf+0x12a>
    159e:	65 2d       	mov	r22, r5
    15a0:	70 e0       	ldi	r23, 0x00	; 0
    15a2:	02 c0       	rjmp	.+4      	; 0x15a8 <vfprintf+0x12e>
    15a4:	6f ef       	ldi	r22, 0xFF	; 255
    15a6:	7f ef       	ldi	r23, 0xFF	; 255
    15a8:	c5 01       	movw	r24, r10
    15aa:	2c 87       	std	Y+12, r18	; 0x0c
    15ac:	0e 94 3d 0c 	call	0x187a	; 0x187a <strnlen>
    15b0:	2c 01       	movw	r4, r24
    15b2:	83 01       	movw	r16, r6
    15b4:	2c 85       	ldd	r18, Y+12	; 0x0c
    15b6:	2f 77       	andi	r18, 0x7F	; 127
    15b8:	22 2e       	mov	r2, r18
    15ba:	17 c0       	rjmp	.+46     	; 0x15ea <vfprintf+0x170>
    15bc:	38 01       	movw	r6, r16
    15be:	f2 e0       	ldi	r31, 0x02	; 2
    15c0:	6f 0e       	add	r6, r31
    15c2:	71 1c       	adc	r7, r1
    15c4:	f8 01       	movw	r30, r16
    15c6:	a0 80       	ld	r10, Z
    15c8:	b1 80       	ldd	r11, Z+1	; 0x01
    15ca:	26 ff       	sbrs	r18, 6
    15cc:	03 c0       	rjmp	.+6      	; 0x15d4 <vfprintf+0x15a>
    15ce:	65 2d       	mov	r22, r5
    15d0:	70 e0       	ldi	r23, 0x00	; 0
    15d2:	02 c0       	rjmp	.+4      	; 0x15d8 <vfprintf+0x15e>
    15d4:	6f ef       	ldi	r22, 0xFF	; 255
    15d6:	7f ef       	ldi	r23, 0xFF	; 255
    15d8:	c5 01       	movw	r24, r10
    15da:	2c 87       	std	Y+12, r18	; 0x0c
    15dc:	0e 94 2b 0c 	call	0x1856	; 0x1856 <strnlen_P>
    15e0:	2c 01       	movw	r4, r24
    15e2:	2c 85       	ldd	r18, Y+12	; 0x0c
    15e4:	20 68       	ori	r18, 0x80	; 128
    15e6:	22 2e       	mov	r2, r18
    15e8:	83 01       	movw	r16, r6
    15ea:	23 fc       	sbrc	r2, 3
    15ec:	1b c0       	rjmp	.+54     	; 0x1624 <vfprintf+0x1aa>
    15ee:	83 2d       	mov	r24, r3
    15f0:	90 e0       	ldi	r25, 0x00	; 0
    15f2:	48 16       	cp	r4, r24
    15f4:	59 06       	cpc	r5, r25
    15f6:	b0 f4       	brcc	.+44     	; 0x1624 <vfprintf+0x1aa>
    15f8:	b7 01       	movw	r22, r14
    15fa:	80 e2       	ldi	r24, 0x20	; 32
    15fc:	90 e0       	ldi	r25, 0x00	; 0
    15fe:	0e 94 48 0c 	call	0x1890	; 0x1890 <fputc>
    1602:	3a 94       	dec	r3
    1604:	f4 cf       	rjmp	.-24     	; 0x15ee <vfprintf+0x174>
    1606:	f5 01       	movw	r30, r10
    1608:	27 fc       	sbrc	r2, 7
    160a:	85 91       	lpm	r24, Z+
    160c:	27 fe       	sbrs	r2, 7
    160e:	81 91       	ld	r24, Z+
    1610:	5f 01       	movw	r10, r30
    1612:	b7 01       	movw	r22, r14
    1614:	90 e0       	ldi	r25, 0x00	; 0
    1616:	0e 94 48 0c 	call	0x1890	; 0x1890 <fputc>
    161a:	31 10       	cpse	r3, r1
    161c:	3a 94       	dec	r3
    161e:	f1 e0       	ldi	r31, 0x01	; 1
    1620:	4f 1a       	sub	r4, r31
    1622:	51 08       	sbc	r5, r1
    1624:	41 14       	cp	r4, r1
    1626:	51 04       	cpc	r5, r1
    1628:	71 f7       	brne	.-36     	; 0x1606 <vfprintf+0x18c>
    162a:	e5 c0       	rjmp	.+458    	; 0x17f6 <vfprintf+0x37c>
    162c:	84 36       	cpi	r24, 0x64	; 100
    162e:	11 f0       	breq	.+4      	; 0x1634 <vfprintf+0x1ba>
    1630:	89 36       	cpi	r24, 0x69	; 105
    1632:	39 f5       	brne	.+78     	; 0x1682 <vfprintf+0x208>
    1634:	f8 01       	movw	r30, r16
    1636:	27 ff       	sbrs	r18, 7
    1638:	07 c0       	rjmp	.+14     	; 0x1648 <vfprintf+0x1ce>
    163a:	60 81       	ld	r22, Z
    163c:	71 81       	ldd	r23, Z+1	; 0x01
    163e:	82 81       	ldd	r24, Z+2	; 0x02
    1640:	93 81       	ldd	r25, Z+3	; 0x03
    1642:	0c 5f       	subi	r16, 0xFC	; 252
    1644:	1f 4f       	sbci	r17, 0xFF	; 255
    1646:	08 c0       	rjmp	.+16     	; 0x1658 <vfprintf+0x1de>
    1648:	60 81       	ld	r22, Z
    164a:	71 81       	ldd	r23, Z+1	; 0x01
    164c:	88 27       	eor	r24, r24
    164e:	77 fd       	sbrc	r23, 7
    1650:	80 95       	com	r24
    1652:	98 2f       	mov	r25, r24
    1654:	0e 5f       	subi	r16, 0xFE	; 254
    1656:	1f 4f       	sbci	r17, 0xFF	; 255
    1658:	2f 76       	andi	r18, 0x6F	; 111
    165a:	b2 2e       	mov	r11, r18
    165c:	97 ff       	sbrs	r25, 7
    165e:	09 c0       	rjmp	.+18     	; 0x1672 <vfprintf+0x1f8>
    1660:	90 95       	com	r25
    1662:	80 95       	com	r24
    1664:	70 95       	com	r23
    1666:	61 95       	neg	r22
    1668:	7f 4f       	sbci	r23, 0xFF	; 255
    166a:	8f 4f       	sbci	r24, 0xFF	; 255
    166c:	9f 4f       	sbci	r25, 0xFF	; 255
    166e:	20 68       	ori	r18, 0x80	; 128
    1670:	b2 2e       	mov	r11, r18
    1672:	2a e0       	ldi	r18, 0x0A	; 10
    1674:	30 e0       	ldi	r19, 0x00	; 0
    1676:	a4 01       	movw	r20, r8
    1678:	0e 94 7a 0c 	call	0x18f4	; 0x18f4 <__ultoa_invert>
    167c:	a8 2e       	mov	r10, r24
    167e:	a8 18       	sub	r10, r8
    1680:	44 c0       	rjmp	.+136    	; 0x170a <vfprintf+0x290>
    1682:	85 37       	cpi	r24, 0x75	; 117
    1684:	29 f4       	brne	.+10     	; 0x1690 <vfprintf+0x216>
    1686:	2f 7e       	andi	r18, 0xEF	; 239
    1688:	b2 2e       	mov	r11, r18
    168a:	2a e0       	ldi	r18, 0x0A	; 10
    168c:	30 e0       	ldi	r19, 0x00	; 0
    168e:	25 c0       	rjmp	.+74     	; 0x16da <vfprintf+0x260>
    1690:	f2 2f       	mov	r31, r18
    1692:	f9 7f       	andi	r31, 0xF9	; 249
    1694:	bf 2e       	mov	r11, r31
    1696:	8f 36       	cpi	r24, 0x6F	; 111
    1698:	c1 f0       	breq	.+48     	; 0x16ca <vfprintf+0x250>
    169a:	18 f4       	brcc	.+6      	; 0x16a2 <vfprintf+0x228>
    169c:	88 35       	cpi	r24, 0x58	; 88
    169e:	79 f0       	breq	.+30     	; 0x16be <vfprintf+0x244>
    16a0:	b4 c0       	rjmp	.+360    	; 0x180a <vfprintf+0x390>
    16a2:	80 37       	cpi	r24, 0x70	; 112
    16a4:	19 f0       	breq	.+6      	; 0x16ac <vfprintf+0x232>
    16a6:	88 37       	cpi	r24, 0x78	; 120
    16a8:	21 f0       	breq	.+8      	; 0x16b2 <vfprintf+0x238>
    16aa:	af c0       	rjmp	.+350    	; 0x180a <vfprintf+0x390>
    16ac:	2f 2f       	mov	r18, r31
    16ae:	20 61       	ori	r18, 0x10	; 16
    16b0:	b2 2e       	mov	r11, r18
    16b2:	b4 fe       	sbrs	r11, 4
    16b4:	0d c0       	rjmp	.+26     	; 0x16d0 <vfprintf+0x256>
    16b6:	8b 2d       	mov	r24, r11
    16b8:	84 60       	ori	r24, 0x04	; 4
    16ba:	b8 2e       	mov	r11, r24
    16bc:	09 c0       	rjmp	.+18     	; 0x16d0 <vfprintf+0x256>
    16be:	24 ff       	sbrs	r18, 4
    16c0:	0a c0       	rjmp	.+20     	; 0x16d6 <vfprintf+0x25c>
    16c2:	9f 2f       	mov	r25, r31
    16c4:	96 60       	ori	r25, 0x06	; 6
    16c6:	b9 2e       	mov	r11, r25
    16c8:	06 c0       	rjmp	.+12     	; 0x16d6 <vfprintf+0x25c>
    16ca:	28 e0       	ldi	r18, 0x08	; 8
    16cc:	30 e0       	ldi	r19, 0x00	; 0
    16ce:	05 c0       	rjmp	.+10     	; 0x16da <vfprintf+0x260>
    16d0:	20 e1       	ldi	r18, 0x10	; 16
    16d2:	30 e0       	ldi	r19, 0x00	; 0
    16d4:	02 c0       	rjmp	.+4      	; 0x16da <vfprintf+0x260>
    16d6:	20 e1       	ldi	r18, 0x10	; 16
    16d8:	32 e0       	ldi	r19, 0x02	; 2
    16da:	f8 01       	movw	r30, r16
    16dc:	b7 fe       	sbrs	r11, 7
    16de:	07 c0       	rjmp	.+14     	; 0x16ee <vfprintf+0x274>
    16e0:	60 81       	ld	r22, Z
    16e2:	71 81       	ldd	r23, Z+1	; 0x01
    16e4:	82 81       	ldd	r24, Z+2	; 0x02
    16e6:	93 81       	ldd	r25, Z+3	; 0x03
    16e8:	0c 5f       	subi	r16, 0xFC	; 252
    16ea:	1f 4f       	sbci	r17, 0xFF	; 255
    16ec:	06 c0       	rjmp	.+12     	; 0x16fa <vfprintf+0x280>
    16ee:	60 81       	ld	r22, Z
    16f0:	71 81       	ldd	r23, Z+1	; 0x01
    16f2:	80 e0       	ldi	r24, 0x00	; 0
    16f4:	90 e0       	ldi	r25, 0x00	; 0
    16f6:	0e 5f       	subi	r16, 0xFE	; 254
    16f8:	1f 4f       	sbci	r17, 0xFF	; 255
    16fa:	a4 01       	movw	r20, r8
    16fc:	0e 94 7a 0c 	call	0x18f4	; 0x18f4 <__ultoa_invert>
    1700:	a8 2e       	mov	r10, r24
    1702:	a8 18       	sub	r10, r8
    1704:	fb 2d       	mov	r31, r11
    1706:	ff 77       	andi	r31, 0x7F	; 127
    1708:	bf 2e       	mov	r11, r31
    170a:	b6 fe       	sbrs	r11, 6
    170c:	0b c0       	rjmp	.+22     	; 0x1724 <vfprintf+0x2aa>
    170e:	2b 2d       	mov	r18, r11
    1710:	2e 7f       	andi	r18, 0xFE	; 254
    1712:	a5 14       	cp	r10, r5
    1714:	50 f4       	brcc	.+20     	; 0x172a <vfprintf+0x2b0>
    1716:	b4 fe       	sbrs	r11, 4
    1718:	0a c0       	rjmp	.+20     	; 0x172e <vfprintf+0x2b4>
    171a:	b2 fc       	sbrc	r11, 2
    171c:	08 c0       	rjmp	.+16     	; 0x172e <vfprintf+0x2b4>
    171e:	2b 2d       	mov	r18, r11
    1720:	2e 7e       	andi	r18, 0xEE	; 238
    1722:	05 c0       	rjmp	.+10     	; 0x172e <vfprintf+0x2b4>
    1724:	7a 2c       	mov	r7, r10
    1726:	2b 2d       	mov	r18, r11
    1728:	03 c0       	rjmp	.+6      	; 0x1730 <vfprintf+0x2b6>
    172a:	7a 2c       	mov	r7, r10
    172c:	01 c0       	rjmp	.+2      	; 0x1730 <vfprintf+0x2b6>
    172e:	75 2c       	mov	r7, r5
    1730:	24 ff       	sbrs	r18, 4
    1732:	0d c0       	rjmp	.+26     	; 0x174e <vfprintf+0x2d4>
    1734:	fe 01       	movw	r30, r28
    1736:	ea 0d       	add	r30, r10
    1738:	f1 1d       	adc	r31, r1
    173a:	80 81       	ld	r24, Z
    173c:	80 33       	cpi	r24, 0x30	; 48
    173e:	11 f4       	brne	.+4      	; 0x1744 <vfprintf+0x2ca>
    1740:	29 7e       	andi	r18, 0xE9	; 233
    1742:	09 c0       	rjmp	.+18     	; 0x1756 <vfprintf+0x2dc>
    1744:	22 ff       	sbrs	r18, 2
    1746:	06 c0       	rjmp	.+12     	; 0x1754 <vfprintf+0x2da>
    1748:	73 94       	inc	r7
    174a:	73 94       	inc	r7
    174c:	04 c0       	rjmp	.+8      	; 0x1756 <vfprintf+0x2dc>
    174e:	82 2f       	mov	r24, r18
    1750:	86 78       	andi	r24, 0x86	; 134
    1752:	09 f0       	breq	.+2      	; 0x1756 <vfprintf+0x2dc>
    1754:	73 94       	inc	r7
    1756:	23 fd       	sbrc	r18, 3
    1758:	13 c0       	rjmp	.+38     	; 0x1780 <vfprintf+0x306>
    175a:	20 ff       	sbrs	r18, 0
    175c:	06 c0       	rjmp	.+12     	; 0x176a <vfprintf+0x2f0>
    175e:	5a 2c       	mov	r5, r10
    1760:	73 14       	cp	r7, r3
    1762:	18 f4       	brcc	.+6      	; 0x176a <vfprintf+0x2f0>
    1764:	53 0c       	add	r5, r3
    1766:	57 18       	sub	r5, r7
    1768:	73 2c       	mov	r7, r3
    176a:	73 14       	cp	r7, r3
    176c:	68 f4       	brcc	.+26     	; 0x1788 <vfprintf+0x30e>
    176e:	b7 01       	movw	r22, r14
    1770:	80 e2       	ldi	r24, 0x20	; 32
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	2c 87       	std	Y+12, r18	; 0x0c
    1776:	0e 94 48 0c 	call	0x1890	; 0x1890 <fputc>
    177a:	73 94       	inc	r7
    177c:	2c 85       	ldd	r18, Y+12	; 0x0c
    177e:	f5 cf       	rjmp	.-22     	; 0x176a <vfprintf+0x2f0>
    1780:	73 14       	cp	r7, r3
    1782:	10 f4       	brcc	.+4      	; 0x1788 <vfprintf+0x30e>
    1784:	37 18       	sub	r3, r7
    1786:	01 c0       	rjmp	.+2      	; 0x178a <vfprintf+0x310>
    1788:	31 2c       	mov	r3, r1
    178a:	24 ff       	sbrs	r18, 4
    178c:	12 c0       	rjmp	.+36     	; 0x17b2 <vfprintf+0x338>
    178e:	b7 01       	movw	r22, r14
    1790:	80 e3       	ldi	r24, 0x30	; 48
    1792:	90 e0       	ldi	r25, 0x00	; 0
    1794:	2c 87       	std	Y+12, r18	; 0x0c
    1796:	0e 94 48 0c 	call	0x1890	; 0x1890 <fputc>
    179a:	2c 85       	ldd	r18, Y+12	; 0x0c
    179c:	22 ff       	sbrs	r18, 2
    179e:	17 c0       	rjmp	.+46     	; 0x17ce <vfprintf+0x354>
    17a0:	21 ff       	sbrs	r18, 1
    17a2:	03 c0       	rjmp	.+6      	; 0x17aa <vfprintf+0x330>
    17a4:	88 e5       	ldi	r24, 0x58	; 88
    17a6:	90 e0       	ldi	r25, 0x00	; 0
    17a8:	02 c0       	rjmp	.+4      	; 0x17ae <vfprintf+0x334>
    17aa:	88 e7       	ldi	r24, 0x78	; 120
    17ac:	90 e0       	ldi	r25, 0x00	; 0
    17ae:	b7 01       	movw	r22, r14
    17b0:	0c c0       	rjmp	.+24     	; 0x17ca <vfprintf+0x350>
    17b2:	82 2f       	mov	r24, r18
    17b4:	86 78       	andi	r24, 0x86	; 134
    17b6:	59 f0       	breq	.+22     	; 0x17ce <vfprintf+0x354>
    17b8:	21 fd       	sbrc	r18, 1
    17ba:	02 c0       	rjmp	.+4      	; 0x17c0 <vfprintf+0x346>
    17bc:	80 e2       	ldi	r24, 0x20	; 32
    17be:	01 c0       	rjmp	.+2      	; 0x17c2 <vfprintf+0x348>
    17c0:	8b e2       	ldi	r24, 0x2B	; 43
    17c2:	27 fd       	sbrc	r18, 7
    17c4:	8d e2       	ldi	r24, 0x2D	; 45
    17c6:	b7 01       	movw	r22, r14
    17c8:	90 e0       	ldi	r25, 0x00	; 0
    17ca:	0e 94 48 0c 	call	0x1890	; 0x1890 <fputc>
    17ce:	a5 14       	cp	r10, r5
    17d0:	38 f4       	brcc	.+14     	; 0x17e0 <vfprintf+0x366>
    17d2:	b7 01       	movw	r22, r14
    17d4:	80 e3       	ldi	r24, 0x30	; 48
    17d6:	90 e0       	ldi	r25, 0x00	; 0
    17d8:	0e 94 48 0c 	call	0x1890	; 0x1890 <fputc>
    17dc:	5a 94       	dec	r5
    17de:	f7 cf       	rjmp	.-18     	; 0x17ce <vfprintf+0x354>
    17e0:	aa 94       	dec	r10
    17e2:	f4 01       	movw	r30, r8
    17e4:	ea 0d       	add	r30, r10
    17e6:	f1 1d       	adc	r31, r1
    17e8:	80 81       	ld	r24, Z
    17ea:	b7 01       	movw	r22, r14
    17ec:	90 e0       	ldi	r25, 0x00	; 0
    17ee:	0e 94 48 0c 	call	0x1890	; 0x1890 <fputc>
    17f2:	a1 10       	cpse	r10, r1
    17f4:	f5 cf       	rjmp	.-22     	; 0x17e0 <vfprintf+0x366>
    17f6:	33 20       	and	r3, r3
    17f8:	09 f4       	brne	.+2      	; 0x17fc <vfprintf+0x382>
    17fa:	51 ce       	rjmp	.-862    	; 0x149e <vfprintf+0x24>
    17fc:	b7 01       	movw	r22, r14
    17fe:	80 e2       	ldi	r24, 0x20	; 32
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	0e 94 48 0c 	call	0x1890	; 0x1890 <fputc>
    1806:	3a 94       	dec	r3
    1808:	f6 cf       	rjmp	.-20     	; 0x17f6 <vfprintf+0x37c>
    180a:	f7 01       	movw	r30, r14
    180c:	86 81       	ldd	r24, Z+6	; 0x06
    180e:	97 81       	ldd	r25, Z+7	; 0x07
    1810:	02 c0       	rjmp	.+4      	; 0x1816 <vfprintf+0x39c>
    1812:	8f ef       	ldi	r24, 0xFF	; 255
    1814:	9f ef       	ldi	r25, 0xFF	; 255
    1816:	2c 96       	adiw	r28, 0x0c	; 12
    1818:	e2 e1       	ldi	r30, 0x12	; 18
    181a:	0c 94 f4 0c 	jmp	0x19e8	; 0x19e8 <__epilogue_restores__>

0000181e <calloc>:
    181e:	0f 93       	push	r16
    1820:	1f 93       	push	r17
    1822:	cf 93       	push	r28
    1824:	df 93       	push	r29
    1826:	86 9f       	mul	r24, r22
    1828:	80 01       	movw	r16, r0
    182a:	87 9f       	mul	r24, r23
    182c:	10 0d       	add	r17, r0
    182e:	96 9f       	mul	r25, r22
    1830:	10 0d       	add	r17, r0
    1832:	11 24       	eor	r1, r1
    1834:	c8 01       	movw	r24, r16
    1836:	0e 94 8a 08 	call	0x1114	; 0x1114 <malloc>
    183a:	ec 01       	movw	r28, r24
    183c:	00 97       	sbiw	r24, 0x00	; 0
    183e:	29 f0       	breq	.+10     	; 0x184a <calloc+0x2c>
    1840:	a8 01       	movw	r20, r16
    1842:	60 e0       	ldi	r22, 0x00	; 0
    1844:	70 e0       	ldi	r23, 0x00	; 0
    1846:	0e 94 36 0c 	call	0x186c	; 0x186c <memset>
    184a:	ce 01       	movw	r24, r28
    184c:	df 91       	pop	r29
    184e:	cf 91       	pop	r28
    1850:	1f 91       	pop	r17
    1852:	0f 91       	pop	r16
    1854:	08 95       	ret

00001856 <strnlen_P>:
    1856:	fc 01       	movw	r30, r24
    1858:	05 90       	lpm	r0, Z+
    185a:	61 50       	subi	r22, 0x01	; 1
    185c:	70 40       	sbci	r23, 0x00	; 0
    185e:	01 10       	cpse	r0, r1
    1860:	d8 f7       	brcc	.-10     	; 0x1858 <strnlen_P+0x2>
    1862:	80 95       	com	r24
    1864:	90 95       	com	r25
    1866:	8e 0f       	add	r24, r30
    1868:	9f 1f       	adc	r25, r31
    186a:	08 95       	ret

0000186c <memset>:
    186c:	dc 01       	movw	r26, r24
    186e:	01 c0       	rjmp	.+2      	; 0x1872 <memset+0x6>
    1870:	6d 93       	st	X+, r22
    1872:	41 50       	subi	r20, 0x01	; 1
    1874:	50 40       	sbci	r21, 0x00	; 0
    1876:	e0 f7       	brcc	.-8      	; 0x1870 <memset+0x4>
    1878:	08 95       	ret

0000187a <strnlen>:
    187a:	fc 01       	movw	r30, r24
    187c:	61 50       	subi	r22, 0x01	; 1
    187e:	70 40       	sbci	r23, 0x00	; 0
    1880:	01 90       	ld	r0, Z+
    1882:	01 10       	cpse	r0, r1
    1884:	d8 f7       	brcc	.-10     	; 0x187c <strnlen+0x2>
    1886:	80 95       	com	r24
    1888:	90 95       	com	r25
    188a:	8e 0f       	add	r24, r30
    188c:	9f 1f       	adc	r25, r31
    188e:	08 95       	ret

00001890 <fputc>:
    1890:	0f 93       	push	r16
    1892:	1f 93       	push	r17
    1894:	cf 93       	push	r28
    1896:	df 93       	push	r29
    1898:	18 2f       	mov	r17, r24
    189a:	09 2f       	mov	r16, r25
    189c:	eb 01       	movw	r28, r22
    189e:	8b 81       	ldd	r24, Y+3	; 0x03
    18a0:	81 fd       	sbrc	r24, 1
    18a2:	03 c0       	rjmp	.+6      	; 0x18aa <fputc+0x1a>
    18a4:	8f ef       	ldi	r24, 0xFF	; 255
    18a6:	9f ef       	ldi	r25, 0xFF	; 255
    18a8:	20 c0       	rjmp	.+64     	; 0x18ea <fputc+0x5a>
    18aa:	82 ff       	sbrs	r24, 2
    18ac:	10 c0       	rjmp	.+32     	; 0x18ce <fputc+0x3e>
    18ae:	4e 81       	ldd	r20, Y+6	; 0x06
    18b0:	5f 81       	ldd	r21, Y+7	; 0x07
    18b2:	2c 81       	ldd	r18, Y+4	; 0x04
    18b4:	3d 81       	ldd	r19, Y+5	; 0x05
    18b6:	42 17       	cp	r20, r18
    18b8:	53 07       	cpc	r21, r19
    18ba:	7c f4       	brge	.+30     	; 0x18da <fputc+0x4a>
    18bc:	e8 81       	ld	r30, Y
    18be:	f9 81       	ldd	r31, Y+1	; 0x01
    18c0:	9f 01       	movw	r18, r30
    18c2:	2f 5f       	subi	r18, 0xFF	; 255
    18c4:	3f 4f       	sbci	r19, 0xFF	; 255
    18c6:	39 83       	std	Y+1, r19	; 0x01
    18c8:	28 83       	st	Y, r18
    18ca:	10 83       	st	Z, r17
    18cc:	06 c0       	rjmp	.+12     	; 0x18da <fputc+0x4a>
    18ce:	e8 85       	ldd	r30, Y+8	; 0x08
    18d0:	f9 85       	ldd	r31, Y+9	; 0x09
    18d2:	81 2f       	mov	r24, r17
    18d4:	09 95       	icall
    18d6:	89 2b       	or	r24, r25
    18d8:	29 f7       	brne	.-54     	; 0x18a4 <fputc+0x14>
    18da:	2e 81       	ldd	r18, Y+6	; 0x06
    18dc:	3f 81       	ldd	r19, Y+7	; 0x07
    18de:	2f 5f       	subi	r18, 0xFF	; 255
    18e0:	3f 4f       	sbci	r19, 0xFF	; 255
    18e2:	3f 83       	std	Y+7, r19	; 0x07
    18e4:	2e 83       	std	Y+6, r18	; 0x06
    18e6:	81 2f       	mov	r24, r17
    18e8:	90 2f       	mov	r25, r16
    18ea:	df 91       	pop	r29
    18ec:	cf 91       	pop	r28
    18ee:	1f 91       	pop	r17
    18f0:	0f 91       	pop	r16
    18f2:	08 95       	ret

000018f4 <__ultoa_invert>:
    18f4:	fa 01       	movw	r30, r20
    18f6:	aa 27       	eor	r26, r26
    18f8:	28 30       	cpi	r18, 0x08	; 8
    18fa:	51 f1       	breq	.+84     	; 0x1950 <__ultoa_invert+0x5c>
    18fc:	20 31       	cpi	r18, 0x10	; 16
    18fe:	81 f1       	breq	.+96     	; 0x1960 <__ultoa_invert+0x6c>
    1900:	e8 94       	clt
    1902:	6f 93       	push	r22
    1904:	6e 7f       	andi	r22, 0xFE	; 254
    1906:	6e 5f       	subi	r22, 0xFE	; 254
    1908:	7f 4f       	sbci	r23, 0xFF	; 255
    190a:	8f 4f       	sbci	r24, 0xFF	; 255
    190c:	9f 4f       	sbci	r25, 0xFF	; 255
    190e:	af 4f       	sbci	r26, 0xFF	; 255
    1910:	b1 e0       	ldi	r27, 0x01	; 1
    1912:	3e d0       	rcall	.+124    	; 0x1990 <__ultoa_invert+0x9c>
    1914:	b4 e0       	ldi	r27, 0x04	; 4
    1916:	3c d0       	rcall	.+120    	; 0x1990 <__ultoa_invert+0x9c>
    1918:	67 0f       	add	r22, r23
    191a:	78 1f       	adc	r23, r24
    191c:	89 1f       	adc	r24, r25
    191e:	9a 1f       	adc	r25, r26
    1920:	a1 1d       	adc	r26, r1
    1922:	68 0f       	add	r22, r24
    1924:	79 1f       	adc	r23, r25
    1926:	8a 1f       	adc	r24, r26
    1928:	91 1d       	adc	r25, r1
    192a:	a1 1d       	adc	r26, r1
    192c:	6a 0f       	add	r22, r26
    192e:	71 1d       	adc	r23, r1
    1930:	81 1d       	adc	r24, r1
    1932:	91 1d       	adc	r25, r1
    1934:	a1 1d       	adc	r26, r1
    1936:	20 d0       	rcall	.+64     	; 0x1978 <__ultoa_invert+0x84>
    1938:	09 f4       	brne	.+2      	; 0x193c <__ultoa_invert+0x48>
    193a:	68 94       	set
    193c:	3f 91       	pop	r19
    193e:	2a e0       	ldi	r18, 0x0A	; 10
    1940:	26 9f       	mul	r18, r22
    1942:	11 24       	eor	r1, r1
    1944:	30 19       	sub	r19, r0
    1946:	30 5d       	subi	r19, 0xD0	; 208
    1948:	31 93       	st	Z+, r19
    194a:	de f6       	brtc	.-74     	; 0x1902 <__ultoa_invert+0xe>
    194c:	cf 01       	movw	r24, r30
    194e:	08 95       	ret
    1950:	46 2f       	mov	r20, r22
    1952:	47 70       	andi	r20, 0x07	; 7
    1954:	40 5d       	subi	r20, 0xD0	; 208
    1956:	41 93       	st	Z+, r20
    1958:	b3 e0       	ldi	r27, 0x03	; 3
    195a:	0f d0       	rcall	.+30     	; 0x197a <__ultoa_invert+0x86>
    195c:	c9 f7       	brne	.-14     	; 0x1950 <__ultoa_invert+0x5c>
    195e:	f6 cf       	rjmp	.-20     	; 0x194c <__ultoa_invert+0x58>
    1960:	46 2f       	mov	r20, r22
    1962:	4f 70       	andi	r20, 0x0F	; 15
    1964:	40 5d       	subi	r20, 0xD0	; 208
    1966:	4a 33       	cpi	r20, 0x3A	; 58
    1968:	18 f0       	brcs	.+6      	; 0x1970 <__ultoa_invert+0x7c>
    196a:	49 5d       	subi	r20, 0xD9	; 217
    196c:	31 fd       	sbrc	r19, 1
    196e:	40 52       	subi	r20, 0x20	; 32
    1970:	41 93       	st	Z+, r20
    1972:	02 d0       	rcall	.+4      	; 0x1978 <__ultoa_invert+0x84>
    1974:	a9 f7       	brne	.-22     	; 0x1960 <__ultoa_invert+0x6c>
    1976:	ea cf       	rjmp	.-44     	; 0x194c <__ultoa_invert+0x58>
    1978:	b4 e0       	ldi	r27, 0x04	; 4
    197a:	a6 95       	lsr	r26
    197c:	97 95       	ror	r25
    197e:	87 95       	ror	r24
    1980:	77 95       	ror	r23
    1982:	67 95       	ror	r22
    1984:	ba 95       	dec	r27
    1986:	c9 f7       	brne	.-14     	; 0x197a <__ultoa_invert+0x86>
    1988:	00 97       	sbiw	r24, 0x00	; 0
    198a:	61 05       	cpc	r22, r1
    198c:	71 05       	cpc	r23, r1
    198e:	08 95       	ret
    1990:	9b 01       	movw	r18, r22
    1992:	ac 01       	movw	r20, r24
    1994:	0a 2e       	mov	r0, r26
    1996:	06 94       	lsr	r0
    1998:	57 95       	ror	r21
    199a:	47 95       	ror	r20
    199c:	37 95       	ror	r19
    199e:	27 95       	ror	r18
    19a0:	ba 95       	dec	r27
    19a2:	c9 f7       	brne	.-14     	; 0x1996 <__ultoa_invert+0xa2>
    19a4:	62 0f       	add	r22, r18
    19a6:	73 1f       	adc	r23, r19
    19a8:	84 1f       	adc	r24, r20
    19aa:	95 1f       	adc	r25, r21
    19ac:	a0 1d       	adc	r26, r0
    19ae:	08 95       	ret

000019b0 <__prologue_saves__>:
    19b0:	2f 92       	push	r2
    19b2:	3f 92       	push	r3
    19b4:	4f 92       	push	r4
    19b6:	5f 92       	push	r5
    19b8:	6f 92       	push	r6
    19ba:	7f 92       	push	r7
    19bc:	8f 92       	push	r8
    19be:	9f 92       	push	r9
    19c0:	af 92       	push	r10
    19c2:	bf 92       	push	r11
    19c4:	cf 92       	push	r12
    19c6:	df 92       	push	r13
    19c8:	ef 92       	push	r14
    19ca:	ff 92       	push	r15
    19cc:	0f 93       	push	r16
    19ce:	1f 93       	push	r17
    19d0:	cf 93       	push	r28
    19d2:	df 93       	push	r29
    19d4:	cd b7       	in	r28, 0x3d	; 61
    19d6:	de b7       	in	r29, 0x3e	; 62
    19d8:	ca 1b       	sub	r28, r26
    19da:	db 0b       	sbc	r29, r27
    19dc:	0f b6       	in	r0, 0x3f	; 63
    19de:	f8 94       	cli
    19e0:	de bf       	out	0x3e, r29	; 62
    19e2:	0f be       	out	0x3f, r0	; 63
    19e4:	cd bf       	out	0x3d, r28	; 61
    19e6:	09 94       	ijmp

000019e8 <__epilogue_restores__>:
    19e8:	2a 88       	ldd	r2, Y+18	; 0x12
    19ea:	39 88       	ldd	r3, Y+17	; 0x11
    19ec:	48 88       	ldd	r4, Y+16	; 0x10
    19ee:	5f 84       	ldd	r5, Y+15	; 0x0f
    19f0:	6e 84       	ldd	r6, Y+14	; 0x0e
    19f2:	7d 84       	ldd	r7, Y+13	; 0x0d
    19f4:	8c 84       	ldd	r8, Y+12	; 0x0c
    19f6:	9b 84       	ldd	r9, Y+11	; 0x0b
    19f8:	aa 84       	ldd	r10, Y+10	; 0x0a
    19fa:	b9 84       	ldd	r11, Y+9	; 0x09
    19fc:	c8 84       	ldd	r12, Y+8	; 0x08
    19fe:	df 80       	ldd	r13, Y+7	; 0x07
    1a00:	ee 80       	ldd	r14, Y+6	; 0x06
    1a02:	fd 80       	ldd	r15, Y+5	; 0x05
    1a04:	0c 81       	ldd	r16, Y+4	; 0x04
    1a06:	1b 81       	ldd	r17, Y+3	; 0x03
    1a08:	aa 81       	ldd	r26, Y+2	; 0x02
    1a0a:	b9 81       	ldd	r27, Y+1	; 0x01
    1a0c:	ce 0f       	add	r28, r30
    1a0e:	d1 1d       	adc	r29, r1
    1a10:	0f b6       	in	r0, 0x3f	; 63
    1a12:	f8 94       	cli
    1a14:	de bf       	out	0x3e, r29	; 62
    1a16:	0f be       	out	0x3f, r0	; 63
    1a18:	cd bf       	out	0x3d, r28	; 61
    1a1a:	ed 01       	movw	r28, r26
    1a1c:	08 95       	ret

00001a1e <_exit>:
    1a1e:	f8 94       	cli

00001a20 <__stop_program>:
    1a20:	ff cf       	rjmp	.-2      	; 0x1a20 <__stop_program>
