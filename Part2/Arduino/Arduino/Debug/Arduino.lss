
Arduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000cc  00800200  00000e78  00000f0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e78  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  008002cc  008002cc  00000fd8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000fd8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000150  00000000  00000000  00001034  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000012fb  00000000  00000000  00001184  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008aa  00000000  00000000  0000247f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a83  00000000  00000000  00002d29  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000344  00000000  00000000  000037ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004ec  00000000  00000000  00003af0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b5f  00000000  00000000  00003fdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000130  00000000  00000000  00004b3b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	ea c0       	rjmp	.+468    	; 0x1e2 <__vector_3>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 e7       	ldi	r30, 0x78	; 120
  fc:	fe e0       	ldi	r31, 0x0E	; 14
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ac 3c       	cpi	r26, 0xCC	; 204
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	ac ec       	ldi	r26, 0xCC	; 204
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a8 3d       	cpi	r26, 0xD8	; 216
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	a9 c6       	rjmp	.+3410   	; 0xe74 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
#include "CAN.h"
#include "MCP2515.h"
#define F_CPU 16000000UL
long map(long x, long in_min, long in_max, long out_min, long out_max);
int main(void)
{
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62
 12c:	2b 97       	sbiw	r28, 0x0b	; 11
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	f8 94       	cli
 132:	de bf       	out	0x3e, r29	; 62
 134:	0f be       	out	0x3f, r0	; 63
 136:	cd bf       	out	0x3d, r28	; 61
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 138:	87 e8       	ldi	r24, 0x87	; 135
 13a:	93 e1       	ldi	r25, 0x13	; 19
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <main+0x18>
 140:	00 c0       	rjmp	.+0      	; 0x142 <main+0x1e>
 142:	00 00       	nop
	unsigned long clockspeed = F_CPU;
	_delay_ms(20);
	UART_init(clockspeed);
 144:	60 e0       	ldi	r22, 0x00	; 0
 146:	74 e2       	ldi	r23, 0x24	; 36
 148:	84 ef       	ldi	r24, 0xF4	; 244
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	b3 d1       	rcall	.+870    	; 0x4b4 <UART_init>
	
	can_init(MODE_NORMAL);
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	5c d0       	rcall	.+184    	; 0x20a <can_init>

	printf("NY START!!!!!\r\n");
 152:	86 e0       	ldi	r24, 0x06	; 6
 154:	92 e0       	ldi	r25, 0x02	; 2
 156:	85 d2       	rcall	.+1290   	; 0x662 <puts>
	   _delay_ms(5000);
    }
}
long map(long x, long in_min, long in_max, long out_min, long out_max)
{
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 158:	0f 2e       	mov	r0, r31
 15a:	f8 ec       	ldi	r31, 0xC8	; 200
 15c:	cf 2e       	mov	r12, r31
 15e:	d1 2c       	mov	r13, r1
 160:	e1 2c       	mov	r14, r1
 162:	f1 2c       	mov	r15, r1
 164:	f0 2d       	mov	r31, r0
		if ( can_interrupt()){
			hei = can_handle_messages();
			int xout = map(hei.data[0],0,200,-100,100);
			int yout = map(hei.data[1],0,200,-100,100);
			//for(int i = 0; i < hei.length ; i++){
				printf(" Joystick x = %d, Joystick y = %d ",xout,yout);
 166:	05 e1       	ldi	r16, 0x15	; 21
 168:	12 e0       	ldi	r17, 0x02	; 2
		//test2.data[4]	= 'd';
		//test2.length	= 5;

		//can_message_send(&test);		
		//can_message_send(&test2);
		if ( can_interrupt()){
 16a:	5f d0       	rcall	.+190    	; 0x22a <can_interrupt>
 16c:	88 23       	and	r24, r24
 16e:	79 f1       	breq	.+94     	; 0x1ce <main+0xaa>
			hei = can_handle_messages();
 170:	ce 01       	movw	r24, r28
 172:	01 96       	adiw	r24, 0x01	; 1
 174:	ad d0       	rcall	.+346    	; 0x2d0 <can_handle_messages>
			int xout = map(hei.data[0],0,200,-100,100);
			int yout = map(hei.data[1],0,200,-100,100);
 176:	2d 81       	ldd	r18, Y+5	; 0x05
	   _delay_ms(5000);
    }
}
long map(long x, long in_min, long in_max, long out_min, long out_max)
{
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	a8 ec       	ldi	r26, 0xC8	; 200
 17c:	b0 e0       	ldi	r27, 0x00	; 0
 17e:	07 d2       	rcall	.+1038   	; 0x58e <__umulhisi3>
 180:	a7 01       	movw	r20, r14
 182:	96 01       	movw	r18, r12
 184:	e8 d1       	rcall	.+976    	; 0x556 <__divmodsi4>
 186:	da 01       	movw	r26, r20
 188:	c9 01       	movw	r24, r18
 18a:	84 56       	subi	r24, 0x64	; 100
 18c:	91 09       	sbc	r25, r1
 18e:	a1 09       	sbc	r26, r1
 190:	b1 09       	sbc	r27, r1
		if ( can_interrupt()){
			hei = can_handle_messages();
			int xout = map(hei.data[0],0,200,-100,100);
			int yout = map(hei.data[1],0,200,-100,100);
			//for(int i = 0; i < hei.length ; i++){
				printf(" Joystick x = %d, Joystick y = %d ",xout,yout);
 192:	9f 93       	push	r25
 194:	8f 93       	push	r24

		//can_message_send(&test);		
		//can_message_send(&test2);
		if ( can_interrupt()){
			hei = can_handle_messages();
			int xout = map(hei.data[0],0,200,-100,100);
 196:	2c 81       	ldd	r18, Y+4	; 0x04
	   _delay_ms(5000);
    }
}
long map(long x, long in_min, long in_max, long out_min, long out_max)
{
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	a8 ec       	ldi	r26, 0xC8	; 200
 19c:	b0 e0       	ldi	r27, 0x00	; 0
 19e:	f7 d1       	rcall	.+1006   	; 0x58e <__umulhisi3>
 1a0:	a7 01       	movw	r20, r14
 1a2:	96 01       	movw	r18, r12
 1a4:	d8 d1       	rcall	.+944    	; 0x556 <__divmodsi4>
 1a6:	da 01       	movw	r26, r20
 1a8:	c9 01       	movw	r24, r18
 1aa:	84 56       	subi	r24, 0x64	; 100
 1ac:	91 09       	sbc	r25, r1
 1ae:	a1 09       	sbc	r26, r1
 1b0:	b1 09       	sbc	r27, r1
		if ( can_interrupt()){
			hei = can_handle_messages();
			int xout = map(hei.data[0],0,200,-100,100);
			int yout = map(hei.data[1],0,200,-100,100);
			//for(int i = 0; i < hei.length ; i++){
				printf(" Joystick x = %d, Joystick y = %d ",xout,yout);
 1b2:	9f 93       	push	r25
 1b4:	8f 93       	push	r24
 1b6:	1f 93       	push	r17
 1b8:	0f 93       	push	r16
 1ba:	42 d2       	rcall	.+1156   	; 0x640 <printf>
			//}												
			printf("\r \n");
 1bc:	88 e3       	ldi	r24, 0x38	; 56
 1be:	92 e0       	ldi	r25, 0x02	; 2
 1c0:	50 d2       	rcall	.+1184   	; 0x662 <puts>
 1c2:	0f 90       	pop	r0
 1c4:	0f 90       	pop	r0
 1c6:	0f 90       	pop	r0
 1c8:	0f 90       	pop	r0
 1ca:	0f 90       	pop	r0
 1cc:	0f 90       	pop	r0
 1ce:	9f e3       	ldi	r25, 0x3F	; 63
 1d0:	22 e4       	ldi	r18, 0x42	; 66
 1d2:	8f e0       	ldi	r24, 0x0F	; 15
 1d4:	91 50       	subi	r25, 0x01	; 1
 1d6:	20 40       	sbci	r18, 0x00	; 0
 1d8:	80 40       	sbci	r24, 0x00	; 0
 1da:	e1 f7       	brne	.-8      	; 0x1d4 <main+0xb0>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <main+0xba>
 1de:	00 00       	nop
			//}
			//printf("\r \n");
		//}
	   //printf("test");
	   _delay_ms(5000);
    }
 1e0:	c4 cf       	rjmp	.-120    	; 0x16a <main+0x46>

000001e2 <__vector_3>:
	
	// Request to send message, send if successful
	mcp_2515_request_to_send(MCP_RTS_TX0 + buffer_number);
	//printf("buffer nr. %d\n\r",buffer_number);
	
}
 1e2:	1f 92       	push	r1
 1e4:	0f 92       	push	r0
 1e6:	0f b6       	in	r0, 0x3f	; 63
 1e8:	0f 92       	push	r0
 1ea:	11 24       	eor	r1, r1
 1ec:	8f 93       	push	r24
 1ee:	9f 93       	push	r25
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	90 93 cd 02 	sts	0x02CD, r25
 1f8:	80 93 cc 02 	sts	0x02CC, r24
 1fc:	9f 91       	pop	r25
 1fe:	8f 91       	pop	r24
 200:	0f 90       	pop	r0
 202:	0f be       	out	0x3f, r0	; 63
 204:	0f 90       	pop	r0
 206:	1f 90       	pop	r1
 208:	18 95       	reti

0000020a <can_init>:
 20a:	fd d0       	rcall	.+506    	; 0x406 <mcp_2515_init>
 20c:	63 e0       	ldi	r22, 0x03	; 3
 20e:	8b e2       	ldi	r24, 0x2B	; 43
 210:	e7 d0       	rcall	.+462    	; 0x3e0 <mcp_2515_write>
 212:	f8 94       	cli
 214:	e9 e6       	ldi	r30, 0x69	; 105
 216:	f0 e0       	ldi	r31, 0x00	; 0
 218:	80 81       	ld	r24, Z
 21a:	80 62       	ori	r24, 0x20	; 32
 21c:	80 83       	st	Z, r24
 21e:	80 81       	ld	r24, Z
 220:	8f 7e       	andi	r24, 0xEF	; 239
 222:	80 83       	st	Z, r24
 224:	ea 9a       	sbi	0x1d, 2	; 29
 226:	78 94       	sei
 228:	08 95       	ret

0000022a <can_interrupt>:
 22a:	80 91 cc 02 	lds	r24, 0x02CC
 22e:	90 91 cd 02 	lds	r25, 0x02CD
 232:	89 2b       	or	r24, r25
 234:	31 f0       	breq	.+12     	; 0x242 <can_interrupt+0x18>
 236:	10 92 cd 02 	sts	0x02CD, r1
 23a:	10 92 cc 02 	sts	0x02CC, r1
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	08 95       	ret
 242:	80 e0       	ldi	r24, 0x00	; 0
 244:	08 95       	ret

00000246 <can_message_receive>:
	}
	printf("\r\nMELDING SENDT\r\n");
	return 1;
}

void can_message_receive(int rec_buff_num, can_message* received_message){
 246:	0f 93       	push	r16
 248:	1f 93       	push	r17
 24a:	cf 93       	push	r28
 24c:	df 93       	push	r29
 24e:	eb 01       	movw	r28, r22
	uint8_t id_high = mcp_2515_read(MCP_RXB0SIDH + 16 * rec_buff_num);
 250:	18 2f       	mov	r17, r24
 252:	12 95       	swap	r17
 254:	10 7f       	andi	r17, 0xF0	; 240
 256:	81 e6       	ldi	r24, 0x61	; 97
 258:	81 0f       	add	r24, r17
 25a:	b5 d0       	rcall	.+362    	; 0x3c6 <mcp_2515_read>
 25c:	08 2f       	mov	r16, r24
	uint8_t id_low = mcp_2515_read(MCP_RXB0SIDL + 16 * rec_buff_num);
 25e:	82 e6       	ldi	r24, 0x62	; 98
 260:	81 0f       	add	r24, r17
 262:	b1 d0       	rcall	.+354    	; 0x3c6 <mcp_2515_read>
	uint8_t mask = 0b11100000;
	id_low = (id_low & mask);
	received_message->id = 0b1000*id_high + id_low/0b100000;
 264:	20 2f       	mov	r18, r16
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	22 0f       	add	r18, r18
 26a:	33 1f       	adc	r19, r19
 26c:	22 0f       	add	r18, r18
 26e:	33 1f       	adc	r19, r19
 270:	22 0f       	add	r18, r18
 272:	33 1f       	adc	r19, r19
 274:	82 95       	swap	r24
 276:	86 95       	lsr	r24
 278:	87 70       	andi	r24, 0x07	; 7
 27a:	28 0f       	add	r18, r24
 27c:	31 1d       	adc	r19, r1
 27e:	39 83       	std	Y+1, r19	; 0x01
 280:	28 83       	st	Y, r18
	
	uint8_t data_length = mcp_2515_read(MCP_RXB0DLC + 16 * rec_buff_num);
 282:	85 e6       	ldi	r24, 0x65	; 101
 284:	81 0f       	add	r24, r17
 286:	9f d0       	rcall	.+318    	; 0x3c6 <mcp_2515_read>
	mask = 0b1111;
	received_message->length = (data_length & mask);
 288:	98 2f       	mov	r25, r24
 28a:	9f 70       	andi	r25, 0x0F	; 15
 28c:	9a 83       	std	Y+2, r25	; 0x02
	
	for (uint8_t byte = 0; byte < data_length; byte++) {
 28e:	88 23       	and	r24, r24
 290:	51 f0       	breq	.+20     	; 0x2a6 <can_message_receive+0x60>
 292:	1a 59       	subi	r17, 0x9A	; 154
 294:	23 96       	adiw	r28, 0x03	; 3
 296:	08 2f       	mov	r16, r24
 298:	01 0f       	add	r16, r17
		received_message->data[byte] = mcp_2515_read(MCP_RXB0DM + byte + 16 * rec_buff_num);
 29a:	81 2f       	mov	r24, r17
 29c:	94 d0       	rcall	.+296    	; 0x3c6 <mcp_2515_read>
 29e:	89 93       	st	Y+, r24
 2a0:	1f 5f       	subi	r17, 0xFF	; 255
	
	uint8_t data_length = mcp_2515_read(MCP_RXB0DLC + 16 * rec_buff_num);
	mask = 0b1111;
	received_message->length = (data_length & mask);
	
	for (uint8_t byte = 0; byte < data_length; byte++) {
 2a2:	10 13       	cpse	r17, r16
 2a4:	fa cf       	rjmp	.-12     	; 0x29a <can_message_receive+0x54>
		received_message->data[byte] = mcp_2515_read(MCP_RXB0DM + byte + 16 * rec_buff_num);
	}
	
}
 2a6:	df 91       	pop	r29
 2a8:	cf 91       	pop	r28
 2aa:	1f 91       	pop	r17
 2ac:	0f 91       	pop	r16
 2ae:	08 95       	ret

000002b0 <can_int_vect>:

void can_int_vect(int* v) { 
 2b0:	cf 93       	push	r28
 2b2:	df 93       	push	r29
 2b4:	ec 01       	movw	r28, r24
	uint8_t int_flag = mcp_2515_read(MCP_CANINTF);
 2b6:	8c e2       	ldi	r24, 0x2C	; 44
 2b8:	86 d0       	rcall	.+268    	; 0x3c6 <mcp_2515_read>
	v[0] = (int_flag & MCP_RX0IF);
 2ba:	98 2f       	mov	r25, r24
 2bc:	91 70       	andi	r25, 0x01	; 1
 2be:	98 83       	st	Y, r25
 2c0:	19 82       	std	Y+1, r1	; 0x01
	v[1] = (int_flag & MCP_RX1IF);
 2c2:	82 70       	andi	r24, 0x02	; 2
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	9b 83       	std	Y+3, r25	; 0x03
 2c8:	8a 83       	std	Y+2, r24	; 0x02
}
 2ca:	df 91       	pop	r29
 2cc:	cf 91       	pop	r28
 2ce:	08 95       	ret

000002d0 <can_handle_messages>:
		return 1;
	}
	return 0;
}

can_message can_handle_messages(){
 2d0:	0f 93       	push	r16
 2d2:	1f 93       	push	r17
 2d4:	cf 93       	push	r28
 2d6:	df 93       	push	r29
 2d8:	cd b7       	in	r28, 0x3d	; 61
 2da:	de b7       	in	r29, 0x3e	; 62
 2dc:	68 97       	sbiw	r28, 0x18	; 24
 2de:	0f b6       	in	r0, 0x3f	; 63
 2e0:	f8 94       	cli
 2e2:	de bf       	out	0x3e, r29	; 62
 2e4:	0f be       	out	0x3f, r0	; 63
 2e6:	cd bf       	out	0x3d, r28	; 61
 2e8:	8c 01       	movw	r16, r24
	uint8_t v[2] = {0};
 2ea:	1a 82       	std	Y+2, r1	; 0x02
 2ec:	19 82       	std	Y+1, r1	; 0x01

	can_int_vect(v);
 2ee:	ce 01       	movw	r24, r28
 2f0:	01 96       	adiw	r24, 0x01	; 1
 2f2:	de df       	rcall	.-68     	; 0x2b0 <can_int_vect>

	can_message message1;
	if (v[0]){
 2f4:	89 81       	ldd	r24, Y+1	; 0x01
 2f6:	88 23       	and	r24, r24
 2f8:	01 f1       	breq	.+64     	; 0x33a <can_handle_messages+0x6a>
		can_message_receive(0, &message1);
 2fa:	be 01       	movw	r22, r28
 2fc:	6d 5f       	subi	r22, 0xFD	; 253
 2fe:	7f 4f       	sbci	r23, 0xFF	; 255
 300:	80 e0       	ldi	r24, 0x00	; 0
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	a0 df       	rcall	.-192    	; 0x246 <can_message_receive>
		mcp_2515_write(MCP_CANINTF,0);
 306:	60 e0       	ldi	r22, 0x00	; 0
 308:	8c e2       	ldi	r24, 0x2C	; 44
 30a:	6a d0       	rcall	.+212    	; 0x3e0 <mcp_2515_write>
		mcp_2515_bit_modify(MCP_CANINTF, 1, 0);
 30c:	40 e0       	ldi	r20, 0x00	; 0
 30e:	61 e0       	ldi	r22, 0x01	; 1
 310:	8c e2       	ldi	r24, 0x2C	; 44
 312:	a9 d0       	rcall	.+338    	; 0x466 <mcp_2515_bit_modify>
		//mcp_2515_bit_modify(MCP_CANINTF, 1, 0);
		can_int_vect(v);
 314:	ce 01       	movw	r24, r28
 316:	01 96       	adiw	r24, 0x01	; 1
 318:	cb df       	rcall	.-106    	; 0x2b0 <can_int_vect>
		if (!v[1]){
 31a:	8a 81       	ldd	r24, Y+2	; 0x02
 31c:	81 11       	cpse	r24, r1
 31e:	04 c0       	rjmp	.+8      	; 0x328 <can_handle_messages+0x58>
			flag = 0;
 320:	10 92 cd 02 	sts	0x02CD, r1
 324:	10 92 cc 02 	sts	0x02CC, r1
		}
		return message1;
 328:	8b e0       	ldi	r24, 0x0B	; 11
 32a:	fe 01       	movw	r30, r28
 32c:	33 96       	adiw	r30, 0x03	; 3
 32e:	d8 01       	movw	r26, r16
 330:	01 90       	ld	r0, Z+
 332:	0d 92       	st	X+, r0
 334:	8a 95       	dec	r24
 336:	e1 f7       	brne	.-8      	; 0x330 <can_handle_messages+0x60>
 338:	2b c0       	rjmp	.+86     	; 0x390 <can_handle_messages+0xc0>
	}
	
	can_message message2;
	
	if (v[1]){
 33a:	8a 81       	ldd	r24, Y+2	; 0x02
 33c:	88 23       	and	r24, r24
 33e:	01 f1       	breq	.+64     	; 0x380 <can_handle_messages+0xb0>
		can_message_receive(1, &message2);
 340:	be 01       	movw	r22, r28
 342:	62 5f       	subi	r22, 0xF2	; 242
 344:	7f 4f       	sbci	r23, 0xFF	; 255
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	7d df       	rcall	.-262    	; 0x246 <can_message_receive>
		mcp_2515_write(MCP_CANINTF,0);
 34c:	60 e0       	ldi	r22, 0x00	; 0
 34e:	8c e2       	ldi	r24, 0x2C	; 44
 350:	47 d0       	rcall	.+142    	; 0x3e0 <mcp_2515_write>
		//mcp_2515_bit_modify(MCP_CANINTF, 2, 0);
		mcp_2515_bit_modify(MCP_CANINTF, 2, 0);
 352:	40 e0       	ldi	r20, 0x00	; 0
 354:	62 e0       	ldi	r22, 0x02	; 2
 356:	8c e2       	ldi	r24, 0x2C	; 44
 358:	86 d0       	rcall	.+268    	; 0x466 <mcp_2515_bit_modify>
		can_int_vect(v);
 35a:	ce 01       	movw	r24, r28
 35c:	01 96       	adiw	r24, 0x01	; 1
 35e:	a8 df       	rcall	.-176    	; 0x2b0 <can_int_vect>
		if (!v[0]){
 360:	89 81       	ldd	r24, Y+1	; 0x01
 362:	81 11       	cpse	r24, r1
 364:	04 c0       	rjmp	.+8      	; 0x36e <can_handle_messages+0x9e>
			flag = 0;
 366:	10 92 cd 02 	sts	0x02CD, r1
 36a:	10 92 cc 02 	sts	0x02CC, r1
		}
		return message2;
 36e:	8b e0       	ldi	r24, 0x0B	; 11
 370:	fe 01       	movw	r30, r28
 372:	3e 96       	adiw	r30, 0x0e	; 14
 374:	d8 01       	movw	r26, r16
 376:	01 90       	ld	r0, Z+
 378:	0d 92       	st	X+, r0
 37a:	8a 95       	dec	r24
 37c:	e1 f7       	brne	.-8      	; 0x376 <can_handle_messages+0xa6>
 37e:	08 c0       	rjmp	.+16     	; 0x390 <can_handle_messages+0xc0>
	}
	
	return message1;
 380:	8b e0       	ldi	r24, 0x0B	; 11
 382:	fe 01       	movw	r30, r28
 384:	33 96       	adiw	r30, 0x03	; 3
 386:	d8 01       	movw	r26, r16
 388:	01 90       	ld	r0, Z+
 38a:	0d 92       	st	X+, r0
 38c:	8a 95       	dec	r24
 38e:	e1 f7       	brne	.-8      	; 0x388 <can_handle_messages+0xb8>
}
 390:	c8 01       	movw	r24, r16
 392:	68 96       	adiw	r28, 0x18	; 24
 394:	0f b6       	in	r0, 0x3f	; 63
 396:	f8 94       	cli
 398:	de bf       	out	0x3e, r29	; 62
 39a:	0f be       	out	0x3f, r0	; 63
 39c:	cd bf       	out	0x3d, r28	; 61
 39e:	df 91       	pop	r29
 3a0:	cf 91       	pop	r28
 3a2:	1f 91       	pop	r17
 3a4:	0f 91       	pop	r16
 3a6:	08 95       	ret

000003a8 <mcp_activate_slave>:
 3a8:	2f 98       	cbi	0x05, 7	; 5
 3aa:	08 95       	ret

000003ac <mcp_deactivate_slave>:
 3ac:	2f 9a       	sbi	0x05, 7	; 5
 3ae:	08 95       	ret

000003b0 <mcp_2515_reset>:
 3b0:	fb df       	rcall	.-10     	; 0x3a8 <mcp_activate_slave>
 3b2:	80 ec       	ldi	r24, 0xC0	; 192
 3b4:	a3 d0       	rcall	.+326    	; 0x4fc <SPI_write>
 3b6:	fa df       	rcall	.-12     	; 0x3ac <mcp_deactivate_slave>
 3b8:	83 ec       	ldi	r24, 0xC3	; 195
 3ba:	99 e0       	ldi	r25, 0x09	; 9
 3bc:	01 97       	sbiw	r24, 0x01	; 1
 3be:	f1 f7       	brne	.-4      	; 0x3bc <mcp_2515_reset+0xc>
 3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <mcp_2515_reset+0x12>
 3c2:	00 00       	nop
 3c4:	08 95       	ret

000003c6 <mcp_2515_read>:
 3c6:	cf 93       	push	r28
 3c8:	c8 2f       	mov	r28, r24
 3ca:	ee df       	rcall	.-36     	; 0x3a8 <mcp_activate_slave>
 3cc:	83 e0       	ldi	r24, 0x03	; 3
 3ce:	96 d0       	rcall	.+300    	; 0x4fc <SPI_write>
 3d0:	8c 2f       	mov	r24, r28
 3d2:	94 d0       	rcall	.+296    	; 0x4fc <SPI_write>
 3d4:	98 d0       	rcall	.+304    	; 0x506 <SPI_read>
 3d6:	c8 2f       	mov	r28, r24
 3d8:	e9 df       	rcall	.-46     	; 0x3ac <mcp_deactivate_slave>
 3da:	8c 2f       	mov	r24, r28
 3dc:	cf 91       	pop	r28
 3de:	08 95       	ret

000003e0 <mcp_2515_write>:
 3e0:	cf 93       	push	r28
 3e2:	df 93       	push	r29
 3e4:	d8 2f       	mov	r29, r24
 3e6:	c6 2f       	mov	r28, r22
 3e8:	df df       	rcall	.-66     	; 0x3a8 <mcp_activate_slave>
 3ea:	82 e0       	ldi	r24, 0x02	; 2
 3ec:	87 d0       	rcall	.+270    	; 0x4fc <SPI_write>
 3ee:	8d 2f       	mov	r24, r29
 3f0:	85 d0       	rcall	.+266    	; 0x4fc <SPI_write>
 3f2:	8c 2f       	mov	r24, r28
 3f4:	83 d0       	rcall	.+262    	; 0x4fc <SPI_write>
 3f6:	da df       	rcall	.-76     	; 0x3ac <mcp_deactivate_slave>
 3f8:	df 91       	pop	r29
 3fa:	cf 91       	pop	r28
 3fc:	08 95       	ret

000003fe <mcp_2515_set_mode>:
 3fe:	68 2f       	mov	r22, r24
 400:	8f e0       	ldi	r24, 0x0F	; 15
 402:	ee cf       	rjmp	.-36     	; 0x3e0 <mcp_2515_write>
 404:	08 95       	ret

00000406 <mcp_2515_init>:
 406:	cf 93       	push	r28
 408:	c8 2f       	mov	r28, r24
 40a:	72 d0       	rcall	.+228    	; 0x4f0 <SPI_init>
 40c:	d1 df       	rcall	.-94     	; 0x3b0 <mcp_2515_reset>
 40e:	8e e0       	ldi	r24, 0x0E	; 14
 410:	da df       	rcall	.-76     	; 0x3c6 <mcp_2515_read>
 412:	80 7e       	andi	r24, 0xE0	; 224
 414:	80 38       	cpi	r24, 0x80	; 128
 416:	69 f0       	breq	.+26     	; 0x432 <mcp_2515_init+0x2c>
 418:	1f 92       	push	r1
 41a:	8f 93       	push	r24
 41c:	8b e3       	ldi	r24, 0x3B	; 59
 41e:	92 e0       	ldi	r25, 0x02	; 2
 420:	9f 93       	push	r25
 422:	8f 93       	push	r24
 424:	0d d1       	rcall	.+538    	; 0x640 <printf>
 426:	0f 90       	pop	r0
 428:	0f 90       	pop	r0
 42a:	0f 90       	pop	r0
 42c:	0f 90       	pop	r0
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	18 c0       	rjmp	.+48     	; 0x462 <mcp_2515_init+0x5c>
 432:	8c 2f       	mov	r24, r28
 434:	e4 df       	rcall	.-56     	; 0x3fe <mcp_2515_set_mode>
 436:	8e e0       	ldi	r24, 0x0E	; 14
 438:	c6 df       	rcall	.-116    	; 0x3c6 <mcp_2515_read>
 43a:	80 7e       	andi	r24, 0xE0	; 224
 43c:	8c 17       	cp	r24, r28
 43e:	81 f0       	breq	.+32     	; 0x460 <mcp_2515_init+0x5a>
 440:	1f 92       	push	r1
 442:	8f 93       	push	r24
 444:	85 e8       	ldi	r24, 0x85	; 133
 446:	92 e0       	ldi	r25, 0x02	; 2
 448:	9f 93       	push	r25
 44a:	8f 93       	push	r24
 44c:	f9 d0       	rcall	.+498    	; 0x640 <printf>
 44e:	89 ec       	ldi	r24, 0xC9	; 201
 450:	92 e0       	ldi	r25, 0x02	; 2
 452:	07 d1       	rcall	.+526    	; 0x662 <puts>
 454:	0f 90       	pop	r0
 456:	0f 90       	pop	r0
 458:	0f 90       	pop	r0
 45a:	0f 90       	pop	r0
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	01 c0       	rjmp	.+2      	; 0x462 <mcp_2515_init+0x5c>
 460:	80 e0       	ldi	r24, 0x00	; 0
 462:	cf 91       	pop	r28
 464:	08 95       	ret

00000466 <mcp_2515_bit_modify>:
 466:	1f 93       	push	r17
 468:	cf 93       	push	r28
 46a:	df 93       	push	r29
 46c:	18 2f       	mov	r17, r24
 46e:	d6 2f       	mov	r29, r22
 470:	c4 2f       	mov	r28, r20
 472:	9a df       	rcall	.-204    	; 0x3a8 <mcp_activate_slave>
 474:	85 e0       	ldi	r24, 0x05	; 5
 476:	42 d0       	rcall	.+132    	; 0x4fc <SPI_write>
 478:	81 2f       	mov	r24, r17
 47a:	40 d0       	rcall	.+128    	; 0x4fc <SPI_write>
 47c:	8d 2f       	mov	r24, r29
 47e:	3e d0       	rcall	.+124    	; 0x4fc <SPI_write>
 480:	8c 2f       	mov	r24, r28
 482:	3c d0       	rcall	.+120    	; 0x4fc <SPI_write>
 484:	93 df       	rcall	.-218    	; 0x3ac <mcp_deactivate_slave>
 486:	df 91       	pop	r29
 488:	cf 91       	pop	r28
 48a:	1f 91       	pop	r17
 48c:	08 95       	ret

0000048e <put_char>:
	fdevopen(put_char, get_char);
	
}

int put_char(unsigned char c){
	loop_until_bit_is_set(UCSR0A, UDRE0);
 48e:	e0 ec       	ldi	r30, 0xC0	; 192
 490:	f0 e0       	ldi	r31, 0x00	; 0
 492:	90 81       	ld	r25, Z
 494:	95 ff       	sbrs	r25, 5
 496:	fd cf       	rjmp	.-6      	; 0x492 <put_char+0x4>
	UDR0 = c;
 498:	80 93 c6 00 	sts	0x00C6, r24
	return 0;
}
 49c:	80 e0       	ldi	r24, 0x00	; 0
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	08 95       	ret

000004a2 <get_char>:

int get_char(void){
	loop_until_bit_is_set(UCSR0A, RXC0);
 4a2:	e0 ec       	ldi	r30, 0xC0	; 192
 4a4:	f0 e0       	ldi	r31, 0x00	; 0
 4a6:	80 81       	ld	r24, Z
 4a8:	88 23       	and	r24, r24
 4aa:	ec f7       	brge	.-6      	; 0x4a6 <get_char+0x4>

	return UDR0;
 4ac:	80 91 c6 00 	lds	r24, 0x00C6
}
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	08 95       	ret

000004b4 <UART_init>:
#define BAUD 9600 //Baud rate = symbols pr second.

void UART_init(unsigned long clock_speed){
	
	unsigned long baud = BAUD;
	unsigned char ubrr = (clock_speed / (baud * 16)) - 1;
 4b4:	20 e0       	ldi	r18, 0x00	; 0
 4b6:	38 e5       	ldi	r19, 0x58	; 88
 4b8:	42 e0       	ldi	r20, 0x02	; 2
 4ba:	50 e0       	ldi	r21, 0x00	; 0
 4bc:	2a d0       	rcall	.+84     	; 0x512 <__udivmodsi4>
 4be:	21 50       	subi	r18, 0x01	; 1
	
	/* Set baud rate */
	UBRR0H = ubrr >> 8;			// Save the most significant bits (4 most sign. bits out of 12 bits)
 4c0:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = ubrr;				// Save the least sign. bits (8 least sign. bits)
 4c4:	20 93 c4 00 	sts	0x00C4, r18
	
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<USBS0);		// USBS: 1 = Use 2 stop bits, not 1												
 4c8:	e2 ec       	ldi	r30, 0xC2	; 194
 4ca:	f0 e0       	ldi	r31, 0x00	; 0
 4cc:	88 e0       	ldi	r24, 0x08	; 8
 4ce:	80 83       	st	Z, r24
	UCSR0C = (3<<UCSZ00);		// UCSZ00: 3 - UCSZ0 and UCSZ1 defines 8 bits (11 binary) for each character	
 4d0:	86 e0       	ldi	r24, 0x06	; 6
 4d2:	80 83       	st	Z, r24
	
	/* Enable receiver and transmitter */
	set_bit(UCSR0B,RXEN0);		//RXEN enables the receiver.
 4d4:	e1 ec       	ldi	r30, 0xC1	; 193
 4d6:	f0 e0       	ldi	r31, 0x00	; 0
 4d8:	80 81       	ld	r24, Z
 4da:	80 61       	ori	r24, 0x10	; 16
 4dc:	80 83       	st	Z, r24
	set_bit(UCSR0B,TXEN0);		//TXEN enables the transmitter.
 4de:	80 81       	ld	r24, Z
 4e0:	88 60       	ori	r24, 0x08	; 8
 4e2:	80 83       	st	Z, r24
	
	fdevopen(put_char, get_char);
 4e4:	61 e5       	ldi	r22, 0x51	; 81
 4e6:	72 e0       	ldi	r23, 0x02	; 2
 4e8:	87 e4       	ldi	r24, 0x47	; 71
 4ea:	92 e0       	ldi	r25, 0x02	; 2
 4ec:	5f c0       	rjmp	.+190    	; 0x5ac <fdevopen>
 4ee:	08 95       	ret

000004f0 <SPI_init>:
 4f0:	87 e8       	ldi	r24, 0x87	; 135
 4f2:	84 b9       	out	0x04, r24	; 4
 4f4:	81 e5       	ldi	r24, 0x51	; 81
 4f6:	8c bd       	out	0x2c, r24	; 44
 4f8:	2f 9a       	sbi	0x05, 7	; 5
 4fa:	08 95       	ret

000004fc <SPI_write>:
 4fc:	8e bd       	out	0x2e, r24	; 46
 4fe:	0d b4       	in	r0, 0x2d	; 45
 500:	07 fe       	sbrs	r0, 7
 502:	fd cf       	rjmp	.-6      	; 0x4fe <SPI_write+0x2>
 504:	08 95       	ret

00000506 <SPI_read>:
 506:	1e bc       	out	0x2e, r1	; 46
 508:	0d b4       	in	r0, 0x2d	; 45
 50a:	07 fe       	sbrs	r0, 7
 50c:	fd cf       	rjmp	.-6      	; 0x508 <SPI_read+0x2>
 50e:	8e b5       	in	r24, 0x2e	; 46
 510:	08 95       	ret

00000512 <__udivmodsi4>:
 512:	a1 e2       	ldi	r26, 0x21	; 33
 514:	1a 2e       	mov	r1, r26
 516:	aa 1b       	sub	r26, r26
 518:	bb 1b       	sub	r27, r27
 51a:	fd 01       	movw	r30, r26
 51c:	0d c0       	rjmp	.+26     	; 0x538 <__udivmodsi4_ep>

0000051e <__udivmodsi4_loop>:
 51e:	aa 1f       	adc	r26, r26
 520:	bb 1f       	adc	r27, r27
 522:	ee 1f       	adc	r30, r30
 524:	ff 1f       	adc	r31, r31
 526:	a2 17       	cp	r26, r18
 528:	b3 07       	cpc	r27, r19
 52a:	e4 07       	cpc	r30, r20
 52c:	f5 07       	cpc	r31, r21
 52e:	20 f0       	brcs	.+8      	; 0x538 <__udivmodsi4_ep>
 530:	a2 1b       	sub	r26, r18
 532:	b3 0b       	sbc	r27, r19
 534:	e4 0b       	sbc	r30, r20
 536:	f5 0b       	sbc	r31, r21

00000538 <__udivmodsi4_ep>:
 538:	66 1f       	adc	r22, r22
 53a:	77 1f       	adc	r23, r23
 53c:	88 1f       	adc	r24, r24
 53e:	99 1f       	adc	r25, r25
 540:	1a 94       	dec	r1
 542:	69 f7       	brne	.-38     	; 0x51e <__udivmodsi4_loop>
 544:	60 95       	com	r22
 546:	70 95       	com	r23
 548:	80 95       	com	r24
 54a:	90 95       	com	r25
 54c:	9b 01       	movw	r18, r22
 54e:	ac 01       	movw	r20, r24
 550:	bd 01       	movw	r22, r26
 552:	cf 01       	movw	r24, r30
 554:	08 95       	ret

00000556 <__divmodsi4>:
 556:	05 2e       	mov	r0, r21
 558:	97 fb       	bst	r25, 7
 55a:	16 f4       	brtc	.+4      	; 0x560 <__divmodsi4+0xa>
 55c:	00 94       	com	r0
 55e:	0f d0       	rcall	.+30     	; 0x57e <__negsi2>
 560:	57 fd       	sbrc	r21, 7
 562:	05 d0       	rcall	.+10     	; 0x56e <__divmodsi4_neg2>
 564:	d6 df       	rcall	.-84     	; 0x512 <__udivmodsi4>
 566:	07 fc       	sbrc	r0, 7
 568:	02 d0       	rcall	.+4      	; 0x56e <__divmodsi4_neg2>
 56a:	46 f4       	brtc	.+16     	; 0x57c <__divmodsi4_exit>
 56c:	08 c0       	rjmp	.+16     	; 0x57e <__negsi2>

0000056e <__divmodsi4_neg2>:
 56e:	50 95       	com	r21
 570:	40 95       	com	r20
 572:	30 95       	com	r19
 574:	21 95       	neg	r18
 576:	3f 4f       	sbci	r19, 0xFF	; 255
 578:	4f 4f       	sbci	r20, 0xFF	; 255
 57a:	5f 4f       	sbci	r21, 0xFF	; 255

0000057c <__divmodsi4_exit>:
 57c:	08 95       	ret

0000057e <__negsi2>:
 57e:	90 95       	com	r25
 580:	80 95       	com	r24
 582:	70 95       	com	r23
 584:	61 95       	neg	r22
 586:	7f 4f       	sbci	r23, 0xFF	; 255
 588:	8f 4f       	sbci	r24, 0xFF	; 255
 58a:	9f 4f       	sbci	r25, 0xFF	; 255
 58c:	08 95       	ret

0000058e <__umulhisi3>:
 58e:	a2 9f       	mul	r26, r18
 590:	b0 01       	movw	r22, r0
 592:	b3 9f       	mul	r27, r19
 594:	c0 01       	movw	r24, r0
 596:	a3 9f       	mul	r26, r19
 598:	70 0d       	add	r23, r0
 59a:	81 1d       	adc	r24, r1
 59c:	11 24       	eor	r1, r1
 59e:	91 1d       	adc	r25, r1
 5a0:	b2 9f       	mul	r27, r18
 5a2:	70 0d       	add	r23, r0
 5a4:	81 1d       	adc	r24, r1
 5a6:	11 24       	eor	r1, r1
 5a8:	91 1d       	adc	r25, r1
 5aa:	08 95       	ret

000005ac <fdevopen>:
 5ac:	0f 93       	push	r16
 5ae:	1f 93       	push	r17
 5b0:	cf 93       	push	r28
 5b2:	df 93       	push	r29
 5b4:	ec 01       	movw	r28, r24
 5b6:	8b 01       	movw	r16, r22
 5b8:	00 97       	sbiw	r24, 0x00	; 0
 5ba:	31 f4       	brne	.+12     	; 0x5c8 <fdevopen+0x1c>
 5bc:	61 15       	cp	r22, r1
 5be:	71 05       	cpc	r23, r1
 5c0:	19 f4       	brne	.+6      	; 0x5c8 <fdevopen+0x1c>
 5c2:	80 e0       	ldi	r24, 0x00	; 0
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	37 c0       	rjmp	.+110    	; 0x636 <fdevopen+0x8a>
 5c8:	6e e0       	ldi	r22, 0x0E	; 14
 5ca:	70 e0       	ldi	r23, 0x00	; 0
 5cc:	81 e0       	ldi	r24, 0x01	; 1
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	63 d2       	rcall	.+1222   	; 0xa98 <calloc>
 5d2:	fc 01       	movw	r30, r24
 5d4:	00 97       	sbiw	r24, 0x00	; 0
 5d6:	a9 f3       	breq	.-22     	; 0x5c2 <fdevopen+0x16>
 5d8:	80 e8       	ldi	r24, 0x80	; 128
 5da:	83 83       	std	Z+3, r24	; 0x03
 5dc:	01 15       	cp	r16, r1
 5de:	11 05       	cpc	r17, r1
 5e0:	71 f0       	breq	.+28     	; 0x5fe <fdevopen+0x52>
 5e2:	13 87       	std	Z+11, r17	; 0x0b
 5e4:	02 87       	std	Z+10, r16	; 0x0a
 5e6:	81 e8       	ldi	r24, 0x81	; 129
 5e8:	83 83       	std	Z+3, r24	; 0x03
 5ea:	80 91 ce 02 	lds	r24, 0x02CE
 5ee:	90 91 cf 02 	lds	r25, 0x02CF
 5f2:	89 2b       	or	r24, r25
 5f4:	21 f4       	brne	.+8      	; 0x5fe <fdevopen+0x52>
 5f6:	f0 93 cf 02 	sts	0x02CF, r31
 5fa:	e0 93 ce 02 	sts	0x02CE, r30
 5fe:	20 97       	sbiw	r28, 0x00	; 0
 600:	c9 f0       	breq	.+50     	; 0x634 <fdevopen+0x88>
 602:	d1 87       	std	Z+9, r29	; 0x09
 604:	c0 87       	std	Z+8, r28	; 0x08
 606:	83 81       	ldd	r24, Z+3	; 0x03
 608:	82 60       	ori	r24, 0x02	; 2
 60a:	83 83       	std	Z+3, r24	; 0x03
 60c:	80 91 d0 02 	lds	r24, 0x02D0
 610:	90 91 d1 02 	lds	r25, 0x02D1
 614:	89 2b       	or	r24, r25
 616:	71 f4       	brne	.+28     	; 0x634 <fdevopen+0x88>
 618:	f0 93 d1 02 	sts	0x02D1, r31
 61c:	e0 93 d0 02 	sts	0x02D0, r30
 620:	80 91 d2 02 	lds	r24, 0x02D2
 624:	90 91 d3 02 	lds	r25, 0x02D3
 628:	89 2b       	or	r24, r25
 62a:	21 f4       	brne	.+8      	; 0x634 <fdevopen+0x88>
 62c:	f0 93 d3 02 	sts	0x02D3, r31
 630:	e0 93 d2 02 	sts	0x02D2, r30
 634:	cf 01       	movw	r24, r30
 636:	df 91       	pop	r29
 638:	cf 91       	pop	r28
 63a:	1f 91       	pop	r17
 63c:	0f 91       	pop	r16
 63e:	08 95       	ret

00000640 <printf>:
 640:	cf 93       	push	r28
 642:	df 93       	push	r29
 644:	cd b7       	in	r28, 0x3d	; 61
 646:	de b7       	in	r29, 0x3e	; 62
 648:	fe 01       	movw	r30, r28
 64a:	36 96       	adiw	r30, 0x06	; 6
 64c:	61 91       	ld	r22, Z+
 64e:	71 91       	ld	r23, Z+
 650:	af 01       	movw	r20, r30
 652:	80 91 d0 02 	lds	r24, 0x02D0
 656:	90 91 d1 02 	lds	r25, 0x02D1
 65a:	30 d0       	rcall	.+96     	; 0x6bc <vfprintf>
 65c:	df 91       	pop	r29
 65e:	cf 91       	pop	r28
 660:	08 95       	ret

00000662 <puts>:
 662:	0f 93       	push	r16
 664:	1f 93       	push	r17
 666:	cf 93       	push	r28
 668:	df 93       	push	r29
 66a:	e0 91 d0 02 	lds	r30, 0x02D0
 66e:	f0 91 d1 02 	lds	r31, 0x02D1
 672:	23 81       	ldd	r18, Z+3	; 0x03
 674:	21 ff       	sbrs	r18, 1
 676:	1b c0       	rjmp	.+54     	; 0x6ae <puts+0x4c>
 678:	ec 01       	movw	r28, r24
 67a:	00 e0       	ldi	r16, 0x00	; 0
 67c:	10 e0       	ldi	r17, 0x00	; 0
 67e:	89 91       	ld	r24, Y+
 680:	60 91 d0 02 	lds	r22, 0x02D0
 684:	70 91 d1 02 	lds	r23, 0x02D1
 688:	db 01       	movw	r26, r22
 68a:	18 96       	adiw	r26, 0x08	; 8
 68c:	ed 91       	ld	r30, X+
 68e:	fc 91       	ld	r31, X
 690:	19 97       	sbiw	r26, 0x09	; 9
 692:	88 23       	and	r24, r24
 694:	31 f0       	breq	.+12     	; 0x6a2 <puts+0x40>
 696:	19 95       	eicall
 698:	89 2b       	or	r24, r25
 69a:	89 f3       	breq	.-30     	; 0x67e <puts+0x1c>
 69c:	0f ef       	ldi	r16, 0xFF	; 255
 69e:	1f ef       	ldi	r17, 0xFF	; 255
 6a0:	ee cf       	rjmp	.-36     	; 0x67e <puts+0x1c>
 6a2:	8a e0       	ldi	r24, 0x0A	; 10
 6a4:	19 95       	eicall
 6a6:	89 2b       	or	r24, r25
 6a8:	11 f4       	brne	.+4      	; 0x6ae <puts+0x4c>
 6aa:	c8 01       	movw	r24, r16
 6ac:	02 c0       	rjmp	.+4      	; 0x6b2 <puts+0x50>
 6ae:	8f ef       	ldi	r24, 0xFF	; 255
 6b0:	9f ef       	ldi	r25, 0xFF	; 255
 6b2:	df 91       	pop	r29
 6b4:	cf 91       	pop	r28
 6b6:	1f 91       	pop	r17
 6b8:	0f 91       	pop	r16
 6ba:	08 95       	ret

000006bc <vfprintf>:
 6bc:	2f 92       	push	r2
 6be:	3f 92       	push	r3
 6c0:	4f 92       	push	r4
 6c2:	5f 92       	push	r5
 6c4:	6f 92       	push	r6
 6c6:	7f 92       	push	r7
 6c8:	8f 92       	push	r8
 6ca:	9f 92       	push	r9
 6cc:	af 92       	push	r10
 6ce:	bf 92       	push	r11
 6d0:	cf 92       	push	r12
 6d2:	df 92       	push	r13
 6d4:	ef 92       	push	r14
 6d6:	ff 92       	push	r15
 6d8:	0f 93       	push	r16
 6da:	1f 93       	push	r17
 6dc:	cf 93       	push	r28
 6de:	df 93       	push	r29
 6e0:	cd b7       	in	r28, 0x3d	; 61
 6e2:	de b7       	in	r29, 0x3e	; 62
 6e4:	2c 97       	sbiw	r28, 0x0c	; 12
 6e6:	0f b6       	in	r0, 0x3f	; 63
 6e8:	f8 94       	cli
 6ea:	de bf       	out	0x3e, r29	; 62
 6ec:	0f be       	out	0x3f, r0	; 63
 6ee:	cd bf       	out	0x3d, r28	; 61
 6f0:	7c 01       	movw	r14, r24
 6f2:	6b 01       	movw	r12, r22
 6f4:	8a 01       	movw	r16, r20
 6f6:	fc 01       	movw	r30, r24
 6f8:	17 82       	std	Z+7, r1	; 0x07
 6fa:	16 82       	std	Z+6, r1	; 0x06
 6fc:	83 81       	ldd	r24, Z+3	; 0x03
 6fe:	81 ff       	sbrs	r24, 1
 700:	b0 c1       	rjmp	.+864    	; 0xa62 <vfprintf+0x3a6>
 702:	ce 01       	movw	r24, r28
 704:	01 96       	adiw	r24, 0x01	; 1
 706:	4c 01       	movw	r8, r24
 708:	f7 01       	movw	r30, r14
 70a:	93 81       	ldd	r25, Z+3	; 0x03
 70c:	f6 01       	movw	r30, r12
 70e:	93 fd       	sbrc	r25, 3
 710:	85 91       	lpm	r24, Z+
 712:	93 ff       	sbrs	r25, 3
 714:	81 91       	ld	r24, Z+
 716:	6f 01       	movw	r12, r30
 718:	88 23       	and	r24, r24
 71a:	09 f4       	brne	.+2      	; 0x71e <vfprintf+0x62>
 71c:	9e c1       	rjmp	.+828    	; 0xa5a <vfprintf+0x39e>
 71e:	85 32       	cpi	r24, 0x25	; 37
 720:	39 f4       	brne	.+14     	; 0x730 <vfprintf+0x74>
 722:	93 fd       	sbrc	r25, 3
 724:	85 91       	lpm	r24, Z+
 726:	93 ff       	sbrs	r25, 3
 728:	81 91       	ld	r24, Z+
 72a:	6f 01       	movw	r12, r30
 72c:	85 32       	cpi	r24, 0x25	; 37
 72e:	21 f4       	brne	.+8      	; 0x738 <vfprintf+0x7c>
 730:	b7 01       	movw	r22, r14
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	0f d3       	rcall	.+1566   	; 0xd54 <fputc>
 736:	e8 cf       	rjmp	.-48     	; 0x708 <vfprintf+0x4c>
 738:	51 2c       	mov	r5, r1
 73a:	31 2c       	mov	r3, r1
 73c:	20 e0       	ldi	r18, 0x00	; 0
 73e:	20 32       	cpi	r18, 0x20	; 32
 740:	a0 f4       	brcc	.+40     	; 0x76a <vfprintf+0xae>
 742:	8b 32       	cpi	r24, 0x2B	; 43
 744:	69 f0       	breq	.+26     	; 0x760 <vfprintf+0xa4>
 746:	30 f4       	brcc	.+12     	; 0x754 <vfprintf+0x98>
 748:	80 32       	cpi	r24, 0x20	; 32
 74a:	59 f0       	breq	.+22     	; 0x762 <vfprintf+0xa6>
 74c:	83 32       	cpi	r24, 0x23	; 35
 74e:	69 f4       	brne	.+26     	; 0x76a <vfprintf+0xae>
 750:	20 61       	ori	r18, 0x10	; 16
 752:	2c c0       	rjmp	.+88     	; 0x7ac <vfprintf+0xf0>
 754:	8d 32       	cpi	r24, 0x2D	; 45
 756:	39 f0       	breq	.+14     	; 0x766 <vfprintf+0xaa>
 758:	80 33       	cpi	r24, 0x30	; 48
 75a:	39 f4       	brne	.+14     	; 0x76a <vfprintf+0xae>
 75c:	21 60       	ori	r18, 0x01	; 1
 75e:	26 c0       	rjmp	.+76     	; 0x7ac <vfprintf+0xf0>
 760:	22 60       	ori	r18, 0x02	; 2
 762:	24 60       	ori	r18, 0x04	; 4
 764:	23 c0       	rjmp	.+70     	; 0x7ac <vfprintf+0xf0>
 766:	28 60       	ori	r18, 0x08	; 8
 768:	21 c0       	rjmp	.+66     	; 0x7ac <vfprintf+0xf0>
 76a:	27 fd       	sbrc	r18, 7
 76c:	27 c0       	rjmp	.+78     	; 0x7bc <vfprintf+0x100>
 76e:	30 ed       	ldi	r19, 0xD0	; 208
 770:	38 0f       	add	r19, r24
 772:	3a 30       	cpi	r19, 0x0A	; 10
 774:	78 f4       	brcc	.+30     	; 0x794 <vfprintf+0xd8>
 776:	26 ff       	sbrs	r18, 6
 778:	06 c0       	rjmp	.+12     	; 0x786 <vfprintf+0xca>
 77a:	fa e0       	ldi	r31, 0x0A	; 10
 77c:	5f 9e       	mul	r5, r31
 77e:	30 0d       	add	r19, r0
 780:	11 24       	eor	r1, r1
 782:	53 2e       	mov	r5, r19
 784:	13 c0       	rjmp	.+38     	; 0x7ac <vfprintf+0xf0>
 786:	8a e0       	ldi	r24, 0x0A	; 10
 788:	38 9e       	mul	r3, r24
 78a:	30 0d       	add	r19, r0
 78c:	11 24       	eor	r1, r1
 78e:	33 2e       	mov	r3, r19
 790:	20 62       	ori	r18, 0x20	; 32
 792:	0c c0       	rjmp	.+24     	; 0x7ac <vfprintf+0xf0>
 794:	8e 32       	cpi	r24, 0x2E	; 46
 796:	21 f4       	brne	.+8      	; 0x7a0 <vfprintf+0xe4>
 798:	26 fd       	sbrc	r18, 6
 79a:	5f c1       	rjmp	.+702    	; 0xa5a <vfprintf+0x39e>
 79c:	20 64       	ori	r18, 0x40	; 64
 79e:	06 c0       	rjmp	.+12     	; 0x7ac <vfprintf+0xf0>
 7a0:	8c 36       	cpi	r24, 0x6C	; 108
 7a2:	11 f4       	brne	.+4      	; 0x7a8 <vfprintf+0xec>
 7a4:	20 68       	ori	r18, 0x80	; 128
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <vfprintf+0xf0>
 7a8:	88 36       	cpi	r24, 0x68	; 104
 7aa:	41 f4       	brne	.+16     	; 0x7bc <vfprintf+0x100>
 7ac:	f6 01       	movw	r30, r12
 7ae:	93 fd       	sbrc	r25, 3
 7b0:	85 91       	lpm	r24, Z+
 7b2:	93 ff       	sbrs	r25, 3
 7b4:	81 91       	ld	r24, Z+
 7b6:	6f 01       	movw	r12, r30
 7b8:	81 11       	cpse	r24, r1
 7ba:	c1 cf       	rjmp	.-126    	; 0x73e <vfprintf+0x82>
 7bc:	98 2f       	mov	r25, r24
 7be:	9f 7d       	andi	r25, 0xDF	; 223
 7c0:	95 54       	subi	r25, 0x45	; 69
 7c2:	93 30       	cpi	r25, 0x03	; 3
 7c4:	28 f4       	brcc	.+10     	; 0x7d0 <vfprintf+0x114>
 7c6:	0c 5f       	subi	r16, 0xFC	; 252
 7c8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ca:	ff e3       	ldi	r31, 0x3F	; 63
 7cc:	f9 83       	std	Y+1, r31	; 0x01
 7ce:	0d c0       	rjmp	.+26     	; 0x7ea <vfprintf+0x12e>
 7d0:	83 36       	cpi	r24, 0x63	; 99
 7d2:	31 f0       	breq	.+12     	; 0x7e0 <vfprintf+0x124>
 7d4:	83 37       	cpi	r24, 0x73	; 115
 7d6:	71 f0       	breq	.+28     	; 0x7f4 <vfprintf+0x138>
 7d8:	83 35       	cpi	r24, 0x53	; 83
 7da:	09 f0       	breq	.+2      	; 0x7de <vfprintf+0x122>
 7dc:	57 c0       	rjmp	.+174    	; 0x88c <vfprintf+0x1d0>
 7de:	21 c0       	rjmp	.+66     	; 0x822 <vfprintf+0x166>
 7e0:	f8 01       	movw	r30, r16
 7e2:	80 81       	ld	r24, Z
 7e4:	89 83       	std	Y+1, r24	; 0x01
 7e6:	0e 5f       	subi	r16, 0xFE	; 254
 7e8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ea:	44 24       	eor	r4, r4
 7ec:	43 94       	inc	r4
 7ee:	51 2c       	mov	r5, r1
 7f0:	54 01       	movw	r10, r8
 7f2:	14 c0       	rjmp	.+40     	; 0x81c <vfprintf+0x160>
 7f4:	38 01       	movw	r6, r16
 7f6:	f2 e0       	ldi	r31, 0x02	; 2
 7f8:	6f 0e       	add	r6, r31
 7fa:	71 1c       	adc	r7, r1
 7fc:	f8 01       	movw	r30, r16
 7fe:	a0 80       	ld	r10, Z
 800:	b1 80       	ldd	r11, Z+1	; 0x01
 802:	26 ff       	sbrs	r18, 6
 804:	03 c0       	rjmp	.+6      	; 0x80c <vfprintf+0x150>
 806:	65 2d       	mov	r22, r5
 808:	70 e0       	ldi	r23, 0x00	; 0
 80a:	02 c0       	rjmp	.+4      	; 0x810 <vfprintf+0x154>
 80c:	6f ef       	ldi	r22, 0xFF	; 255
 80e:	7f ef       	ldi	r23, 0xFF	; 255
 810:	c5 01       	movw	r24, r10
 812:	2c 87       	std	Y+12, r18	; 0x0c
 814:	94 d2       	rcall	.+1320   	; 0xd3e <strnlen>
 816:	2c 01       	movw	r4, r24
 818:	83 01       	movw	r16, r6
 81a:	2c 85       	ldd	r18, Y+12	; 0x0c
 81c:	2f 77       	andi	r18, 0x7F	; 127
 81e:	22 2e       	mov	r2, r18
 820:	16 c0       	rjmp	.+44     	; 0x84e <vfprintf+0x192>
 822:	38 01       	movw	r6, r16
 824:	f2 e0       	ldi	r31, 0x02	; 2
 826:	6f 0e       	add	r6, r31
 828:	71 1c       	adc	r7, r1
 82a:	f8 01       	movw	r30, r16
 82c:	a0 80       	ld	r10, Z
 82e:	b1 80       	ldd	r11, Z+1	; 0x01
 830:	26 ff       	sbrs	r18, 6
 832:	03 c0       	rjmp	.+6      	; 0x83a <vfprintf+0x17e>
 834:	65 2d       	mov	r22, r5
 836:	70 e0       	ldi	r23, 0x00	; 0
 838:	02 c0       	rjmp	.+4      	; 0x83e <vfprintf+0x182>
 83a:	6f ef       	ldi	r22, 0xFF	; 255
 83c:	7f ef       	ldi	r23, 0xFF	; 255
 83e:	c5 01       	movw	r24, r10
 840:	2c 87       	std	Y+12, r18	; 0x0c
 842:	6b d2       	rcall	.+1238   	; 0xd1a <strnlen_P>
 844:	2c 01       	movw	r4, r24
 846:	2c 85       	ldd	r18, Y+12	; 0x0c
 848:	20 68       	ori	r18, 0x80	; 128
 84a:	22 2e       	mov	r2, r18
 84c:	83 01       	movw	r16, r6
 84e:	23 fc       	sbrc	r2, 3
 850:	19 c0       	rjmp	.+50     	; 0x884 <vfprintf+0x1c8>
 852:	83 2d       	mov	r24, r3
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	48 16       	cp	r4, r24
 858:	59 06       	cpc	r5, r25
 85a:	a0 f4       	brcc	.+40     	; 0x884 <vfprintf+0x1c8>
 85c:	b7 01       	movw	r22, r14
 85e:	80 e2       	ldi	r24, 0x20	; 32
 860:	90 e0       	ldi	r25, 0x00	; 0
 862:	78 d2       	rcall	.+1264   	; 0xd54 <fputc>
 864:	3a 94       	dec	r3
 866:	f5 cf       	rjmp	.-22     	; 0x852 <vfprintf+0x196>
 868:	f5 01       	movw	r30, r10
 86a:	27 fc       	sbrc	r2, 7
 86c:	85 91       	lpm	r24, Z+
 86e:	27 fe       	sbrs	r2, 7
 870:	81 91       	ld	r24, Z+
 872:	5f 01       	movw	r10, r30
 874:	b7 01       	movw	r22, r14
 876:	90 e0       	ldi	r25, 0x00	; 0
 878:	6d d2       	rcall	.+1242   	; 0xd54 <fputc>
 87a:	31 10       	cpse	r3, r1
 87c:	3a 94       	dec	r3
 87e:	f1 e0       	ldi	r31, 0x01	; 1
 880:	4f 1a       	sub	r4, r31
 882:	51 08       	sbc	r5, r1
 884:	41 14       	cp	r4, r1
 886:	51 04       	cpc	r5, r1
 888:	79 f7       	brne	.-34     	; 0x868 <vfprintf+0x1ac>
 88a:	de c0       	rjmp	.+444    	; 0xa48 <vfprintf+0x38c>
 88c:	84 36       	cpi	r24, 0x64	; 100
 88e:	11 f0       	breq	.+4      	; 0x894 <vfprintf+0x1d8>
 890:	89 36       	cpi	r24, 0x69	; 105
 892:	31 f5       	brne	.+76     	; 0x8e0 <vfprintf+0x224>
 894:	f8 01       	movw	r30, r16
 896:	27 ff       	sbrs	r18, 7
 898:	07 c0       	rjmp	.+14     	; 0x8a8 <vfprintf+0x1ec>
 89a:	60 81       	ld	r22, Z
 89c:	71 81       	ldd	r23, Z+1	; 0x01
 89e:	82 81       	ldd	r24, Z+2	; 0x02
 8a0:	93 81       	ldd	r25, Z+3	; 0x03
 8a2:	0c 5f       	subi	r16, 0xFC	; 252
 8a4:	1f 4f       	sbci	r17, 0xFF	; 255
 8a6:	08 c0       	rjmp	.+16     	; 0x8b8 <vfprintf+0x1fc>
 8a8:	60 81       	ld	r22, Z
 8aa:	71 81       	ldd	r23, Z+1	; 0x01
 8ac:	88 27       	eor	r24, r24
 8ae:	77 fd       	sbrc	r23, 7
 8b0:	80 95       	com	r24
 8b2:	98 2f       	mov	r25, r24
 8b4:	0e 5f       	subi	r16, 0xFE	; 254
 8b6:	1f 4f       	sbci	r17, 0xFF	; 255
 8b8:	2f 76       	andi	r18, 0x6F	; 111
 8ba:	b2 2e       	mov	r11, r18
 8bc:	97 ff       	sbrs	r25, 7
 8be:	09 c0       	rjmp	.+18     	; 0x8d2 <vfprintf+0x216>
 8c0:	90 95       	com	r25
 8c2:	80 95       	com	r24
 8c4:	70 95       	com	r23
 8c6:	61 95       	neg	r22
 8c8:	7f 4f       	sbci	r23, 0xFF	; 255
 8ca:	8f 4f       	sbci	r24, 0xFF	; 255
 8cc:	9f 4f       	sbci	r25, 0xFF	; 255
 8ce:	20 68       	ori	r18, 0x80	; 128
 8d0:	b2 2e       	mov	r11, r18
 8d2:	2a e0       	ldi	r18, 0x0A	; 10
 8d4:	30 e0       	ldi	r19, 0x00	; 0
 8d6:	a4 01       	movw	r20, r8
 8d8:	6f d2       	rcall	.+1246   	; 0xdb8 <__ultoa_invert>
 8da:	a8 2e       	mov	r10, r24
 8dc:	a8 18       	sub	r10, r8
 8de:	43 c0       	rjmp	.+134    	; 0x966 <vfprintf+0x2aa>
 8e0:	85 37       	cpi	r24, 0x75	; 117
 8e2:	29 f4       	brne	.+10     	; 0x8ee <vfprintf+0x232>
 8e4:	2f 7e       	andi	r18, 0xEF	; 239
 8e6:	b2 2e       	mov	r11, r18
 8e8:	2a e0       	ldi	r18, 0x0A	; 10
 8ea:	30 e0       	ldi	r19, 0x00	; 0
 8ec:	25 c0       	rjmp	.+74     	; 0x938 <vfprintf+0x27c>
 8ee:	f2 2f       	mov	r31, r18
 8f0:	f9 7f       	andi	r31, 0xF9	; 249
 8f2:	bf 2e       	mov	r11, r31
 8f4:	8f 36       	cpi	r24, 0x6F	; 111
 8f6:	c1 f0       	breq	.+48     	; 0x928 <vfprintf+0x26c>
 8f8:	18 f4       	brcc	.+6      	; 0x900 <vfprintf+0x244>
 8fa:	88 35       	cpi	r24, 0x58	; 88
 8fc:	79 f0       	breq	.+30     	; 0x91c <vfprintf+0x260>
 8fe:	ad c0       	rjmp	.+346    	; 0xa5a <vfprintf+0x39e>
 900:	80 37       	cpi	r24, 0x70	; 112
 902:	19 f0       	breq	.+6      	; 0x90a <vfprintf+0x24e>
 904:	88 37       	cpi	r24, 0x78	; 120
 906:	21 f0       	breq	.+8      	; 0x910 <vfprintf+0x254>
 908:	a8 c0       	rjmp	.+336    	; 0xa5a <vfprintf+0x39e>
 90a:	2f 2f       	mov	r18, r31
 90c:	20 61       	ori	r18, 0x10	; 16
 90e:	b2 2e       	mov	r11, r18
 910:	b4 fe       	sbrs	r11, 4
 912:	0d c0       	rjmp	.+26     	; 0x92e <vfprintf+0x272>
 914:	8b 2d       	mov	r24, r11
 916:	84 60       	ori	r24, 0x04	; 4
 918:	b8 2e       	mov	r11, r24
 91a:	09 c0       	rjmp	.+18     	; 0x92e <vfprintf+0x272>
 91c:	24 ff       	sbrs	r18, 4
 91e:	0a c0       	rjmp	.+20     	; 0x934 <vfprintf+0x278>
 920:	9f 2f       	mov	r25, r31
 922:	96 60       	ori	r25, 0x06	; 6
 924:	b9 2e       	mov	r11, r25
 926:	06 c0       	rjmp	.+12     	; 0x934 <vfprintf+0x278>
 928:	28 e0       	ldi	r18, 0x08	; 8
 92a:	30 e0       	ldi	r19, 0x00	; 0
 92c:	05 c0       	rjmp	.+10     	; 0x938 <vfprintf+0x27c>
 92e:	20 e1       	ldi	r18, 0x10	; 16
 930:	30 e0       	ldi	r19, 0x00	; 0
 932:	02 c0       	rjmp	.+4      	; 0x938 <vfprintf+0x27c>
 934:	20 e1       	ldi	r18, 0x10	; 16
 936:	32 e0       	ldi	r19, 0x02	; 2
 938:	f8 01       	movw	r30, r16
 93a:	b7 fe       	sbrs	r11, 7
 93c:	07 c0       	rjmp	.+14     	; 0x94c <vfprintf+0x290>
 93e:	60 81       	ld	r22, Z
 940:	71 81       	ldd	r23, Z+1	; 0x01
 942:	82 81       	ldd	r24, Z+2	; 0x02
 944:	93 81       	ldd	r25, Z+3	; 0x03
 946:	0c 5f       	subi	r16, 0xFC	; 252
 948:	1f 4f       	sbci	r17, 0xFF	; 255
 94a:	06 c0       	rjmp	.+12     	; 0x958 <vfprintf+0x29c>
 94c:	60 81       	ld	r22, Z
 94e:	71 81       	ldd	r23, Z+1	; 0x01
 950:	80 e0       	ldi	r24, 0x00	; 0
 952:	90 e0       	ldi	r25, 0x00	; 0
 954:	0e 5f       	subi	r16, 0xFE	; 254
 956:	1f 4f       	sbci	r17, 0xFF	; 255
 958:	a4 01       	movw	r20, r8
 95a:	2e d2       	rcall	.+1116   	; 0xdb8 <__ultoa_invert>
 95c:	a8 2e       	mov	r10, r24
 95e:	a8 18       	sub	r10, r8
 960:	fb 2d       	mov	r31, r11
 962:	ff 77       	andi	r31, 0x7F	; 127
 964:	bf 2e       	mov	r11, r31
 966:	b6 fe       	sbrs	r11, 6
 968:	0b c0       	rjmp	.+22     	; 0x980 <vfprintf+0x2c4>
 96a:	2b 2d       	mov	r18, r11
 96c:	2e 7f       	andi	r18, 0xFE	; 254
 96e:	a5 14       	cp	r10, r5
 970:	50 f4       	brcc	.+20     	; 0x986 <vfprintf+0x2ca>
 972:	b4 fe       	sbrs	r11, 4
 974:	0a c0       	rjmp	.+20     	; 0x98a <vfprintf+0x2ce>
 976:	b2 fc       	sbrc	r11, 2
 978:	08 c0       	rjmp	.+16     	; 0x98a <vfprintf+0x2ce>
 97a:	2b 2d       	mov	r18, r11
 97c:	2e 7e       	andi	r18, 0xEE	; 238
 97e:	05 c0       	rjmp	.+10     	; 0x98a <vfprintf+0x2ce>
 980:	7a 2c       	mov	r7, r10
 982:	2b 2d       	mov	r18, r11
 984:	03 c0       	rjmp	.+6      	; 0x98c <vfprintf+0x2d0>
 986:	7a 2c       	mov	r7, r10
 988:	01 c0       	rjmp	.+2      	; 0x98c <vfprintf+0x2d0>
 98a:	75 2c       	mov	r7, r5
 98c:	24 ff       	sbrs	r18, 4
 98e:	0d c0       	rjmp	.+26     	; 0x9aa <vfprintf+0x2ee>
 990:	fe 01       	movw	r30, r28
 992:	ea 0d       	add	r30, r10
 994:	f1 1d       	adc	r31, r1
 996:	80 81       	ld	r24, Z
 998:	80 33       	cpi	r24, 0x30	; 48
 99a:	11 f4       	brne	.+4      	; 0x9a0 <vfprintf+0x2e4>
 99c:	29 7e       	andi	r18, 0xE9	; 233
 99e:	09 c0       	rjmp	.+18     	; 0x9b2 <vfprintf+0x2f6>
 9a0:	22 ff       	sbrs	r18, 2
 9a2:	06 c0       	rjmp	.+12     	; 0x9b0 <vfprintf+0x2f4>
 9a4:	73 94       	inc	r7
 9a6:	73 94       	inc	r7
 9a8:	04 c0       	rjmp	.+8      	; 0x9b2 <vfprintf+0x2f6>
 9aa:	82 2f       	mov	r24, r18
 9ac:	86 78       	andi	r24, 0x86	; 134
 9ae:	09 f0       	breq	.+2      	; 0x9b2 <vfprintf+0x2f6>
 9b0:	73 94       	inc	r7
 9b2:	23 fd       	sbrc	r18, 3
 9b4:	12 c0       	rjmp	.+36     	; 0x9da <vfprintf+0x31e>
 9b6:	20 ff       	sbrs	r18, 0
 9b8:	06 c0       	rjmp	.+12     	; 0x9c6 <vfprintf+0x30a>
 9ba:	5a 2c       	mov	r5, r10
 9bc:	73 14       	cp	r7, r3
 9be:	18 f4       	brcc	.+6      	; 0x9c6 <vfprintf+0x30a>
 9c0:	53 0c       	add	r5, r3
 9c2:	57 18       	sub	r5, r7
 9c4:	73 2c       	mov	r7, r3
 9c6:	73 14       	cp	r7, r3
 9c8:	60 f4       	brcc	.+24     	; 0x9e2 <vfprintf+0x326>
 9ca:	b7 01       	movw	r22, r14
 9cc:	80 e2       	ldi	r24, 0x20	; 32
 9ce:	90 e0       	ldi	r25, 0x00	; 0
 9d0:	2c 87       	std	Y+12, r18	; 0x0c
 9d2:	c0 d1       	rcall	.+896    	; 0xd54 <fputc>
 9d4:	73 94       	inc	r7
 9d6:	2c 85       	ldd	r18, Y+12	; 0x0c
 9d8:	f6 cf       	rjmp	.-20     	; 0x9c6 <vfprintf+0x30a>
 9da:	73 14       	cp	r7, r3
 9dc:	10 f4       	brcc	.+4      	; 0x9e2 <vfprintf+0x326>
 9de:	37 18       	sub	r3, r7
 9e0:	01 c0       	rjmp	.+2      	; 0x9e4 <vfprintf+0x328>
 9e2:	31 2c       	mov	r3, r1
 9e4:	24 ff       	sbrs	r18, 4
 9e6:	11 c0       	rjmp	.+34     	; 0xa0a <vfprintf+0x34e>
 9e8:	b7 01       	movw	r22, r14
 9ea:	80 e3       	ldi	r24, 0x30	; 48
 9ec:	90 e0       	ldi	r25, 0x00	; 0
 9ee:	2c 87       	std	Y+12, r18	; 0x0c
 9f0:	b1 d1       	rcall	.+866    	; 0xd54 <fputc>
 9f2:	2c 85       	ldd	r18, Y+12	; 0x0c
 9f4:	22 ff       	sbrs	r18, 2
 9f6:	16 c0       	rjmp	.+44     	; 0xa24 <vfprintf+0x368>
 9f8:	21 ff       	sbrs	r18, 1
 9fa:	03 c0       	rjmp	.+6      	; 0xa02 <vfprintf+0x346>
 9fc:	88 e5       	ldi	r24, 0x58	; 88
 9fe:	90 e0       	ldi	r25, 0x00	; 0
 a00:	02 c0       	rjmp	.+4      	; 0xa06 <vfprintf+0x34a>
 a02:	88 e7       	ldi	r24, 0x78	; 120
 a04:	90 e0       	ldi	r25, 0x00	; 0
 a06:	b7 01       	movw	r22, r14
 a08:	0c c0       	rjmp	.+24     	; 0xa22 <vfprintf+0x366>
 a0a:	82 2f       	mov	r24, r18
 a0c:	86 78       	andi	r24, 0x86	; 134
 a0e:	51 f0       	breq	.+20     	; 0xa24 <vfprintf+0x368>
 a10:	21 fd       	sbrc	r18, 1
 a12:	02 c0       	rjmp	.+4      	; 0xa18 <vfprintf+0x35c>
 a14:	80 e2       	ldi	r24, 0x20	; 32
 a16:	01 c0       	rjmp	.+2      	; 0xa1a <vfprintf+0x35e>
 a18:	8b e2       	ldi	r24, 0x2B	; 43
 a1a:	27 fd       	sbrc	r18, 7
 a1c:	8d e2       	ldi	r24, 0x2D	; 45
 a1e:	b7 01       	movw	r22, r14
 a20:	90 e0       	ldi	r25, 0x00	; 0
 a22:	98 d1       	rcall	.+816    	; 0xd54 <fputc>
 a24:	a5 14       	cp	r10, r5
 a26:	30 f4       	brcc	.+12     	; 0xa34 <vfprintf+0x378>
 a28:	b7 01       	movw	r22, r14
 a2a:	80 e3       	ldi	r24, 0x30	; 48
 a2c:	90 e0       	ldi	r25, 0x00	; 0
 a2e:	92 d1       	rcall	.+804    	; 0xd54 <fputc>
 a30:	5a 94       	dec	r5
 a32:	f8 cf       	rjmp	.-16     	; 0xa24 <vfprintf+0x368>
 a34:	aa 94       	dec	r10
 a36:	f4 01       	movw	r30, r8
 a38:	ea 0d       	add	r30, r10
 a3a:	f1 1d       	adc	r31, r1
 a3c:	80 81       	ld	r24, Z
 a3e:	b7 01       	movw	r22, r14
 a40:	90 e0       	ldi	r25, 0x00	; 0
 a42:	88 d1       	rcall	.+784    	; 0xd54 <fputc>
 a44:	a1 10       	cpse	r10, r1
 a46:	f6 cf       	rjmp	.-20     	; 0xa34 <vfprintf+0x378>
 a48:	33 20       	and	r3, r3
 a4a:	09 f4       	brne	.+2      	; 0xa4e <vfprintf+0x392>
 a4c:	5d ce       	rjmp	.-838    	; 0x708 <vfprintf+0x4c>
 a4e:	b7 01       	movw	r22, r14
 a50:	80 e2       	ldi	r24, 0x20	; 32
 a52:	90 e0       	ldi	r25, 0x00	; 0
 a54:	7f d1       	rcall	.+766    	; 0xd54 <fputc>
 a56:	3a 94       	dec	r3
 a58:	f7 cf       	rjmp	.-18     	; 0xa48 <vfprintf+0x38c>
 a5a:	f7 01       	movw	r30, r14
 a5c:	86 81       	ldd	r24, Z+6	; 0x06
 a5e:	97 81       	ldd	r25, Z+7	; 0x07
 a60:	02 c0       	rjmp	.+4      	; 0xa66 <vfprintf+0x3aa>
 a62:	8f ef       	ldi	r24, 0xFF	; 255
 a64:	9f ef       	ldi	r25, 0xFF	; 255
 a66:	2c 96       	adiw	r28, 0x0c	; 12
 a68:	0f b6       	in	r0, 0x3f	; 63
 a6a:	f8 94       	cli
 a6c:	de bf       	out	0x3e, r29	; 62
 a6e:	0f be       	out	0x3f, r0	; 63
 a70:	cd bf       	out	0x3d, r28	; 61
 a72:	df 91       	pop	r29
 a74:	cf 91       	pop	r28
 a76:	1f 91       	pop	r17
 a78:	0f 91       	pop	r16
 a7a:	ff 90       	pop	r15
 a7c:	ef 90       	pop	r14
 a7e:	df 90       	pop	r13
 a80:	cf 90       	pop	r12
 a82:	bf 90       	pop	r11
 a84:	af 90       	pop	r10
 a86:	9f 90       	pop	r9
 a88:	8f 90       	pop	r8
 a8a:	7f 90       	pop	r7
 a8c:	6f 90       	pop	r6
 a8e:	5f 90       	pop	r5
 a90:	4f 90       	pop	r4
 a92:	3f 90       	pop	r3
 a94:	2f 90       	pop	r2
 a96:	08 95       	ret

00000a98 <calloc>:
 a98:	0f 93       	push	r16
 a9a:	1f 93       	push	r17
 a9c:	cf 93       	push	r28
 a9e:	df 93       	push	r29
 aa0:	86 9f       	mul	r24, r22
 aa2:	80 01       	movw	r16, r0
 aa4:	87 9f       	mul	r24, r23
 aa6:	10 0d       	add	r17, r0
 aa8:	96 9f       	mul	r25, r22
 aaa:	10 0d       	add	r17, r0
 aac:	11 24       	eor	r1, r1
 aae:	c8 01       	movw	r24, r16
 ab0:	0d d0       	rcall	.+26     	; 0xacc <malloc>
 ab2:	ec 01       	movw	r28, r24
 ab4:	00 97       	sbiw	r24, 0x00	; 0
 ab6:	21 f0       	breq	.+8      	; 0xac0 <calloc+0x28>
 ab8:	a8 01       	movw	r20, r16
 aba:	60 e0       	ldi	r22, 0x00	; 0
 abc:	70 e0       	ldi	r23, 0x00	; 0
 abe:	38 d1       	rcall	.+624    	; 0xd30 <memset>
 ac0:	ce 01       	movw	r24, r28
 ac2:	df 91       	pop	r29
 ac4:	cf 91       	pop	r28
 ac6:	1f 91       	pop	r17
 ac8:	0f 91       	pop	r16
 aca:	08 95       	ret

00000acc <malloc>:
 acc:	cf 93       	push	r28
 ace:	df 93       	push	r29
 ad0:	82 30       	cpi	r24, 0x02	; 2
 ad2:	91 05       	cpc	r25, r1
 ad4:	10 f4       	brcc	.+4      	; 0xada <malloc+0xe>
 ad6:	82 e0       	ldi	r24, 0x02	; 2
 ad8:	90 e0       	ldi	r25, 0x00	; 0
 ada:	e0 91 d6 02 	lds	r30, 0x02D6
 ade:	f0 91 d7 02 	lds	r31, 0x02D7
 ae2:	20 e0       	ldi	r18, 0x00	; 0
 ae4:	30 e0       	ldi	r19, 0x00	; 0
 ae6:	a0 e0       	ldi	r26, 0x00	; 0
 ae8:	b0 e0       	ldi	r27, 0x00	; 0
 aea:	30 97       	sbiw	r30, 0x00	; 0
 aec:	39 f1       	breq	.+78     	; 0xb3c <malloc+0x70>
 aee:	40 81       	ld	r20, Z
 af0:	51 81       	ldd	r21, Z+1	; 0x01
 af2:	48 17       	cp	r20, r24
 af4:	59 07       	cpc	r21, r25
 af6:	b8 f0       	brcs	.+46     	; 0xb26 <malloc+0x5a>
 af8:	48 17       	cp	r20, r24
 afa:	59 07       	cpc	r21, r25
 afc:	71 f4       	brne	.+28     	; 0xb1a <malloc+0x4e>
 afe:	82 81       	ldd	r24, Z+2	; 0x02
 b00:	93 81       	ldd	r25, Z+3	; 0x03
 b02:	10 97       	sbiw	r26, 0x00	; 0
 b04:	29 f0       	breq	.+10     	; 0xb10 <malloc+0x44>
 b06:	13 96       	adiw	r26, 0x03	; 3
 b08:	9c 93       	st	X, r25
 b0a:	8e 93       	st	-X, r24
 b0c:	12 97       	sbiw	r26, 0x02	; 2
 b0e:	2c c0       	rjmp	.+88     	; 0xb68 <malloc+0x9c>
 b10:	90 93 d7 02 	sts	0x02D7, r25
 b14:	80 93 d6 02 	sts	0x02D6, r24
 b18:	27 c0       	rjmp	.+78     	; 0xb68 <malloc+0x9c>
 b1a:	21 15       	cp	r18, r1
 b1c:	31 05       	cpc	r19, r1
 b1e:	31 f0       	breq	.+12     	; 0xb2c <malloc+0x60>
 b20:	42 17       	cp	r20, r18
 b22:	53 07       	cpc	r21, r19
 b24:	18 f0       	brcs	.+6      	; 0xb2c <malloc+0x60>
 b26:	a9 01       	movw	r20, r18
 b28:	db 01       	movw	r26, r22
 b2a:	01 c0       	rjmp	.+2      	; 0xb2e <malloc+0x62>
 b2c:	ef 01       	movw	r28, r30
 b2e:	9a 01       	movw	r18, r20
 b30:	bd 01       	movw	r22, r26
 b32:	df 01       	movw	r26, r30
 b34:	02 80       	ldd	r0, Z+2	; 0x02
 b36:	f3 81       	ldd	r31, Z+3	; 0x03
 b38:	e0 2d       	mov	r30, r0
 b3a:	d7 cf       	rjmp	.-82     	; 0xaea <malloc+0x1e>
 b3c:	21 15       	cp	r18, r1
 b3e:	31 05       	cpc	r19, r1
 b40:	f9 f0       	breq	.+62     	; 0xb80 <malloc+0xb4>
 b42:	28 1b       	sub	r18, r24
 b44:	39 0b       	sbc	r19, r25
 b46:	24 30       	cpi	r18, 0x04	; 4
 b48:	31 05       	cpc	r19, r1
 b4a:	80 f4       	brcc	.+32     	; 0xb6c <malloc+0xa0>
 b4c:	8a 81       	ldd	r24, Y+2	; 0x02
 b4e:	9b 81       	ldd	r25, Y+3	; 0x03
 b50:	61 15       	cp	r22, r1
 b52:	71 05       	cpc	r23, r1
 b54:	21 f0       	breq	.+8      	; 0xb5e <malloc+0x92>
 b56:	fb 01       	movw	r30, r22
 b58:	93 83       	std	Z+3, r25	; 0x03
 b5a:	82 83       	std	Z+2, r24	; 0x02
 b5c:	04 c0       	rjmp	.+8      	; 0xb66 <malloc+0x9a>
 b5e:	90 93 d7 02 	sts	0x02D7, r25
 b62:	80 93 d6 02 	sts	0x02D6, r24
 b66:	fe 01       	movw	r30, r28
 b68:	32 96       	adiw	r30, 0x02	; 2
 b6a:	44 c0       	rjmp	.+136    	; 0xbf4 <malloc+0x128>
 b6c:	fe 01       	movw	r30, r28
 b6e:	e2 0f       	add	r30, r18
 b70:	f3 1f       	adc	r31, r19
 b72:	81 93       	st	Z+, r24
 b74:	91 93       	st	Z+, r25
 b76:	22 50       	subi	r18, 0x02	; 2
 b78:	31 09       	sbc	r19, r1
 b7a:	39 83       	std	Y+1, r19	; 0x01
 b7c:	28 83       	st	Y, r18
 b7e:	3a c0       	rjmp	.+116    	; 0xbf4 <malloc+0x128>
 b80:	20 91 d4 02 	lds	r18, 0x02D4
 b84:	30 91 d5 02 	lds	r19, 0x02D5
 b88:	23 2b       	or	r18, r19
 b8a:	41 f4       	brne	.+16     	; 0xb9c <malloc+0xd0>
 b8c:	20 91 02 02 	lds	r18, 0x0202
 b90:	30 91 03 02 	lds	r19, 0x0203
 b94:	30 93 d5 02 	sts	0x02D5, r19
 b98:	20 93 d4 02 	sts	0x02D4, r18
 b9c:	20 91 00 02 	lds	r18, 0x0200
 ba0:	30 91 01 02 	lds	r19, 0x0201
 ba4:	21 15       	cp	r18, r1
 ba6:	31 05       	cpc	r19, r1
 ba8:	41 f4       	brne	.+16     	; 0xbba <malloc+0xee>
 baa:	2d b7       	in	r18, 0x3d	; 61
 bac:	3e b7       	in	r19, 0x3e	; 62
 bae:	40 91 04 02 	lds	r20, 0x0204
 bb2:	50 91 05 02 	lds	r21, 0x0205
 bb6:	24 1b       	sub	r18, r20
 bb8:	35 0b       	sbc	r19, r21
 bba:	e0 91 d4 02 	lds	r30, 0x02D4
 bbe:	f0 91 d5 02 	lds	r31, 0x02D5
 bc2:	e2 17       	cp	r30, r18
 bc4:	f3 07       	cpc	r31, r19
 bc6:	a0 f4       	brcc	.+40     	; 0xbf0 <malloc+0x124>
 bc8:	2e 1b       	sub	r18, r30
 bca:	3f 0b       	sbc	r19, r31
 bcc:	28 17       	cp	r18, r24
 bce:	39 07       	cpc	r19, r25
 bd0:	78 f0       	brcs	.+30     	; 0xbf0 <malloc+0x124>
 bd2:	ac 01       	movw	r20, r24
 bd4:	4e 5f       	subi	r20, 0xFE	; 254
 bd6:	5f 4f       	sbci	r21, 0xFF	; 255
 bd8:	24 17       	cp	r18, r20
 bda:	35 07       	cpc	r19, r21
 bdc:	48 f0       	brcs	.+18     	; 0xbf0 <malloc+0x124>
 bde:	4e 0f       	add	r20, r30
 be0:	5f 1f       	adc	r21, r31
 be2:	50 93 d5 02 	sts	0x02D5, r21
 be6:	40 93 d4 02 	sts	0x02D4, r20
 bea:	81 93       	st	Z+, r24
 bec:	91 93       	st	Z+, r25
 bee:	02 c0       	rjmp	.+4      	; 0xbf4 <malloc+0x128>
 bf0:	e0 e0       	ldi	r30, 0x00	; 0
 bf2:	f0 e0       	ldi	r31, 0x00	; 0
 bf4:	cf 01       	movw	r24, r30
 bf6:	df 91       	pop	r29
 bf8:	cf 91       	pop	r28
 bfa:	08 95       	ret

00000bfc <free>:
 bfc:	cf 93       	push	r28
 bfe:	df 93       	push	r29
 c00:	00 97       	sbiw	r24, 0x00	; 0
 c02:	09 f4       	brne	.+2      	; 0xc06 <free+0xa>
 c04:	87 c0       	rjmp	.+270    	; 0xd14 <free+0x118>
 c06:	fc 01       	movw	r30, r24
 c08:	32 97       	sbiw	r30, 0x02	; 2
 c0a:	13 82       	std	Z+3, r1	; 0x03
 c0c:	12 82       	std	Z+2, r1	; 0x02
 c0e:	c0 91 d6 02 	lds	r28, 0x02D6
 c12:	d0 91 d7 02 	lds	r29, 0x02D7
 c16:	20 97       	sbiw	r28, 0x00	; 0
 c18:	81 f4       	brne	.+32     	; 0xc3a <free+0x3e>
 c1a:	20 81       	ld	r18, Z
 c1c:	31 81       	ldd	r19, Z+1	; 0x01
 c1e:	28 0f       	add	r18, r24
 c20:	39 1f       	adc	r19, r25
 c22:	80 91 d4 02 	lds	r24, 0x02D4
 c26:	90 91 d5 02 	lds	r25, 0x02D5
 c2a:	82 17       	cp	r24, r18
 c2c:	93 07       	cpc	r25, r19
 c2e:	79 f5       	brne	.+94     	; 0xc8e <free+0x92>
 c30:	f0 93 d5 02 	sts	0x02D5, r31
 c34:	e0 93 d4 02 	sts	0x02D4, r30
 c38:	6d c0       	rjmp	.+218    	; 0xd14 <free+0x118>
 c3a:	de 01       	movw	r26, r28
 c3c:	20 e0       	ldi	r18, 0x00	; 0
 c3e:	30 e0       	ldi	r19, 0x00	; 0
 c40:	ae 17       	cp	r26, r30
 c42:	bf 07       	cpc	r27, r31
 c44:	50 f4       	brcc	.+20     	; 0xc5a <free+0x5e>
 c46:	12 96       	adiw	r26, 0x02	; 2
 c48:	4d 91       	ld	r20, X+
 c4a:	5c 91       	ld	r21, X
 c4c:	13 97       	sbiw	r26, 0x03	; 3
 c4e:	9d 01       	movw	r18, r26
 c50:	41 15       	cp	r20, r1
 c52:	51 05       	cpc	r21, r1
 c54:	09 f1       	breq	.+66     	; 0xc98 <free+0x9c>
 c56:	da 01       	movw	r26, r20
 c58:	f3 cf       	rjmp	.-26     	; 0xc40 <free+0x44>
 c5a:	b3 83       	std	Z+3, r27	; 0x03
 c5c:	a2 83       	std	Z+2, r26	; 0x02
 c5e:	40 81       	ld	r20, Z
 c60:	51 81       	ldd	r21, Z+1	; 0x01
 c62:	84 0f       	add	r24, r20
 c64:	95 1f       	adc	r25, r21
 c66:	8a 17       	cp	r24, r26
 c68:	9b 07       	cpc	r25, r27
 c6a:	71 f4       	brne	.+28     	; 0xc88 <free+0x8c>
 c6c:	8d 91       	ld	r24, X+
 c6e:	9c 91       	ld	r25, X
 c70:	11 97       	sbiw	r26, 0x01	; 1
 c72:	84 0f       	add	r24, r20
 c74:	95 1f       	adc	r25, r21
 c76:	02 96       	adiw	r24, 0x02	; 2
 c78:	91 83       	std	Z+1, r25	; 0x01
 c7a:	80 83       	st	Z, r24
 c7c:	12 96       	adiw	r26, 0x02	; 2
 c7e:	8d 91       	ld	r24, X+
 c80:	9c 91       	ld	r25, X
 c82:	13 97       	sbiw	r26, 0x03	; 3
 c84:	93 83       	std	Z+3, r25	; 0x03
 c86:	82 83       	std	Z+2, r24	; 0x02
 c88:	21 15       	cp	r18, r1
 c8a:	31 05       	cpc	r19, r1
 c8c:	29 f4       	brne	.+10     	; 0xc98 <free+0x9c>
 c8e:	f0 93 d7 02 	sts	0x02D7, r31
 c92:	e0 93 d6 02 	sts	0x02D6, r30
 c96:	3e c0       	rjmp	.+124    	; 0xd14 <free+0x118>
 c98:	d9 01       	movw	r26, r18
 c9a:	13 96       	adiw	r26, 0x03	; 3
 c9c:	fc 93       	st	X, r31
 c9e:	ee 93       	st	-X, r30
 ca0:	12 97       	sbiw	r26, 0x02	; 2
 ca2:	4d 91       	ld	r20, X+
 ca4:	5d 91       	ld	r21, X+
 ca6:	a4 0f       	add	r26, r20
 ca8:	b5 1f       	adc	r27, r21
 caa:	ea 17       	cp	r30, r26
 cac:	fb 07       	cpc	r31, r27
 cae:	79 f4       	brne	.+30     	; 0xcce <free+0xd2>
 cb0:	80 81       	ld	r24, Z
 cb2:	91 81       	ldd	r25, Z+1	; 0x01
 cb4:	84 0f       	add	r24, r20
 cb6:	95 1f       	adc	r25, r21
 cb8:	02 96       	adiw	r24, 0x02	; 2
 cba:	d9 01       	movw	r26, r18
 cbc:	11 96       	adiw	r26, 0x01	; 1
 cbe:	9c 93       	st	X, r25
 cc0:	8e 93       	st	-X, r24
 cc2:	82 81       	ldd	r24, Z+2	; 0x02
 cc4:	93 81       	ldd	r25, Z+3	; 0x03
 cc6:	13 96       	adiw	r26, 0x03	; 3
 cc8:	9c 93       	st	X, r25
 cca:	8e 93       	st	-X, r24
 ccc:	12 97       	sbiw	r26, 0x02	; 2
 cce:	e0 e0       	ldi	r30, 0x00	; 0
 cd0:	f0 e0       	ldi	r31, 0x00	; 0
 cd2:	8a 81       	ldd	r24, Y+2	; 0x02
 cd4:	9b 81       	ldd	r25, Y+3	; 0x03
 cd6:	00 97       	sbiw	r24, 0x00	; 0
 cd8:	19 f0       	breq	.+6      	; 0xce0 <free+0xe4>
 cda:	fe 01       	movw	r30, r28
 cdc:	ec 01       	movw	r28, r24
 cde:	f9 cf       	rjmp	.-14     	; 0xcd2 <free+0xd6>
 ce0:	ce 01       	movw	r24, r28
 ce2:	02 96       	adiw	r24, 0x02	; 2
 ce4:	28 81       	ld	r18, Y
 ce6:	39 81       	ldd	r19, Y+1	; 0x01
 ce8:	82 0f       	add	r24, r18
 cea:	93 1f       	adc	r25, r19
 cec:	20 91 d4 02 	lds	r18, 0x02D4
 cf0:	30 91 d5 02 	lds	r19, 0x02D5
 cf4:	28 17       	cp	r18, r24
 cf6:	39 07       	cpc	r19, r25
 cf8:	69 f4       	brne	.+26     	; 0xd14 <free+0x118>
 cfa:	30 97       	sbiw	r30, 0x00	; 0
 cfc:	29 f4       	brne	.+10     	; 0xd08 <free+0x10c>
 cfe:	10 92 d7 02 	sts	0x02D7, r1
 d02:	10 92 d6 02 	sts	0x02D6, r1
 d06:	02 c0       	rjmp	.+4      	; 0xd0c <free+0x110>
 d08:	13 82       	std	Z+3, r1	; 0x03
 d0a:	12 82       	std	Z+2, r1	; 0x02
 d0c:	d0 93 d5 02 	sts	0x02D5, r29
 d10:	c0 93 d4 02 	sts	0x02D4, r28
 d14:	df 91       	pop	r29
 d16:	cf 91       	pop	r28
 d18:	08 95       	ret

00000d1a <strnlen_P>:
 d1a:	fc 01       	movw	r30, r24
 d1c:	05 90       	lpm	r0, Z+
 d1e:	61 50       	subi	r22, 0x01	; 1
 d20:	70 40       	sbci	r23, 0x00	; 0
 d22:	01 10       	cpse	r0, r1
 d24:	d8 f7       	brcc	.-10     	; 0xd1c <strnlen_P+0x2>
 d26:	80 95       	com	r24
 d28:	90 95       	com	r25
 d2a:	8e 0f       	add	r24, r30
 d2c:	9f 1f       	adc	r25, r31
 d2e:	08 95       	ret

00000d30 <memset>:
 d30:	dc 01       	movw	r26, r24
 d32:	01 c0       	rjmp	.+2      	; 0xd36 <memset+0x6>
 d34:	6d 93       	st	X+, r22
 d36:	41 50       	subi	r20, 0x01	; 1
 d38:	50 40       	sbci	r21, 0x00	; 0
 d3a:	e0 f7       	brcc	.-8      	; 0xd34 <memset+0x4>
 d3c:	08 95       	ret

00000d3e <strnlen>:
 d3e:	fc 01       	movw	r30, r24
 d40:	61 50       	subi	r22, 0x01	; 1
 d42:	70 40       	sbci	r23, 0x00	; 0
 d44:	01 90       	ld	r0, Z+
 d46:	01 10       	cpse	r0, r1
 d48:	d8 f7       	brcc	.-10     	; 0xd40 <strnlen+0x2>
 d4a:	80 95       	com	r24
 d4c:	90 95       	com	r25
 d4e:	8e 0f       	add	r24, r30
 d50:	9f 1f       	adc	r25, r31
 d52:	08 95       	ret

00000d54 <fputc>:
 d54:	0f 93       	push	r16
 d56:	1f 93       	push	r17
 d58:	cf 93       	push	r28
 d5a:	df 93       	push	r29
 d5c:	18 2f       	mov	r17, r24
 d5e:	09 2f       	mov	r16, r25
 d60:	eb 01       	movw	r28, r22
 d62:	8b 81       	ldd	r24, Y+3	; 0x03
 d64:	81 fd       	sbrc	r24, 1
 d66:	03 c0       	rjmp	.+6      	; 0xd6e <fputc+0x1a>
 d68:	8f ef       	ldi	r24, 0xFF	; 255
 d6a:	9f ef       	ldi	r25, 0xFF	; 255
 d6c:	20 c0       	rjmp	.+64     	; 0xdae <fputc+0x5a>
 d6e:	82 ff       	sbrs	r24, 2
 d70:	10 c0       	rjmp	.+32     	; 0xd92 <fputc+0x3e>
 d72:	4e 81       	ldd	r20, Y+6	; 0x06
 d74:	5f 81       	ldd	r21, Y+7	; 0x07
 d76:	2c 81       	ldd	r18, Y+4	; 0x04
 d78:	3d 81       	ldd	r19, Y+5	; 0x05
 d7a:	42 17       	cp	r20, r18
 d7c:	53 07       	cpc	r21, r19
 d7e:	7c f4       	brge	.+30     	; 0xd9e <fputc+0x4a>
 d80:	e8 81       	ld	r30, Y
 d82:	f9 81       	ldd	r31, Y+1	; 0x01
 d84:	9f 01       	movw	r18, r30
 d86:	2f 5f       	subi	r18, 0xFF	; 255
 d88:	3f 4f       	sbci	r19, 0xFF	; 255
 d8a:	39 83       	std	Y+1, r19	; 0x01
 d8c:	28 83       	st	Y, r18
 d8e:	10 83       	st	Z, r17
 d90:	06 c0       	rjmp	.+12     	; 0xd9e <fputc+0x4a>
 d92:	e8 85       	ldd	r30, Y+8	; 0x08
 d94:	f9 85       	ldd	r31, Y+9	; 0x09
 d96:	81 2f       	mov	r24, r17
 d98:	19 95       	eicall
 d9a:	89 2b       	or	r24, r25
 d9c:	29 f7       	brne	.-54     	; 0xd68 <fputc+0x14>
 d9e:	2e 81       	ldd	r18, Y+6	; 0x06
 da0:	3f 81       	ldd	r19, Y+7	; 0x07
 da2:	2f 5f       	subi	r18, 0xFF	; 255
 da4:	3f 4f       	sbci	r19, 0xFF	; 255
 da6:	3f 83       	std	Y+7, r19	; 0x07
 da8:	2e 83       	std	Y+6, r18	; 0x06
 daa:	81 2f       	mov	r24, r17
 dac:	90 2f       	mov	r25, r16
 dae:	df 91       	pop	r29
 db0:	cf 91       	pop	r28
 db2:	1f 91       	pop	r17
 db4:	0f 91       	pop	r16
 db6:	08 95       	ret

00000db8 <__ultoa_invert>:
 db8:	fa 01       	movw	r30, r20
 dba:	aa 27       	eor	r26, r26
 dbc:	28 30       	cpi	r18, 0x08	; 8
 dbe:	51 f1       	breq	.+84     	; 0xe14 <__ultoa_invert+0x5c>
 dc0:	20 31       	cpi	r18, 0x10	; 16
 dc2:	81 f1       	breq	.+96     	; 0xe24 <__ultoa_invert+0x6c>
 dc4:	e8 94       	clt
 dc6:	6f 93       	push	r22
 dc8:	6e 7f       	andi	r22, 0xFE	; 254
 dca:	6e 5f       	subi	r22, 0xFE	; 254
 dcc:	7f 4f       	sbci	r23, 0xFF	; 255
 dce:	8f 4f       	sbci	r24, 0xFF	; 255
 dd0:	9f 4f       	sbci	r25, 0xFF	; 255
 dd2:	af 4f       	sbci	r26, 0xFF	; 255
 dd4:	b1 e0       	ldi	r27, 0x01	; 1
 dd6:	3e d0       	rcall	.+124    	; 0xe54 <__ultoa_invert+0x9c>
 dd8:	b4 e0       	ldi	r27, 0x04	; 4
 dda:	3c d0       	rcall	.+120    	; 0xe54 <__ultoa_invert+0x9c>
 ddc:	67 0f       	add	r22, r23
 dde:	78 1f       	adc	r23, r24
 de0:	89 1f       	adc	r24, r25
 de2:	9a 1f       	adc	r25, r26
 de4:	a1 1d       	adc	r26, r1
 de6:	68 0f       	add	r22, r24
 de8:	79 1f       	adc	r23, r25
 dea:	8a 1f       	adc	r24, r26
 dec:	91 1d       	adc	r25, r1
 dee:	a1 1d       	adc	r26, r1
 df0:	6a 0f       	add	r22, r26
 df2:	71 1d       	adc	r23, r1
 df4:	81 1d       	adc	r24, r1
 df6:	91 1d       	adc	r25, r1
 df8:	a1 1d       	adc	r26, r1
 dfa:	20 d0       	rcall	.+64     	; 0xe3c <__ultoa_invert+0x84>
 dfc:	09 f4       	brne	.+2      	; 0xe00 <__ultoa_invert+0x48>
 dfe:	68 94       	set
 e00:	3f 91       	pop	r19
 e02:	2a e0       	ldi	r18, 0x0A	; 10
 e04:	26 9f       	mul	r18, r22
 e06:	11 24       	eor	r1, r1
 e08:	30 19       	sub	r19, r0
 e0a:	30 5d       	subi	r19, 0xD0	; 208
 e0c:	31 93       	st	Z+, r19
 e0e:	de f6       	brtc	.-74     	; 0xdc6 <__ultoa_invert+0xe>
 e10:	cf 01       	movw	r24, r30
 e12:	08 95       	ret
 e14:	46 2f       	mov	r20, r22
 e16:	47 70       	andi	r20, 0x07	; 7
 e18:	40 5d       	subi	r20, 0xD0	; 208
 e1a:	41 93       	st	Z+, r20
 e1c:	b3 e0       	ldi	r27, 0x03	; 3
 e1e:	0f d0       	rcall	.+30     	; 0xe3e <__ultoa_invert+0x86>
 e20:	c9 f7       	brne	.-14     	; 0xe14 <__ultoa_invert+0x5c>
 e22:	f6 cf       	rjmp	.-20     	; 0xe10 <__ultoa_invert+0x58>
 e24:	46 2f       	mov	r20, r22
 e26:	4f 70       	andi	r20, 0x0F	; 15
 e28:	40 5d       	subi	r20, 0xD0	; 208
 e2a:	4a 33       	cpi	r20, 0x3A	; 58
 e2c:	18 f0       	brcs	.+6      	; 0xe34 <__ultoa_invert+0x7c>
 e2e:	49 5d       	subi	r20, 0xD9	; 217
 e30:	31 fd       	sbrc	r19, 1
 e32:	40 52       	subi	r20, 0x20	; 32
 e34:	41 93       	st	Z+, r20
 e36:	02 d0       	rcall	.+4      	; 0xe3c <__ultoa_invert+0x84>
 e38:	a9 f7       	brne	.-22     	; 0xe24 <__ultoa_invert+0x6c>
 e3a:	ea cf       	rjmp	.-44     	; 0xe10 <__ultoa_invert+0x58>
 e3c:	b4 e0       	ldi	r27, 0x04	; 4
 e3e:	a6 95       	lsr	r26
 e40:	97 95       	ror	r25
 e42:	87 95       	ror	r24
 e44:	77 95       	ror	r23
 e46:	67 95       	ror	r22
 e48:	ba 95       	dec	r27
 e4a:	c9 f7       	brne	.-14     	; 0xe3e <__ultoa_invert+0x86>
 e4c:	00 97       	sbiw	r24, 0x00	; 0
 e4e:	61 05       	cpc	r22, r1
 e50:	71 05       	cpc	r23, r1
 e52:	08 95       	ret
 e54:	9b 01       	movw	r18, r22
 e56:	ac 01       	movw	r20, r24
 e58:	0a 2e       	mov	r0, r26
 e5a:	06 94       	lsr	r0
 e5c:	57 95       	ror	r21
 e5e:	47 95       	ror	r20
 e60:	37 95       	ror	r19
 e62:	27 95       	ror	r18
 e64:	ba 95       	dec	r27
 e66:	c9 f7       	brne	.-14     	; 0xe5a <__ultoa_invert+0xa2>
 e68:	62 0f       	add	r22, r18
 e6a:	73 1f       	adc	r23, r19
 e6c:	84 1f       	adc	r24, r20
 e6e:	95 1f       	adc	r25, r21
 e70:	a0 1d       	adc	r26, r0
 e72:	08 95       	ret

00000e74 <_exit>:
 e74:	f8 94       	cli

00000e76 <__stop_program>:
 e76:	ff cf       	rjmp	.-2      	; 0xe76 <__stop_program>
